{
	"schemaVersion": "2.0.0",
	"contractName": "OperatorAccess",
	"compilerOutput": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "isActiveOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "isOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "deactivateOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "hasActiveOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "activateOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getOperator",
				"outputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "OperatorUpdated",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50610418806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063923b176211610050578063923b1762146100fb578063ab66d81414610103578063e7f43c681461010b57610072565b80633367cca5146100775780636d70f7ae146100be578063706be4ca146100f1575b600080fd5b6100aa6004803603602081101561008d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661013c565b604080519115158252519081900360200190f35b6100aa600480360360208110156100d457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661015c565b6100f961019b565b005b6100aa6101a5565b6100f96101c6565b6101136101ce565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60006101478261015c565b801561015657506101566101a5565b92915050565b60006101666101ce565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6101a36101ea565b565b60005474010000000000000000000000000000000000000000900460ff1690565b6101a36102db565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b6101f26101a5565b61025d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6f6e6c79207768656e206f70657261746f722061637469766500000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff811682556040805173ffffffffffffffffffffffffffffffffffffffff9092168252602082019290925281517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d929181900390910190a1565b6102e36101a5565b1561034f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6f6e6c79207768656e206f70657261746f72206e6f7420616374697665000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017908190556040805173ffffffffffffffffffffffffffffffffffffffff90921682526001602083015280517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9281900390910190a156fea265627a7a7231582096fe8e12973225abe5a4f9a8ca33da1bc3d923f13590bdc778c971c9cbd1f1ca64736f6c634300050b0032",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x418 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x923B1762 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x923B1762 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xAB66D814 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE7F43C68 EQ PUSH2 0x10B JUMPI PUSH2 0x72 JUMP JUMPDEST DUP1 PUSH4 0x3367CCA5 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x706BE4CA EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15C JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x147 DUP3 PUSH2 0x15C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x156 JUMPI POP PUSH2 0x156 PUSH2 0x1A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH2 0x1CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x25D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207768656E206F70657261746F722061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x1A5 JUMP JUMPDEST ISZERO PUSH2 0x34F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207768656E206F70657261746F72206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP7 INVALID DUP15 SLT SWAP8 ORIGIN 0x25 0xab 0xe5 LOG4 0xf9 0xa8 0xca CALLER 0xda SHL 0xc3 0xd9 0x23 CALL CALLDATALOAD SWAP1 0xbd 0xc7 PUSH25 0xC971C9CBD1F1CA64736F6C634300050B003200000000000000 ",
				"sourceMap": "60:334:42:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:334:42;;;;;;;"
			}
		}
	},
	"sources": {
		"test-contracts/OperatorAccess.sol": {
			"id": 42
		},
		"modules/Operated.sol": {
			"id": 24
		}
	},
	"sourceCodes": {
		"test-contracts/OperatorAccess.sol": "pragma solidity ^0.5.0;\n\nimport \"../modules/Operated.sol\";\n\ncontract OperatorAccess is Operated {\n\n    // backdoor function to deactivate Operator for testing\n    function deactivateOperator() public {\n        Operated._deactivateOperator();\n    }\n\n    // backdoor function to activate Operator for testing\n    function activateOperator() public {\n        Operated._activateOperator();\n    }\n\n}\n",
		"modules/Operated.sol": "pragma solidity ^0.5.0;\n\n\ncontract Operated {\n\n    address private _operator;\n    bool private _status;\n\n    event OperatorUpdated(address operator, bool status);\n\n    // state functions\n\n    function _setOperator(address operator) internal {\n        require(_operator != operator, \"cannot set same operator\");\n        _operator = operator;\n        emit OperatorUpdated(operator, hasActiveOperator());\n    }\n\n    function _transferOperator(address operator) internal {\n        // transferring operator-ship implies there was an operator set before this\n        require(_operator != address(0), \"operator not set\");\n        _setOperator(operator);\n    }\n\n    function _renounceOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _operator = address(0);\n        _status = false;\n        emit OperatorUpdated(address(0), false);\n    }\n\n    function _activateOperator() internal {\n        require(!hasActiveOperator(), \"only when operator not active\");\n        _status = true;\n        emit OperatorUpdated(_operator, true);\n    }\n\n    function _deactivateOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _status = false;\n        emit OperatorUpdated(_operator, false);\n    }\n\n    // view functions\n\n    function getOperator() public view returns (address operator) {\n        operator = _operator;\n    }\n\n    function isOperator(address caller) public view returns (bool ok) {\n        return (caller == getOperator());\n    }\n\n    function hasActiveOperator() public view returns (bool ok) {\n        return _status;\n    }\n\n    function isActiveOperator(address caller) public view returns (bool ok) {\n        return (isOperator(caller) && hasActiveOperator());\n    }\n\n}\n"
	},
	"sourceTreeHashHex": "0xbc819f72bf52f67342241fb60a48ad68503b8028b00dbcc2c4d8949b2975d2de",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.11+commit.c082d0b4.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999999999
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"networks": {}
}