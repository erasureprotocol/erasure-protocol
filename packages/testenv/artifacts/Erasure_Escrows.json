{
	"schemaVersion": "2.0.0",
	"contractName": "Erasure_Escrows",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "addFactory",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getInstanceType",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "instanceType",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint16",
						"name": "factoryID",
						"type": "uint16"
					}
				],
				"name": "getFactoryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"name": "getFactoryData",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"name": "getFactory",
				"outputs": [
					{
						"internalType": "enum Registry.FactoryStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint16",
						"name": "factoryID",
						"type": "uint16"
					},
					{
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"name": "retireFactory",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getFactories",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "factories",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "startIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endIndex",
						"type": "uint256"
					}
				],
				"name": "getPaginatedFactories",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "factories",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"name": "getFactoryID",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "factoryID",
						"type": "uint16"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getInstanceCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "startIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endIndex",
						"type": "uint256"
					}
				],
				"name": "getPaginatedInstances",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "instances",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "instance",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"internalType": "uint80",
						"name": "extraData",
						"type": "uint80"
					}
				],
				"name": "register",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getFactoryCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getInstances",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "instances",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getInstance",
				"outputs": [
					{
						"internalType": "address",
						"name": "instance",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getInstanceData",
				"outputs": [
					{
						"internalType": "address",
						"name": "instanceAddress",
						"type": "address"
					},
					{
						"internalType": "uint16",
						"name": "factoryID",
						"type": "uint16"
					},
					{
						"internalType": "uint80",
						"name": "extraData",
						"type": "uint80"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "factory",
						"type": "address"
					}
				],
				"name": "getFactoryStatus",
				"outputs": [
					{
						"internalType": "enum Registry.FactoryStatus",
						"name": "status",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "factoryID",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "extraData",
						"type": "bytes"
					}
				],
				"name": "FactoryAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "factoryID",
						"type": "uint256"
					}
				],
				"name": "FactoryRetired",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "instance",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "factory",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "instanceIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "factoryID",
						"type": "uint256"
					}
				],
				"name": "InstanceRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50604080518082018252600681527f457363726f7700000000000000000000000000000000000000000000000000006020820152600080546001600160a01b0319163317808255925191926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380516020909101206003805463ffffffff191660e09290921c9190911790556119bb806100b86000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638f32d59b116100d8578063d10474341161008c578063f12d27bf11610066578063f12d27bf146105e7578063f2fde38b14610648578063f795ab751461067b57610177565b8063d1047434146105ba578063d35fdd79146105c2578063ebd348de146105ca57610177565b8063ae34325c116100bd578063ae34325c1461052d578063b71f2e7214610547578063bba83f641461056a57610177565b80638f32d59b146104c7578063a826eb1e146104e357610177565b806363e5a6701161012f5780637e6cbb6a116101145780637e6cbb6a14610444578063866096521461049c5780638da5cb5b146104bf57610177565b806363e5a67014610409578063715018a61461043c57610177565b806332e04be31161016057806332e04be31461024857806345bdfb1e146102925780635e994dca1461033a57610177565b806314ad01441461017c57806318c2f4cf1461020b575b600080fd5b6102096004803603604081101561019257600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156101ca57600080fd5b8201836020820111156101dc57600080fd5b803590602001918460018302840111640100000000831117156101fe57600080fd5b5090925090506106d2565b005b610213610954565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6102696004803603602081101561025e57600080fd5b503561ffff1661095d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102c5600480360360208110156102a857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610998565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ff5781810151838201526020016102e7565b50505050905090810190601f16801561032c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61036d6004803603602081101561035057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a6f565b6040518084600281111561037d57fe5b60ff1681526020018361ffff1661ffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103cc5781810151838201526020016103b4565b50505050905090810190601f1680156103f95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6102096004803603602081101561041f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610baf565b610209610d3c565b61044c610e1e565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610488578181015183820152602001610470565b505050509050019250505060405180910390f35b61044c600480360360408110156104b257600080fd5b5080359060200135610e8d565b61026961100e565b6104cf61102b565b604080519115158252519081900360200190f35b610516600480360360208110156104f957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611049565b6040805161ffff9092168252519081900360200190f35b61053561107a565b60408051918252519081900360200190f35b61044c6004803603604081101561055d57600080fd5b5080359060200135611080565b6102096004803603606081101561058057600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff908116916020810135909116906040013569ffffffffffffffffffff166111f5565b6105356113f0565b61044c6113f6565b610269600480360360208110156105e057600080fd5b50356114aa565b610604600480360360208110156105fd57600080fd5b503561152a565b6040805173ffffffffffffffffffffffffffffffffffffffff909416845261ffff909216602084015269ffffffffffffffffffff1682820152519081900360600190f35b6102096004803603602081101561065e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611647565b6106ae6004803603602081101561069157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166116c6565b604051808260028111156106be57fe5b60ff16815260200191505060405180910390f35b6106da61102b565b61074557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040812090815460ff16600281111561077b57fe5b146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806119096036913960400191505060405180910390fd5b6001805482547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff1661010061ffff8316021783559061083790830185856117ea565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091556040805133808252602082019390935261ffff8416918101919091526080606082018181529082018690527f2b60b760542791ba21c4029237f2aa264a5731131d53872f4689f7113e8a7704929188918591899189919060a08201848480828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039850909650505050505050a15050505050565b60035460e01b90565b600060018261ffff168154811061097057fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1692915050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602081815260409283902060019081018054855192811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff011693909304601f8101839004830282018301909452838152606093909291830182828015610a635780601f10610a3857610100808354040283529160200191610a63565b820191906000526020600020905b815481529060010190602001808311610a4657829003601f168201915b50505050509050919050565b6000806060610a7c611886565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602081905260409182902082516060810190935280549091839160ff1690811115610ac157fe5b6002811115610acc57fe5b815281546101009081900461ffff1660208084019190915260018085018054604080516002948316159096027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190911692909204601f81018490048402850184018352808552919094019391830182828015610b8a5780601f10610b5f57610100808354040283529160200191610b8a565b820191906000526020600020905b815481529060010190602001808311610b6d57829003601f168201915b5050509190925250508151602083015160409093015190989297509550909350505050565b610bb761102b565b610c2257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604090206001815460ff166002811115610c5957fe5b14610caf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119646023913960400191505060405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002178082556040805133815273ffffffffffffffffffffffffffffffffffffffff8516602082015261ffff6101009093049290921682820152517fb2efe2b3bb8a6c15454da20cd3d82d0380c15bc3df9ebbb767ddeca18b75e3a89181900360600190a15050565b610d4461102b565b610daf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60606001805480602002602001604051908101604052809291908181526020018280548015610e8357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e58575b5050505050905090565b6060818310610ee7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061193f6025913960400191505060405180910390fd5b600154821115610f5857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f656e6420696e646578206f7574206f662072616e676500000000000000000000604482015290519081900360640190fd5b6060838303604051908082528060200260200182016040528015610f86578160200160208202803883390190505b509050835b838110156110065760018181548110610fa057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168286830381518110610fd957fe5b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101610f8b565b509392505050565b60005473ffffffffffffffffffffffffffffffffffffffff165b90565b60005473ffffffffffffffffffffffffffffffffffffffff16331490565b73ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902054610100900461ffff1690565b60045490565b60608183106110da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061193f6025913960400191505060405180910390fd5b60045482111561114b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f656e6420696e646578206f7574206f662072616e676500000000000000000000604482015290519081900360640190fd5b6060838303604051908082528060200260200182016040528015611179578160200160208202803883390190505b509050835b83811015611006576004818154811061119357fe5b600091825260209091200154825173ffffffffffffffffffffffffffffffffffffffff9091169083908784039081106111c857fe5b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015260010161117e565b60008061120133610a6f565b509092509050600182600281111561121557fe5b1461128157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f666163746f727920696e2077726f6e6720737461747573000000000000000000604482015290519081900360640190fd5b600480546040805160608101825273ffffffffffffffffffffffffffffffffffffffff808a1680835261ffff808816602080860182815269ffffffffffffffffffff808e16888a0190815260018b018c5560009b909b5296517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8a01805492519b519098167601000000000000000000000000000000000000000000000275ffffffffffffffffffffffffffffffffffffffffffff9b90951674010000000000000000000000000000000000000000027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff9188167fffffffffffffffffffffffff00000000000000000000000000000000000000009093169290921716179890981691909117909355835185815295860192909252825193949089169333937fb35ceb7181267b8ad385c9c8b08bb23bf2580e751105dd463d17602effb42716928290030190a4505050505050565b60015490565b600454604080518281526020808402820101909152606091908290828015611428578160200160208202803883390190505b50905060005b828110156114a3576004818154811061144357fe5b600091825260209091200154825173ffffffffffffffffffffffffffffffffffffffff9091169083908390811061147657fe5b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015260010161142e565b5092915050565b600454600090821061151d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f696e646578206f7574206f662072616e67650000000000000000000000000000604482015290519081900360640190fd5b6004828154811061097057fe5b600080600060048054905084106115a257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f696e646578206f7574206f662072616e67650000000000000000000000000000604482015290519081900360640190fd5b6115aa6118a8565b600485815481106115b757fe5b600091825260209182902060408051606081018252929091015473ffffffffffffffffffffffffffffffffffffffff811680845274010000000000000000000000000000000000000000820461ffff1694840185905276010000000000000000000000000000000000000000000090910469ffffffffffffffffffff169290910182905297919650945092505050565b61164f61102b565b6116ba57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6116c3816116f1565b50565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205460ff1690565b73ffffffffffffffffffffffffffffffffffffffff811661175d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806118e36026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611849578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611876565b82800160010185558215611876579182015b8281111561187657823582559160200191906001019061185b565b506118829291506118c8565b5090565b6040805160608101909152806000815260006020820152606060409091015290565b604080516060810182526000808252602082018190529181019190915290565b61102891905b8082111561188257600081556001016118ce56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373666163746f727920616c726561647920657869737473206174207468652070726f766964656420666163746f727920616464726573737374617274496e646578206d757374206265206c657373207468616e20656e64496e646578666163746f7279206973206e6f742063757272656e746c792072656769737465726564a265627a7a72315820d21558c6c0e9e07610f19e8dc297af1cd36e0eeab27d48f575e6c7a5a7b3eadf64736f6c634300050b0032",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH32 0x457363726F770000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x3 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x19BB DUP1 PUSH2 0xB8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x177 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD1047434 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF12D27BF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF12D27BF EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xF795AB75 EQ PUSH2 0x67B JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0xD1047434 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xD35FDD79 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xEBD348DE EQ PUSH2 0x5CA JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0xAE34325C GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xAE34325C EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xB71F2E72 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xBBA83F64 EQ PUSH2 0x56A JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xA826EB1E EQ PUSH2 0x4E3 JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x63E5A670 GT PUSH2 0x12F JUMPI DUP1 PUSH4 0x7E6CBB6A GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x7E6CBB6A EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x86609652 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BF JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x63E5A670 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43C JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x32E04BE3 GT PUSH2 0x160 JUMPI DUP1 PUSH4 0x32E04BE3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x45BDFB1E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x5E994DCA EQ PUSH2 0x33A JUMPI PUSH2 0x177 JUMP JUMPDEST DUP1 PUSH4 0x14AD0144 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18C2F4CF EQ PUSH2 0x20B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x998 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2FF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x32C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x37D JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x209 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x44C PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x488 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x470 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x269 PUSH2 0x100E JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x44C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x535 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x6AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6BE JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DA PUSH2 0x102B JUMP JUMPDEST PUSH2 0x745 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x77B JUMPI INVALID JUMPDEST EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1909 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF AND PUSH2 0x100 PUSH2 0xFFFF DUP4 AND MUL OR DUP4 SSTORE SWAP1 PUSH2 0x837 SWAP1 DUP4 ADD DUP6 DUP6 PUSH2 0x17EA JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH2 0xFFFF DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE SWAP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x2B60B760542791BA21C4029237F2AA264A5731131D53872F4689F7113E8A7704 SWAP3 SWAP2 DUP9 SWAP2 DUP6 SWAP2 DUP10 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0xA0 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP9 POP SWAP1 SWAP7 POP POP POP POP POP POP POP LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0xFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x970 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD DUP6 MLOAD SWAP3 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP3 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP4 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0xA7C PUSH2 0x1886 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xAC1 JUMPI INVALID JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xACC JUMPI INVALID JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP5 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD DUP4 MSTORE DUP1 DUP6 MSTORE SWAP2 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP9 SWAP3 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBB7 PUSH2 0x102B JUMP JUMPDEST PUSH2 0xC22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC59 JUMPI INVALID JUMPDEST EQ PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1964 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x2 OR DUP1 DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xFFFF PUSH2 0x100 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 AND DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0xB2EFE2B3BB8A6C15454DA20CD3D82D0380C15BC3DF9EBBB767DDECA18B75E3A8 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x102B JUMP JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE83 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE58 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 LT PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x193F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0xF58 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656E6420696E646578206F7574206F662072616E676500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 DUP4 SUB PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFA0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP7 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0xFD9 JUMPI INVALID JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0xF8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 LT PUSH2 0x10DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x193F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP3 GT ISZERO PUSH2 0x114B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656E6420696E646578206F7574206F662072616E676500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 DUP4 SUB PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1179 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1193 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP8 DUP5 SUB SWAP1 DUP2 LT PUSH2 0x11C8 JUMPI INVALID JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x117E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1201 CALLER PUSH2 0xA6F JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1215 JUMPI INVALID JUMPDEST EQ PUSH2 0x1281 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x666163746F727920696E2077726F6E6720737461747573000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP11 AND DUP1 DUP4 MSTORE PUSH2 0xFFFF DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP7 ADD DUP3 DUP2 MSTORE PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP1 DUP15 AND DUP9 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP12 ADD DUP13 SSTORE PUSH1 0x0 SWAP12 SWAP1 SWAP12 MSTORE SWAP7 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B DUP11 ADD DUP1 SLOAD SWAP3 MLOAD SWAP12 MLOAD SWAP1 SWAP9 AND PUSH23 0x100000000000000000000000000000000000000000000 MUL PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP12 SWAP1 SWAP6 AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP9 SWAP1 SWAP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP6 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP4 SWAP5 SWAP1 DUP10 AND SWAP4 CALLER SWAP4 PUSH32 0xB35CEB7181267B8AD385C9C8B08BB23BF2580E751105DD463D17602EFFB42716 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 DUP3 SWAP1 DUP3 DUP1 ISZERO PUSH2 0x1428 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1443 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1476 JUMPI INVALID JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x142E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x151D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E646578206F7574206F662072616E67650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x970 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x15A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E646578206F7574206F662072616E67650000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x15AA PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x15B7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 DUP5 MSTORE PUSH21 0x10000000000000000000000000000000000000000 DUP3 DIV PUSH2 0xFFFF AND SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH23 0x100000000000000000000000000000000000000000000 SWAP1 SWAP2 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP8 SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x164F PUSH2 0x102B JUMP JUMPDEST PUSH2 0x16BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x16F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18E3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1849 JUMPI DUP3 DUP1 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x1876 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1876 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1876 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x185B JUMP JUMPDEST POP PUSH2 0x1882 SWAP3 SWAP2 POP PUSH2 0x18C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x1028 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1882 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18CE JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373666163746F727920616C726561647920 PUSH6 0x786973747320 PUSH2 0x7420 PUSH21 0x68652070726F766964656420666163746F72792061 PUSH5 0x6472657373 PUSH20 0x74617274496E646578206D757374206265206C65 PUSH20 0x73207468616E20656E64496E646578666163746F PUSH19 0x79206973206E6F742063757272656E746C7920 PUSH19 0x656769737465726564A265627A7A72315820D2 ISZERO PC 0xc6 0xc0 0xe9 0xe0 PUSH23 0x10F19E8DC297AF1CD36E0EEAB27D48F575E6C7A5A7B3EA 0xdf PUSH5 0x736F6C6343 STOP SDIV SIGNEXTEND STOP ORIGIN ",
				"sourceMap": "61:94:39:-;;;105:48;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;885:118:27;;;;;;;;;;;;;;;;-1:-1:-1;658:19:13;;-1:-1:-1;;;;;;658:19:13;667:10;658:19;;;;692:40;;885:118:27;;-1:-1:-1;;;;;725:6:13;;692:40;;-1:-1:-1;;692:40:13;965:30:27;;;;;;;942:13;:54;;-1:-1:-1;;942:54:27;;;;;;;;;;;;61:94:39;;;-1:-1:-1;61:94:39;;"
			}
		}
	},
	"sources": {
		"registries/Erasure_Escrows.sol": {
			"id": 39
		},
		"modules/Registry.sol": {
			"id": 27
		},
		"helpers/openzeppelin-solidity/ownership/Ownable.sol": {
			"id": 13
		}
	},
	"sourceCodes": {
		"registries/Erasure_Escrows.sol": "pragma solidity ^0.5.0;\n\nimport \"../modules/Registry.sol\";\n\n\ncontract Erasure_Escrows is Registry {\n\n    constructor() public Registry('Escrow') {\n\n    }\n}\n",
		"modules/Registry.sol": "pragma solidity ^0.5.0;\n\nimport \"../helpers/openzeppelin-solidity/ownership/Ownable.sol\";\n\n\ncontract Registry is Ownable {\n\n    enum FactoryStatus { Unregistered, Registered, Retired }\n\n    event FactoryAdded(address owner, address factory, uint256 factoryID, bytes extraData);\n    event FactoryRetired(address owner, address factory, uint256 factoryID);\n    event InstanceRegistered(address indexed instance, address indexed factory, address indexed creator, uint256 instanceIndex, uint256 factoryID);\n\n    address[] private _factoryList;\n    mapping(address => Factory) private _factoryData;\n\n    struct Factory {\n        FactoryStatus status;\n        uint16 factoryID;\n        bytes extraData;\n    }\n\n    bytes4 private _instanceType;\n    Instance[] private _instances;\n\n    struct Instance {\n        address instance;\n        uint16 factoryID;\n        uint80 extraData;\n    }\n\n    constructor(string memory instanceType) public {\n        _instanceType = bytes4(keccak256(bytes(instanceType)));\n    }\n\n    // factory state functions\n\n    function addFactory(\n        address factory,\n        bytes calldata extraData\n    ) external onlyOwner() {\n        // get the factory object from storage.\n        Factory storage factoryData = _factoryData[factory];\n\n        // ensure that the provided factory is new.\n        require(\n            factoryData.status == FactoryStatus.Unregistered,\n            \"factory already exists at the provided factory address\"\n        );\n\n        // get the factoryID of the new factory.\n        uint16 factoryID = uint16(_factoryList.length);\n\n        // set all of the information for the new factory.\n        factoryData.status = FactoryStatus.Registered;\n        factoryData.factoryID = factoryID;\n        factoryData.extraData = extraData;\n\n        _factoryList.push(factory);\n\n        // emit an event.\n        emit FactoryAdded(msg.sender, factory, factoryID, extraData);\n    }\n\n    function retireFactory(\n        address factory\n    ) external onlyOwner() {\n        // get the factory object from storage.\n        Factory storage factoryData = _factoryData[factory];\n\n        // ensure that the provided factory is new and not already retired.\n        require(\n            factoryData.status == FactoryStatus.Registered,\n            \"factory is not currently registered\"\n        );\n\n        // retire the factory.\n        factoryData.status = FactoryStatus.Retired;\n\n        emit FactoryRetired(msg.sender, factory, factoryData.factoryID);\n    }\n\n    // factory view functions\n\n    function getFactoryCount() external view returns (uint256 count) {\n        count = _factoryList.length;\n    }\n\n    function getFactoryStatus(address factory) external view returns (FactoryStatus status) {\n        status = _factoryData[factory].status;\n    }\n\n    function getFactoryID(address factory) external view returns (uint16 factoryID) {\n        factoryID = _factoryData[factory].factoryID;\n    }\n\n    function getFactoryData(address factory) external view returns (bytes memory extraData) {\n        extraData = _factoryData[factory].extraData;\n    }\n\n    function getFactoryAddress(uint16 factoryID) external view returns (address factory) {\n        factory = _factoryList[factoryID];\n    }\n\n    function getFactory(address factory) public view returns (\n        FactoryStatus status,\n        uint16 factoryID,\n        bytes memory extraData\n    ) {\n        Factory memory factoryData = _factoryData[factory];\n        status = factoryData.status;\n        factoryID = factoryData.factoryID;\n        extraData = factoryData.extraData;\n    }\n\n    function getFactories() external view returns (address[] memory factories) {\n        factories = _factoryList;\n    }\n\n    // Note: startIndex is inclusive, endIndex exclusive\n    function getPaginatedFactories(uint256 startIndex, uint256 endIndex) external view returns (address[] memory factories) {\n        require(startIndex < endIndex, \"startIndex must be less than endIndex\");\n        require(endIndex <= _factoryList.length, \"end index out of range\");\n\n        // initialize fixed size memory array\n        address[] memory range = new address[](endIndex - startIndex);\n\n        // Populate array with addresses in range\n        for (uint256 i = startIndex; i < endIndex; i++) {\n            range[i - startIndex] = _factoryList[i];\n        }\n\n        // return array of addresses\n        factories = range;\n    }\n\n    // instance state functions\n\n    function register(address instance, address creator, uint80 extraData) external {\n        (\n            FactoryStatus status,\n            uint16 factoryID,\n            // bytes memory extraData\n        ) = getFactory(msg.sender);\n\n        // ensure that the caller is a registered factory\n        require(\n            status == FactoryStatus.Registered,\n            \"factory in wrong status\"\n        );\n\n        uint256 instanceIndex = _instances.length;\n        _instances.push(\n            Instance({\n                instance: instance,\n                factoryID: factoryID,\n                extraData: extraData\n            })\n        );\n\n        emit InstanceRegistered(instance, msg.sender, creator, instanceIndex, factoryID);\n    }\n\n    // instance view functions\n\n    function getInstanceType() external view returns (bytes4 instanceType) {\n        instanceType = _instanceType;\n    }\n\n    function getInstanceCount() external view returns (uint256 count) {\n        count = _instances.length;\n    }\n\n    function getInstance(uint256 index) external view returns (address instance) {\n        require(index < _instances.length, \"index out of range\");\n        instance = _instances[index].instance;\n    }\n\n    function getInstanceData(uint256 index) external view\n        returns (address instanceAddress, uint16 factoryID, uint80 extraData) {\n\n        require(index < _instances.length, \"index out of range\");\n\n        Instance memory instance = _instances[index];\n        instanceAddress = instance.instance;\n        factoryID = instance.factoryID;\n        extraData = instance.extraData;\n    }\n\n    function getInstances() external view returns (address[] memory instances) {\n        uint256 length = _instances.length;\n        address[] memory addresses = new address[](length);\n\n        // Populate array with addresses in range\n        for (uint256 i = 0; i < length; i++) {\n            addresses[i] = _instances[i].instance;\n        }\n        instances = addresses;\n    }\n\n    // Note: startIndex is inclusive, endIndex exclusive\n    function getPaginatedInstances(uint256 startIndex, uint256 endIndex) external view returns (address[] memory instances) {\n        require(startIndex < endIndex, \"startIndex must be less than endIndex\");\n        require(endIndex <= _instances.length, \"end index out of range\");\n\n        // initialize fixed size memory array\n        address[] memory range = new address[](endIndex - startIndex);\n\n        // Populate array with addresses in range\n        for (uint256 i = startIndex; i < endIndex; i++) {\n            range[i - startIndex] = _instances[i].instance;\n        }\n\n        // return array of addresses\n        instances = range;\n    }\n}\n",
		"helpers/openzeppelin-solidity/ownership/Ownable.sol": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
	},
	"sourceTreeHashHex": "0x5490d744160bfeb29512e2454104d5ce7815d73874aa8ab98e46abe7f1124262",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.11+commit.c082d0b4.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999999999
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"networks": {}
}