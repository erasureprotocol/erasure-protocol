{
	"schemaVersion": "2.0.0",
	"contractName": "TestOperated",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOperator",
						"type": "address"
					}
				],
				"name": "transferOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "isActiveOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "isOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "deactivateOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "hasActiveOperator",
				"outputs": [
					{
						"internalType": "bool",
						"name": "ok",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "activateOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "setOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getOperator",
				"outputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "OperatorUpdated",
				"type": "event"
			}
		],
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50610756806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063706be4ca11610076578063ab66d8141161005b578063ab66d8141461016f578063b3ab15fb14610177578063e7f43c68146101aa576100a3565b8063706be4ca1461015f578063923b176214610167576100a3565b806329605e77146100a85780632ab6f8db146100dd5780633367cca5146100e55780636d70f7ae1461012c575b600080fd5b6100db600480360360208110156100be57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101db565b005b6100db6101e7565b610118600480360360208110156100fb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166101f1565b604080519115158252519081900360200190f35b6101186004803603602081101561014257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610211565b6100db610250565b610118610258565b6100db610279565b6100db6004803603602081101561018d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610281565b6101b261028a565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e4816102a6565b50565b6101ef61032a565b565b60006101fc82610211565b801561020b575061020b610258565b92915050565b600061021b61028a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6101ef610402565b60005474010000000000000000000000000000000000000000900460ff1690565b6101ef6104f3565b6101e4816105fb565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1661028157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6f70657261746f72206e6f742073657400000000000000000000000000000000604482015290519081900360640190fd5b610332610258565b61039d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6f6e6c79207768656e206f70657261746f722061637469766500000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffff00000000000000000000000000000000000000000016815560408051828152602081019290925280517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9281900390910190a1565b61040a610258565b61047557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6f6e6c79207768656e206f70657261746f722061637469766500000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff811682556040805173ffffffffffffffffffffffffffffffffffffffff9092168252602082019290925281517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d929181900390910190a1565b6104fb610258565b1561056757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6f6e6c79207768656e206f70657261746f72206e6f7420616374697665000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017908190556040805173ffffffffffffffffffffffffffffffffffffffff90921682526001602083015280517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9281900390910190a1565b60005473ffffffffffffffffffffffffffffffffffffffff8281169116141561068557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f63616e6e6f74207365742073616d65206f70657261746f720000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790557f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d816106ef610258565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835290151560208301528051918290030190a15056fea265627a7a72315820c894ce14b63428335c540241fe2f3bc65a136d4600708d9cd119cd728423347864736f6c634300050b0032",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x756 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x706BE4CA GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xAB66D814 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xAB66D814 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xE7F43C68 EQ PUSH2 0x1AA JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x706BE4CA EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x923B1762 EQ PUSH2 0x167 JUMPI PUSH2 0xA3 JUMP JUMPDEST DUP1 PUSH4 0x29605E77 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x2AB6F8DB EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x3367CCA5 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDB PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x211 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x250 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x258 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x279 JUMP JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x2A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x32A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC DUP3 PUSH2 0x211 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20B JUMPI POP PUSH2 0x20B PUSH2 0x258 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B PUSH2 0x28A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x402 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1EF PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x1E4 DUP2 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F70657261746F72206E6F742073657400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x332 PUSH2 0x258 JUMP JUMPDEST PUSH2 0x39D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207768656E206F70657261746F722061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x40A PUSH2 0x258 JUMP JUMPDEST PUSH2 0x475 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207768656E206F70657261746F722061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x4FB PUSH2 0x258 JUMP JUMPDEST ISZERO PUSH2 0x567 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207768656E206F70657261746F72206E6F7420616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x685 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742073616D65206F70657261746F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH32 0x966C160E1C4DBC7DF8D69AF4ACE01E9297C3CF016397B7914971F2FBFA32672D DUP2 PUSH2 0x6EF PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xc8 SWAP5 0xce EQ 0xb6 CALLVALUE 0x28 CALLER 0x5c SLOAD MUL COINBASE INVALID 0x2f EXTCODESIZE 0xc6 GAS SGT PUSH14 0x4600708D9CD119CD728423347864 PUSH20 0x6F6C634300050B00320000000000000000000000 ",
				"sourceMap": "60:633:47:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:633:47;;;;;;;"
			}
		}
	},
	"sources": {
		"test-contracts/TestOperated.sol": {
			"id": 47
		},
		"modules/Operated.sol": {
			"id": 24
		}
	},
	"sourceCodes": {
		"test-contracts/TestOperated.sol": "pragma solidity ^0.5.0;\n\nimport \"../modules/Operated.sol\";\n\ncontract TestOperated is Operated {\n\n    function setOperator(address operator) public {\n        Operated._setOperator(operator);\n    }\n\n    function activateOperator() public {\n    // backdoor function to activate Operator for testing\n        Operated._activateOperator();\n    }\n\n    function deactivateOperator() public {\n    // backdoor function to deactivate Operator for testing\n        Operated._deactivateOperator();\n    }\n\n    function renounceOperator() public {\n        Operated._renounceOperator();\n    }\n\n    function transferOperator(address newOperator) public {\n        Operated._transferOperator(newOperator);\n    }\n}\n",
		"modules/Operated.sol": "pragma solidity ^0.5.0;\n\n\ncontract Operated {\n\n    address private _operator;\n    bool private _status;\n\n    event OperatorUpdated(address operator, bool status);\n\n    // state functions\n\n    function _setOperator(address operator) internal {\n        require(_operator != operator, \"cannot set same operator\");\n        _operator = operator;\n        emit OperatorUpdated(operator, hasActiveOperator());\n    }\n\n    function _transferOperator(address operator) internal {\n        // transferring operator-ship implies there was an operator set before this\n        require(_operator != address(0), \"operator not set\");\n        _setOperator(operator);\n    }\n\n    function _renounceOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _operator = address(0);\n        _status = false;\n        emit OperatorUpdated(address(0), false);\n    }\n\n    function _activateOperator() internal {\n        require(!hasActiveOperator(), \"only when operator not active\");\n        _status = true;\n        emit OperatorUpdated(_operator, true);\n    }\n\n    function _deactivateOperator() internal {\n        require(hasActiveOperator(), \"only when operator active\");\n        _status = false;\n        emit OperatorUpdated(_operator, false);\n    }\n\n    // view functions\n\n    function getOperator() public view returns (address operator) {\n        operator = _operator;\n    }\n\n    function isOperator(address caller) public view returns (bool ok) {\n        return (caller == getOperator());\n    }\n\n    function hasActiveOperator() public view returns (bool ok) {\n        return _status;\n    }\n\n    function isActiveOperator(address caller) public view returns (bool ok) {\n        return (isOperator(caller) && hasActiveOperator());\n    }\n\n}\n"
	},
	"sourceTreeHashHex": "0x08ddbcfa06f5137c47db2eb13ad2220f673c5a229534ba590117f1e42039f29d",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.11+commit.c082d0b4.js",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999999999
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"evm.bytecode.object"
					]
				}
			},
			"evmVersion": "constantinople",
			"remappings": []
		}
	},
	"networks": {}
}