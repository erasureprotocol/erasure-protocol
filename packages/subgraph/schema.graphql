type CountdownGriefingEscrow @entity {
  id: ID!
  creator: Bytes
  operator: Bytes
  buyer: Bytes
  seller: Bytes
  tokenID: Int
  paymentAmount: BigInt
  stakeAmount: BigInt
  countdownLength: BigInt
  agreementParams: Bytes
  deadline: BigInt
  length: BigInt
  data: Bytes
  dataB58: String
  dataSubmitted: Boolean
  paymentDeposited: Boolean
  stakeDeposited: Boolean
  finalized: Boolean
  cancelled: Boolean
  metadata: Bytes
  metadataB58: String
  countdownGriefingAgreement: CountdownGriefing
  initMetadata: Bytes
  initMetadataB58: String
  initCallData: Bytes
  createdTimestamp: BigInt
}

type InstanceCreatedCountdownGriefingEscrowFactory @entity {
  id: ID!
  instance: Bytes!
  creator: Bytes!
  callData: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type CancelledCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DataSubmittedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  data: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!

  metadata: Bytes
  buyer: Bytes
  seller: Bytes
  paymentAmount: BigInt
  stakeAmount: BigInt
}

type DeadlineSetCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  deadline: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type FinalizedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  agreement: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type InitializedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  buyer: Bytes!
  seller: Bytes!
  tokenID: Int!
  paymentAmount: BigInt!
  stakeAmount: BigInt!
  countdownLength: BigInt!
  metadata: Bytes!
  metadataB58: String!
  agreementParams: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}
type LengthSetCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  length: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type MetadataSetCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type OperatorUpdatedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type PaymentDepositedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  buyer: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type StakeDepositedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  seller: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type StakeBurnedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  staker: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositDecreasedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositIncreasedCountdownGriefingEscrow @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}
# Countdown Griefing
type CountdownGriefing @entity {
  id: ID!
  creator: Bytes
  operator: Bytes
  tokenID: Int
  staker: Bytes
  currentStake: BigInt
  totalBurned: BigInt
  totalTaken: BigInt
  counterparty: Bytes
  ratio: BigInt
  ratioType: Int
  countdownLength: BigInt
  deadline: BigInt
  length: BigInt
  metadata: Bytes
  metadataB58: String
  initMetadata: Bytes
  initMetadataB58: String
  initCallData: Bytes
  createdTimestamp: BigInt

  parentEscrow: CountdownGriefingEscrow
}

type InstanceCreatedCountdownGriefingFactory @entity {
  id: ID!
  instance: Bytes!
  creator: Bytes!
  callData: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type InitializedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  staker: Bytes!
  counterparty: Bytes!
  tokenID: Int!
  ratio: BigInt!
  ratioType: Int!
  countdownLength: BigInt!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DeadlineSetCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  deadline: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type LengthSetCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  length: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type RatioSetCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  staker: Bytes!
  tokenID: Int!
  ratio: BigInt!
  ratioType: Int!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositDecreasedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositIncreasedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type GriefedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  punisher: Bytes!
  staker: Bytes!
  punishment: BigInt!
  cost: BigInt!
  message: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!

  parentEscrow: CountdownGriefingEscrow
}
type OperatorUpdatedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type MetadataSetCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type StakeTakenCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  staker: Bytes!
  recipient: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type StakeBurnedCountdownGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  staker: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

# Simple griefing
type SimpleGriefing @entity {
  id: ID!
  creator: Bytes
  operator: Bytes
  staker: Bytes
  tokenID: Int
  currentStake: BigInt
  totalBurned: BigInt
  totalTaken: BigInt
  counterparty: Bytes
  ratio: BigInt
  ratioType: Int
  metadata: Bytes
  metadataB58: String
  initMetadata: Bytes
  initMetadataB58: String
  initCallData: Bytes
  createdTimestamp: BigInt
}

type InstanceCreatedSimpleGriefingFactory @entity {
  id: ID!
  instance: Bytes!
  creator: Bytes!
  callData: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositDecreasedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositIncreasedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type GriefedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  punisher: Bytes!
  staker: Bytes!
  punishment: BigInt!
  cost: BigInt!
  message: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type InitializedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  staker: Bytes!
  counterparty: Bytes!
  tokenID: Int!
  ratio: BigInt!
  ratioType: Int!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type MetadataSetSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type OperatorUpdatedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type RatioSetSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  staker: Bytes!
  tokenID: Int!
  ratio: BigInt!
  ratioType: Int!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type StakeBurnedSimpleGriefing @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  staker: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

# Feed
type Feed @entity {
  id: ID!
  creator: Bytes
  operator: Bytes
  metadata: Bytes
  metadataB58: String
  hashes: [Bytes!]
  initMetadata: Bytes
  initMetadataB58: String
  initCallData: Bytes
  createdTimestamp: BigInt
}

type InstanceCreatedFeedFactory @entity {
  id: ID!
  instance: Bytes!
  creator: Bytes!
  callData: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type InitializedFeed @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositDecreasedFeed @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type DepositIncreasedFeed @entity {
  id: ID!
  contract: Bytes!
  tokenID: Int!
  user: Bytes!
  amount: BigInt!
  newDeposit: BigInt!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type HashSubmittedFeed @entity {
  id: ID!
  contract: Bytes!
  hash: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type OperatorUpdatedFeed @entity {
  id: ID!
  contract: Bytes!
  operator: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}

type MetadataSetFeed @entity {
  id: ID!
  contract: Bytes!
  metadata: Bytes!
  metadataB58: String!
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  logIndex: BigInt!
}
