{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        { "internalType": "address", "name": "creator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        { "internalType": "uint256", "name": "deadline", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        { "internalType": "address", "name": "factory", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        { "internalType": "uint256", "name": "length", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "cost", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "name": "getRatio",
      "outputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        { "internalType": "uint256", "name": "time", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        { "internalType": "address", "name": "tokenAddress", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" },
        { "internalType": "address", "name": "staker", "type": "address" },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        { "internalType": "bytes", "name": "message", "type": "bytes" }
      ],
      "name": "punish",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        { "internalType": "uint256", "name": "deadline", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "recipient", "type": "address" }
      ],
      "name": "retrieveStake",
      "outputs": [
        { "internalType": "uint256", "name": "amount", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        { "internalType": "address", "name": "counterparty", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "address", "name": "token", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        { "internalType": "uint256", "name": "stake", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isStaked",
      "outputs": [
        { "internalType": "bool", "name": "validity", "type": "bool" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506140ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063728fa49411610104578063c529ebfd116100a2578063e7f43c6811610071578063e7f43c681461099f578063ee57e36f146109e9578063eedad66b14610aa4578063fc0e3d9014610ad2576101cf565b8063c529ebfd146108c2578063dac6270d14610933578063de2229fe14610951578063e3323aba1461097d576101cf565b806388cc58e4116100de57806388cc58e41461075357806390bfe0bf1461079d578063a9fb763c14610876578063be1c766b146108a4576101cf565b8063728fa4941461065257806372b45a551461069c578063754b2707146106e6576101cf565b806341ce2878116101715780635ad3f9181161014b5780635ad3f9181461054c5780635baeb806146105bd5780635e5365c1146106165780635f8d96de14610634576101cf565b806341ce28781461046d57806345f54485146104c5578063465b414e146104f3576101cf565b806319fbb48e116101ad57806319fbb48e1461039457806321df0da7146103c057806329605e771461041f5780632ab6f8db14610463576101cf565b80630778217a146101d45780630ee2cb101461031e5780631723537d14610368575b600080fd5b61031c60048036036101008110156101eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561029657600080fd5b8201836020820111156102a857600080fd5b803590602001918460018302840111640100000000831117156102ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610af0565b005b610326610e03565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610370610ee4565b6040518082600281111561038057fe5b60ff16815260200191505060405180910390f35b61039c610f1a565b604051808260038111156103ac57fe5b60ff16815260200191505060405180910390f35b6103c8610f93565b604051808360028111156103d857fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6104616004803603602081101561043557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd8565b005b61046b61105f565b005b6104af6004803603602081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e4565b6040518082815260200191505060405180910390f35b6104f1600480360360208110156104db57600080fd5b8101908080359060200190929190505050611230565b005b6105366004803603606081101561050957600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506112fe565b6040518082815260200191505060405180910390f35b61057b6004803603602081101561056257600080fd5b81019080803560ff1690602001909291905050506113e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610600600480360360608110156105d357600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611450565b6040518082815260200191505060405180910390f35b61061e611583565b6040518082815260200191505060405180910390f35b61063c611697565b6040518082815260200191505060405180910390f35b61065a6116a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a46116cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610728600480360360208110156106fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fa565b6040518083815260200182600281111561073e57fe5b60ff1681526020019250505060405180910390f35b61075b611799565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610860600480360360408110156107b357600080fd5b8101908080359060200190929190803590602001906401000000008111156107da57600080fd5b8201836020820111156107ec57600080fd5b8035906020019184600183028401116401000000008311171561080e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117c3565b6040518082815260200191505060405180910390f35b6108a26004803603602081101561088c57600080fd5b8101908080359060200190929190505050611904565b005b6108ac611a4d565b6040518082815260200191505060405180910390f35b6108f1600480360360208110156108d857600080fd5b81019080803560ff169060200190929190505050611a57565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61093b611abe565b6040518082815260200191505060405180910390f35b610959611aee565b6040518082600281111561096957fe5b60ff16815260200191505060405180910390f35b610985611b1e565b604051808215151515815260200191505060405180910390f35b6109a7611b35565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610aa2600480360360208110156109ff57600080fd5b8101908080359060200190640100000000811115610a1c57600080fd5b820183602082011115610a2e57600080fd5b80359060200191846001830284011164010000000083111715610a5057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b5f565b005b610ad060048036036020811015610aba57600080fd5b8101908080359060200190929190505050611be6565b005b610ada611d2f565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614023602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610c5c57610c5b89611d92565b5b610c6888878787611fa0565b610c718361225f565b6000825114610c8457610c83826122a0565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610d5357fe5b60ff168152602001858152602001846002811115610d6d57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610db7578082015181840152602081019050610d9c565b50505050905090810190601f168015610de45780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ea457600080fd5b505afa158015610eb8573d6000803e3d6000fd5b505050506040513d6020811015610ece57600080fd5b8101908080519060200190929190505050905090565b6000610eee61233f565b15610efc5760029050610f17565b610f04612366565b15610f125760019050610f17565b600090505b90565b6000806001541415610f2f5760009050610f90565b60006002811115610f3c57fe5b610f44611aee565b6002811115610f4f57fe5b1415610f5e5760019050610f90565b600280811115610f6a57fe5b610f72611aee565b6002811115610f7d57fe5b14610f8b5760029050610f90565b600390505b90565b600080610fc4600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661238e565b915081610fd0836113e9565b915091509091565b610fe1336123e7565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61105c81612441565b50565b611068336123e7565b6110da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6110e2612650565b565b60006110ef336127bd565b806110ff57506110fe336123e7565b5b611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6111796127fc565b6111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112286112218261238e565b8285612823565b915050919050565b6112393361284a565b806112495750611248336123e7565b5b6112bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112f96112f18261238e565b828385612889565b505050565b600060028081111561130c57fe5b82600281111561131857fe5b1415611349576012600a0a61133a611334856012600a0a6128ae565b86612934565b8161134157fe5b0490506113e2565b6001600281111561135657fe5b82600281111561136257fe5b141561137157600090506113e2565b6000600281111561137e57fe5b82600281111561138a57fe5b14156113e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061404d6021913960400191505060405180910390fd5b5b9392505050565b60006002808111156113f757fe5b82600281111561140357fe5b14156114185761141161296c565b905061144b565b6001600281111561142557fe5b82600281111561143157fe5b14156114465761143f612988565b905061144b565b600090505b919050565b600060028081111561145e57fe5b82600281111561146a57fe5b141561149b576012600a0a61148c611486856012600a0a6128ae565b866129a4565b8161149357fe5b04905061157c565b600160028111156114a857fe5b8260028111156114b457fe5b141561150b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613fe16021913960400191505060405180910390fd5b6000600281111561151857fe5b82600281111561152457fe5b141561157b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061404d6021913960400191505060405180910390fd5b5b9392505050565b600061158e336127bd565b8061159e575061159d336123e7565b5b611610576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6116186129d8565b61168a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6116926129ff565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006117ce3361284a565b806117de57506117dd336123e7565b5b611850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6118586127fc565b156118cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6118fc33600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612a27565b905092915050565b61190d3361284a565b8061191d575061191c336123e7565b5b61198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6119976127fc565b15611a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a48611a408261238e565b823385612cea565b505050565b6000600154905090565b6000600280811115611a6557fe5b826002811115611a7157fe5b1415611a8657611a7f612d10565b9050611ab9565b60016002811115611a9357fe5b826002811115611a9f57fe5b1415611ab457611aad612d2c565b9050611ab9565b600090505b919050565b6000426000541115611ae657611adf42600054612d4890919063ffffffff16565b9050611aeb565b600090505b90565b6000806000541415611b035760009050611b1b565b426000541115611b165760019050611b1b565b600290505b90565b600080611b29611d2f565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611b68336123e7565b611bda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611be3816122a0565b50565b611bef336127bd565b80611bff5750611bfe336123e7565b5b611c71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611c796127fc565b15611cec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d2a611d228261238e565b823385612cea565b505050565b6000611d8d611d62600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661238e565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612d92565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ef9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611fad57fe5b816002811115611fb957fe5b1480611fdb575060016002811115611fcd57fe5b816002811115611fd957fe5b145b1561203a5760008214612039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061406e602c913960400191505060405180910390fd5b5b61204383612df8565b6120b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561211357fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156121bd57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561222957fe5b60ff16815260200183815260200182600281111561224357fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156123025780820151818401526020810190506122e7565b50505050905090810190601f16801561232f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561234d57fe5b612355610f1a565b600381111561236057fe5b14905090565b60006002600381111561237557fe5b61237d610f1a565b600381111561238857fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612715576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006127c76116cd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561280a57fe5b612812610ee4565b600281111561281d57fe5b14905090565b6000806128308585612d92565b905061283e85858584612889565b50809150509392505050565b60006128546116a0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000612896858584612e3b565b90506128a385848461301b565b809050949350505050565b6000808314156128c1576000905061292e565b60008284029050828482816128d257fe5b0414612929576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140026021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61295c61294885856128ae565b60026012600a0a8161295657fe5b046131d9565b8161296357fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000816129c86129b8856012600a0a6128ae565b600285816129c257fe5b046131d9565b816129cf57fe5b04905092915050565b60008060028111156129e657fe5b6129ee610ee4565b60028111156129f957fe5b14905090565b6000612a16426001546131d990919063ffffffff16565b9050612a2181613261565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612b2457fe5b826002811115612b3057fe5b1415612ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612baf8387846112fe565b9350612bbc8189866132a2565b612bc781888861337c565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c9e578082015181840152602081019050612c83565b50505050905090810190601f168015612ccb5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612cf7858584613422565b9050612d0585843085613587565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b6000612d8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061377a565b905092915050565b600060026000846002811115612da457fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612e0757fe5b826002811115612e1357fe5b1480612e345750600280811115612e2657fe5b826002811115612e3257fe5b145b9050919050565b60008060026000866002811115612e4e57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612f258382612d4890919063ffffffff16565b91508160026000876002811115612f3857fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612fbc57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261302581612df8565b613097576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6130a0846113e9565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561312657600080fd5b505af115801561313a573d6000803e3d6000fd5b505050506040513d602081101561315057600080fd5b81019080805190602001909291905050506131d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b600080828401905083811015613257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b826132ac81612df8565b61331e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561332a57fe5b84600281111561333657fe5b141561334b57613346838361383a565b613376565b6001600281111561335857fe5b84600281111561336457fe5b1415613375576133748383613952565b5b5b50505050565b60008061338a858585612e3b565b90506133968584613a9e565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156133ca57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000613492826002600087600281111561343857fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131d990919063ffffffff16565b905080600260008660028111156134a557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561352957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361359181612df8565b613603576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61360c856113e9565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156136c657600080fd5b505af11580156136da573d6000803e3d6000fd5b505050506040513d60208110156136f057600080fd5b8101908080519060200190929190505050613773576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000838311158290613827576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137ec5780820151818401526020810190506137d1565b50505050905090810190601f1680156138195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561390957600080fd5b505af115801561391d573d6000803e3d6000fd5b505050506040513d602081101561393357600080fd5b81019080805190602001909291905050505061394e81613b75565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156139ed57600080fd5b505af1158015613a01573d6000803e3d6000fd5b505050506040513d6020811015613a1757600080fd5b8101908080519060200190929190505050613a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b81613aa881612df8565b613b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613b2657fe5b836002811115613b3257fe5b1415613b4657613b4182613b75565b613b70565b60016002811115613b5357fe5b836002811115613b5f57fe5b1415613b6f57613b6e82613d84565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613c2457600080fd5b505af1158015613c38573d6000803e3d6000fd5b505050506040513d6020811015613c4e57600080fd5b8101908080519060200190929190505050506000819050600080613c7183613e9b565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613cb8612988565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613d3657600080fd5b505af1158015613d4a573d6000803e3d6000fd5b505050506040513d6020811015613d6057600080fd5b81019080805190602001909291905050509050613d7c81613d84565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613deb57600080fd5b505af1158015613dff573d6000803e3d6000fd5b505050506040513d6020811015613e1557600080fd5b8101908080519060200190929190505050613e98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f0357600080fd5b505afa158015613f17573d6000803e3d6000fd5b505050506040513d6020811015613f2d57600080fd5b81019080805190602001909291905050509050613f48612d2c565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f9857600080fd5b505afa158015613fac573d6000803e3d6000fd5b505050506040513d6020811015613fc257600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820fb468f4c7e42a80118cf60acc7a95fedf6e879f24fb865d397ed82a93405c70b64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063728fa49411610104578063c529ebfd116100a2578063e7f43c6811610071578063e7f43c681461099f578063ee57e36f146109e9578063eedad66b14610aa4578063fc0e3d9014610ad2576101cf565b8063c529ebfd146108c2578063dac6270d14610933578063de2229fe14610951578063e3323aba1461097d576101cf565b806388cc58e4116100de57806388cc58e41461075357806390bfe0bf1461079d578063a9fb763c14610876578063be1c766b146108a4576101cf565b8063728fa4941461065257806372b45a551461069c578063754b2707146106e6576101cf565b806341ce2878116101715780635ad3f9181161014b5780635ad3f9181461054c5780635baeb806146105bd5780635e5365c1146106165780635f8d96de14610634576101cf565b806341ce28781461046d57806345f54485146104c5578063465b414e146104f3576101cf565b806319fbb48e116101ad57806319fbb48e1461039457806321df0da7146103c057806329605e771461041f5780632ab6f8db14610463576101cf565b80630778217a146101d45780630ee2cb101461031e5780631723537d14610368575b600080fd5b61031c60048036036101008110156101eb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561029657600080fd5b8201836020820111156102a857600080fd5b803590602001918460018302840111640100000000831117156102ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610af0565b005b610326610e03565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610370610ee4565b6040518082600281111561038057fe5b60ff16815260200191505060405180910390f35b61039c610f1a565b604051808260038111156103ac57fe5b60ff16815260200191505060405180910390f35b6103c8610f93565b604051808360028111156103d857fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6104616004803603602081101561043557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd8565b005b61046b61105f565b005b6104af6004803603602081101561048357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e4565b6040518082815260200191505060405180910390f35b6104f1600480360360208110156104db57600080fd5b8101908080359060200190929190505050611230565b005b6105366004803603606081101561050957600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506112fe565b6040518082815260200191505060405180910390f35b61057b6004803603602081101561056257600080fd5b81019080803560ff1690602001909291905050506113e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610600600480360360608110156105d357600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611450565b6040518082815260200191505060405180910390f35b61061e611583565b6040518082815260200191505060405180910390f35b61063c611697565b6040518082815260200191505060405180910390f35b61065a6116a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a46116cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610728600480360360208110156106fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fa565b6040518083815260200182600281111561073e57fe5b60ff1681526020019250505060405180910390f35b61075b611799565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610860600480360360408110156107b357600080fd5b8101908080359060200190929190803590602001906401000000008111156107da57600080fd5b8201836020820111156107ec57600080fd5b8035906020019184600183028401116401000000008311171561080e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117c3565b6040518082815260200191505060405180910390f35b6108a26004803603602081101561088c57600080fd5b8101908080359060200190929190505050611904565b005b6108ac611a4d565b6040518082815260200191505060405180910390f35b6108f1600480360360208110156108d857600080fd5b81019080803560ff169060200190929190505050611a57565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61093b611abe565b6040518082815260200191505060405180910390f35b610959611aee565b6040518082600281111561096957fe5b60ff16815260200191505060405180910390f35b610985611b1e565b604051808215151515815260200191505060405180910390f35b6109a7611b35565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610aa2600480360360208110156109ff57600080fd5b8101908080359060200190640100000000811115610a1c57600080fd5b820183602082011115610a2e57600080fd5b80359060200191846001830284011164010000000083111715610a5057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b5f565b005b610ad060048036036020811015610aba57600080fd5b8101908080359060200190929190505050611be6565b005b610ada611d2f565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180614023602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610c5c57610c5b89611d92565b5b610c6888878787611fa0565b610c718361225f565b6000825114610c8457610c83826122a0565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610d5357fe5b60ff168152602001858152602001846002811115610d6d57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610db7578082015181840152602081019050610d9c565b50505050905090810190601f168015610de45780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ea457600080fd5b505afa158015610eb8573d6000803e3d6000fd5b505050506040513d6020811015610ece57600080fd5b8101908080519060200190929190505050905090565b6000610eee61233f565b15610efc5760029050610f17565b610f04612366565b15610f125760019050610f17565b600090505b90565b6000806001541415610f2f5760009050610f90565b60006002811115610f3c57fe5b610f44611aee565b6002811115610f4f57fe5b1415610f5e5760019050610f90565b600280811115610f6a57fe5b610f72611aee565b6002811115610f7d57fe5b14610f8b5760029050610f90565b600390505b90565b600080610fc4600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661238e565b915081610fd0836113e9565b915091509091565b610fe1336123e7565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61105c81612441565b50565b611068336123e7565b6110da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6110e2612650565b565b60006110ef336127bd565b806110ff57506110fe336123e7565b5b611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6111796127fc565b6111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112286112218261238e565b8285612823565b915050919050565b6112393361284a565b806112495750611248336123e7565b5b6112bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506112f96112f18261238e565b828385612889565b505050565b600060028081111561130c57fe5b82600281111561131857fe5b1415611349576012600a0a61133a611334856012600a0a6128ae565b86612934565b8161134157fe5b0490506113e2565b6001600281111561135657fe5b82600281111561136257fe5b141561137157600090506113e2565b6000600281111561137e57fe5b82600281111561138a57fe5b14156113e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061404d6021913960400191505060405180910390fd5b5b9392505050565b60006002808111156113f757fe5b82600281111561140357fe5b14156114185761141161296c565b905061144b565b6001600281111561142557fe5b82600281111561143157fe5b14156114465761143f612988565b905061144b565b600090505b919050565b600060028081111561145e57fe5b82600281111561146a57fe5b141561149b576012600a0a61148c611486856012600a0a6128ae565b866129a4565b8161149357fe5b04905061157c565b600160028111156114a857fe5b8260028111156114b457fe5b141561150b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613fe16021913960400191505060405180910390fd5b6000600281111561151857fe5b82600281111561152457fe5b141561157b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061404d6021913960400191505060405180910390fd5b5b9392505050565b600061158e336127bd565b8061159e575061159d336123e7565b5b611610576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6116186129d8565b61168a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6116926129ff565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006117ce3361284a565b806117de57506117dd336123e7565b5b611850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6118586127fc565b156118cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6118fc33600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612a27565b905092915050565b61190d3361284a565b8061191d575061191c336123e7565b5b61198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6119976127fc565b15611a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a48611a408261238e565b823385612cea565b505050565b6000600154905090565b6000600280811115611a6557fe5b826002811115611a7157fe5b1415611a8657611a7f612d10565b9050611ab9565b60016002811115611a9357fe5b826002811115611a9f57fe5b1415611ab457611aad612d2c565b9050611ab9565b600090505b919050565b6000426000541115611ae657611adf42600054612d4890919063ffffffff16565b9050611aeb565b600090505b90565b6000806000541415611b035760009050611b1b565b426000541115611b165760019050611b1b565b600290505b90565b600080611b29611d2f565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611b68336123e7565b611bda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611be3816122a0565b50565b611bef336127bd565b80611bff5750611bfe336123e7565b5b611c71576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611c796127fc565b15611cec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d2a611d228261238e565b823385612cea565b505050565b6000611d8d611d62600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661238e565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612d92565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ef9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611fad57fe5b816002811115611fb957fe5b1480611fdb575060016002811115611fcd57fe5b816002811115611fd957fe5b145b1561203a5760008214612039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061406e602c913960400191505060405180910390fd5b5b61204383612df8565b6120b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561211357fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156121bd57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561222957fe5b60ff16815260200183815260200182600281111561224357fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156123025780820151818401526020810190506122e7565b50505050905090810190601f16801561232f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561234d57fe5b612355610f1a565b600381111561236057fe5b14905090565b60006002600381111561237557fe5b61237d610f1a565b600381111561238857fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156125a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612715576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006127c76116cd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561280a57fe5b612812610ee4565b600281111561281d57fe5b14905090565b6000806128308585612d92565b905061283e85858584612889565b50809150509392505050565b60006128546116a0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000612896858584612e3b565b90506128a385848461301b565b809050949350505050565b6000808314156128c1576000905061292e565b60008284029050828482816128d257fe5b0414612929576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140026021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61295c61294885856128ae565b60026012600a0a8161295657fe5b046131d9565b8161296357fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000816129c86129b8856012600a0a6128ae565b600285816129c257fe5b046131d9565b816129cf57fe5b04905092915050565b60008060028111156129e657fe5b6129ee610ee4565b60028111156129f957fe5b14905090565b6000612a16426001546131d990919063ffffffff16565b9050612a2181613261565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612b2457fe5b826002811115612b3057fe5b1415612ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612baf8387846112fe565b9350612bbc8189866132a2565b612bc781888861337c565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c9e578082015181840152602081019050612c83565b50505050905090810190601f168015612ccb5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612cf7858584613422565b9050612d0585843085613587565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b6000612d8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061377a565b905092915050565b600060026000846002811115612da457fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612e0757fe5b826002811115612e1357fe5b1480612e345750600280811115612e2657fe5b826002811115612e3257fe5b145b9050919050565b60008060026000866002811115612e4e57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612f258382612d4890919063ffffffff16565b91508160026000876002811115612f3857fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612fbc57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261302581612df8565b613097576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6130a0846113e9565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561312657600080fd5b505af115801561313a573d6000803e3d6000fd5b505050506040513d602081101561315057600080fd5b81019080805190602001909291905050506131d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b600080828401905083811015613257576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b826132ac81612df8565b61331e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561332a57fe5b84600281111561333657fe5b141561334b57613346838361383a565b613376565b6001600281111561335857fe5b84600281111561336457fe5b1415613375576133748383613952565b5b5b50505050565b60008061338a858585612e3b565b90506133968584613a9e565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156133ca57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000613492826002600087600281111561343857fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546131d990919063ffffffff16565b905080600260008660028111156134a557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561352957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361359181612df8565b613603576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61360c856113e9565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156136c657600080fd5b505af11580156136da573d6000803e3d6000fd5b505050506040513d60208110156136f057600080fd5b8101908080519060200190929190505050613773576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000838311158290613827576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137ec5780820151818401526020810190506137d1565b50505050905090810190601f1680156138195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561390957600080fd5b505af115801561391d573d6000803e3d6000fd5b505050506040513d602081101561393357600080fd5b81019080805190602001909291905050505061394e81613b75565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156139ed57600080fd5b505af1158015613a01573d6000803e3d6000fd5b505050506040513d6020811015613a1757600080fd5b8101908080519060200190929190505050613a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b81613aa881612df8565b613b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613b2657fe5b836002811115613b3257fe5b1415613b4657613b4182613b75565b613b70565b60016002811115613b5357fe5b836002811115613b5f57fe5b1415613b6f57613b6e82613d84565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613c2457600080fd5b505af1158015613c38573d6000803e3d6000fd5b505050506040513d6020811015613c4e57600080fd5b8101908080519060200190929190505050506000819050600080613c7183613e9b565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613cb8612988565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613d3657600080fd5b505af1158015613d4a573d6000803e3d6000fd5b505050506040513d6020811015613d6057600080fd5b81019080805190602001909291905050509050613d7c81613d84565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613deb57600080fd5b505af1158015613dff573d6000803e3d6000fd5b505050506040513d6020811015613e1557600080fd5b8101908080519060200190929190505050613e98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f0357600080fd5b505afa158015613f17573d6000803e3d6000fd5b505050506040513d6020811015613f2d57600080fd5b81019080805190602001909291905050509050613f48612d2c565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613f9857600080fd5b505afa158015613fac573d6000803e3d6000fd5b505050506040513d6020811015613fc257600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820fb468f4c7e42a80118cf60acc7a95fedf6e879f24fb865d397ed82a93405c70b64736f6c63430005100032",
  "sourceMap": "1593:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1593:12972:0;;;;;;;",
  "deployedSourceMap": "1593:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1593:12972:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:970;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3572:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3572:970:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3572:970:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3572:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3572:970:0;;;;;;;;;;;;;;;:::i;:::-;;1134:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13361:335:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:428:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12182:210:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10352:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10352:228:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;10719:204;;;:::i;:::-;;9649:496;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9649:496:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8234:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8234:414:0;;;;;;;;;;;;;;;;;:::i;:::-;;5448:393:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5448:393:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6477:428:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6477:428:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8939:361:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1034:95:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11568:112:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11052:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4337:212:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:212:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7521:439:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7521:439:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7521:439:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7521:439:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7521:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7521:439:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6219:476;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6219:476:0;;;;;;;;;;;;;;;;;:::i;:::-;;1440:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1047:292:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1047:292:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1479:173:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1996:275;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12792:139:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1454:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4746:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4746:226:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4746:226:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4746:226:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4746:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4746:226:0;;;;;;;;;;;;;;;:::i;:::-;;5354:471;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5354:471:0;;;;;;;;;;;;;;;;;:::i;:::-;;12522:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3572:970;600:10:24;589:8;;:21;;;;;;;;;;;;;;;;;;702:15;762:7;750:20;738:32;;801:1;789:8;:13;;;781:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3923:6:0;3908:5;:12;;;:21;;;;;;;;;;;;;;;;;;3960:12;3939:5;:18;;;:33;;;;;;;;;;;;;;;;;;4031:1;4011:22;;:8;:22;;;4007:84;;4049:31;4071:8;4049:21;:31::i;:::-;4007:84;4131:53;4150:6;4158:7;4167:5;4174:9;4131:18;:53::i;:::-;4227:37;4248:15;4227:20;:37::i;:::-;4322:1;4303:8;:15;:20;4299:87;;4339:36;4366:8;4339:26;:36::i;:::-;4299:87;4438:97;4450:8;4460:6;4468:12;4482:7;4491:5;4498:9;4509:15;4526:8;4438:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4438:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:970;;;;;;;;;:::o;1134:229:24:-;1177:15;1313:8;;;;;;;;;;;1304:37;;;1350:4;1304:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1304:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1304:52:24;;;;;;;;;;;;;;;;1297:59;;1134:229;:::o;13361:335:0:-;13412:22;13450:18;:16;:18::i;:::-;13446:244;;;13491:28;13484:35;;;;13446:244;13540:20;:18;:20::i;:::-;13536:154;;;13583:29;13576:36;;;;13536:154;13650:29;13643:36;;13361:335;;:::o;1971:428:11:-;2022:22;2071:1;2060:7;;:12;2056:59;;;2093:22;2086:29;;;;2056:59;2161:21;2129:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2125:99;;;2203:21;2196:28;;;;2125:99;2270:21;2238:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2234:158;;2312:24;2305:31;;;;2234:158;2370:22;2363:29;;1971:428;;:::o;12182:210:0:-;12223:27;12252:13;12287:33;12307:5;:12;;;;;;;;;;;;12287:19;:33::i;:::-;12277:43;;12338:7;12347:37;12376:7;12347:28;:37::i;:::-;12330:55;;;;12182:210;;:::o;10352:228::-;10448:31;10468:10;10448:19;:31::i;:::-;10440:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10537:36;10564:8;10537:26;:36::i;:::-;10352:228;:::o;10719:204::-;10799:31;10819:10;10799:19;:31::i;:::-;10791:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10888:28;:26;:28::i;:::-;10719:204::o;9649:496::-;9707:14;9768:20;9777:10;9768:8;:20::i;:::-;:55;;;;9792:31;9812:10;9792:19;:31::i;:::-;9768:55;9760:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9908:14;:12;:14::i;:::-;9900:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9995:14;10012:5;:12;;;;;;;;;;;;9995:29;;10068:70;10091:27;10111:6;10091:19;:27::i;:::-;10120:6;10128:9;10068:22;:70::i;:::-;10061:77;;;9649:496;;;:::o;8234:414::-;8333:26;8348:10;8333:14;:26::i;:::-;:61;;;;8363:31;8383:10;8363:19;:31::i;:::-;8333:61;8325:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8477:14;8494:5;:12;;;;;;;;;;;;8477:29;;8561:80;8580:27;8600:6;8580:19;:27::i;:::-;8609:6;8617;8625:15;8561:18;:80::i;:::-;;8234:414;;:::o;5448:393:16:-;5541:12;5582:13;5569:26;;;;;;;;:9;:26;;;;;;;;;5565:110;;;955:2;940;932:26;5616:53;5632:29;5645:10;955:2;940;932:26;5632:12;:29::i;:::-;5663:5;5616:15;:53::i;:::-;:59;;;;;;5609:66;;;;5565:110;5702:13;5689:26;;;;;;;;:9;:26;;;;;;;;;5685:52;;;5736:1;5729:8;;;;5685:52;5764:13;5751:26;;;;;;;;:9;:26;;;;;;;;;5747:87;;;5791:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:87;5448:393;;;;;;:::o;554:280:25:-;616:20;663:10;652:21;;;;;;;;:7;:21;;;;;;;;;648:71;;;694:25;:23;:25::i;:::-;687:32;;;;648:71;744:10;733:21;;;;;;;;:7;:21;;;;;;;;;729:71;;;775:25;:23;:25::i;:::-;768:32;;;;729:71;825:1;810:17;;554:280;;;;:::o;6477:428:16:-;6570:18;6617:13;6604:26;;;;;;;;:9;:26;;;;;;;;;6600:104;;;955:2;940;932:26;6651:47;6667:23;6680:4;955:2;940;932:26;6667:12;:23::i;:::-;6692:5;6651:15;:47::i;:::-;:53;;;;;;6644:60;;;;6600:104;6731:13;6718:26;;;;;;;;:9;:26;;;;;;;;;6714:87;;;6758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6714:87;6828:13;6815:26;;;;;;;;:9;:26;;;;;;;;;6811:87;;;6855:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:87;6477:428;;;;;;:::o;8939:361:0:-;8981:16;9044:20;9053:10;9044:8;:20::i;:::-;:55;;;;9068:31;9088:10;9068:19;:31::i;:::-;9044:55;9036:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9190:15;:13;:15::i;:::-;9182:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9275:18;:16;:18::i;:::-;9268:25;;8939:361;:::o;1034:95:12:-;1078:16;1113:9;;1106:16;;1034:95;:::o;11568:112:0:-;11616:20;11655:5;:18;;;;;;;;;;;;11648:25;;11568:112;:::o;11052:94::-;11094:14;11127:5;:12;;;;;;;;;;;;11120:19;;11052:94;:::o;4337:212:16:-;4392:13;4407:19;4485:11;:19;4497:6;4485:19;;;;;;;;;;;;;;;:25;;;4512:11;:19;4524:6;4512:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4477:65;;;;4337:212;;;:::o;1770:92:24:-;1813:15;1847:8;;;;;;;;;;;1840:15;;1770:92;:::o;7521:439:0:-;7595:12;7654:26;7669:10;7654:14;:26::i;:::-;:61;;;;7684:31;7704:10;7684:19;:31::i;:::-;7654:61;7646:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7811:14;:12;:14::i;:::-;7810:15;7802:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7891:62;7907:10;7919:5;:12;;;;;;;;;;;;7933:10;7945:7;7891:15;:62::i;:::-;7884:69;;7521:439;;;;:::o;6219:476::-;6308:26;6323:10;6308:14;:26::i;:::-;:61;;;;6338:31;6358:10;6338:19;:31::i;:::-;6308:61;6300:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6465:14;:12;:14::i;:::-;6464:15;6456:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6548:14;6565:5;:12;;;;;;;;;;;;6548:29;;6609:79;6627:27;6647:6;6627:19;:27::i;:::-;6656:6;6664:10;6676:11;6609:17;:79::i;:::-;;6219:476;;:::o;1440:89:11:-;1482:14;1515:7;;1508:14;;1440:89;:::o;1047:292:25:-;1112:23;1162:10;1151:21;;;;;;;;:7;:21;;;;;;;;;1147:74;;;1193:28;:26;:28::i;:::-;1186:35;;;;1147:74;1246:10;1235:21;;;;;;;;:7;:21;;;;;;;;;1231:74;;;1277:28;:26;:28::i;:::-;1270:35;;;;1231:74;1330:1;1315:17;;1047:292;;;;:::o;1479:173:12:-;1528:12;1568:3;1556:9;;:15;1552:93;;;1592:18;1606:3;1592:9;;:13;;:18;;;;:::i;:::-;1585:25;;;;1552:93;1644:1;1637:8;;1479:173;;:::o;1996:275::-;2046:21;2096:1;2083:9;;:14;2079:60;;;2118:21;2111:28;;;;2079:60;2165:3;2153:9;;:15;2149:115;;;2189:20;2182:27;;;;2149:115;2243:21;2236:28;;1996:275;;:::o;12792:139:0:-;12833:13;12858:20;12881:10;:8;:10::i;:::-;12858:33;;12923:1;12908:12;:16;12901:23;;;12792:139;:::o;1454:95:18:-;1498:16;1533:9;;;;;;;;;;;1526:16;;1454:95;:::o;4746:226:0:-;4842:31;4862:10;4842:19;:31::i;:::-;4834:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4929:36;4956:8;4929:26;:36::i;:::-;4746:226;:::o;5354:471::-;5450:20;5459:10;5450:8;:20::i;:::-;:55;;;;5474:31;5494:10;5474:19;:31::i;:::-;5450:55;5442:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5595:14;:12;:14::i;:::-;5594:15;5586:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5678:14;5695:5;:12;;;;;;;;;;;;5678:29;;5739:79;5757:27;5777:6;5757:19;:27::i;:::-;5786:6;5794:10;5806:11;5739:17;:79::i;:::-;;5354:471;;:::o;12522:147::-;12563:13;12595:67;12614:33;12634:5;:12;;;;;;;;;;;;12614:19;:33::i;:::-;12649:5;:12;;;;;;;;;;;;12595:18;:67::i;:::-;12588:74;;12522:147;:::o;301:417:18:-;442:1;421:23;;:9;;;;;;;;;;;:23;;;413:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:1;523:22;;:8;:22;;;;515:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:8;628:9;;:20;;;;;;;;;;;;;;;;;;686:25;702:8;686:25;;;;;;;;;;;;;;;;;;;;;;301:417;:::o;1711:640:16:-;1847:13;1834:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1877:13;1864:26;;;;;;;;:9;:26;;;;;;;;;1834:56;1830:154;;;1923:1;1914:5;:10;1906:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:154;2034:36;2062:7;2034:27;:36::i;:::-;2026:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:7;2100:11;:19;2112:6;2100:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2207:5;2179:11;:19;2191:6;2179:19;;;;;;;;;;;;;;;:25;;:33;;;;2254:9;2222:11;:19;2234:6;2222:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2301:43;2310:6;2318:7;2327:5;2334:9;2301:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:640;;;;:::o;821:110:11:-;886:6;876:7;:16;;;;907:17;917:6;907:17;;;;;;;;;;;;;;;;;;821:110;:::o;417:97:14:-;486:21;498:8;486:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;486:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:97;:::o;3352:126:11:-;3393:13;3449:22;3425:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;3418:53;;3352:126;:::o;3079:130::-;3122:13;3178:24;3154:48;;;;;;;;:20;:18;:20::i;:::-;:48;;;;;;;;;3147:55;;3079:130;:::o;4715:180:16:-;4774:27;4860:11;:19;4872:6;4860:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4852:36;;4715:180;;;:::o;1555:111:18:-;1614:7;1650:9;;;;;;;;;;;1640:19;;:6;:19;;;1633:26;;1555:111;;;:::o;724:410::-;856:1;835:23;;:9;;;;;;;;;;;:23;;;;827:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:1;939:22;;:8;:22;;;;931:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:8;1044:9;;:20;;;;;;;;;;;;;;;;;;1102:25;1118:8;1102:25;;;;;;;;;;;;;;;;;;;;;;724:410;:::o;1140:285::-;1256:1;1235:23;;:9;;;;;;;;;;;:23;;;;1227:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:1;1331:9;;:22;;;;;;;;;;;;;;;;;;1391:27;1415:1;1391:27;;;;;;;;;;;;;;;;;;;;;;1140:285::o;11323:117:0:-;11380:13;11422:11;:9;:11::i;:::-;11412:21;;:6;:21;;;11405:28;;11323:117;;;:::o;14425:138::-;14472:13;14528:28;14504:52;;;;;;;;:20;:18;:20::i;:::-;:52;;;;;;;;;14497:59;;14425:138;:::o;2990:369:23:-;3096:19;3150:22;3175:35;3194:7;3203:6;3175:18;:35::i;:::-;3150:60;;3248:54;3259:7;3268:6;3276:9;3287:14;3248:10;:54::i;:::-;;3338:14;3331:21;;;2990:369;;;;;:::o;11863:129:0:-;11926:13;11968:17;:15;:17::i;:::-;11958:27;;:6;:27;;;11951:34;;11863:129;;;:::o;2152:408:23:-;2276:16;2341:55;2366:7;2375:6;2383:12;2341:24;:55::i;:::-;2330:66;;2444:56;2467:7;2476:9;2487:12;2444:22;:56::i;:::-;2545:8;2538:15;;2152:408;;;;;;:::o;2159:459:52:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;519:140:6:-;576:9;312:2;297;289:26;601:43;614:18;627:1;630;614:12;:18::i;:::-;642:1;312:2;297;289:26;634:9;;;;;;601:12;:43::i;:::-;:51;;;;;;597:55;;519:140;;;;:::o;2879:99:9:-;2929:13;525:42;2954:17;;2879:99;:::o;1500::10:-;1550:13;564:42;1575:17;;1500:99;:::o;853:136:6:-;910:9;981:1;935:43;948:22;961:1;312:2;297;289:26;948:12;:22::i;:::-;976:1;972;:5;;;;;;935:12;:43::i;:::-;:47;;;;;;931:51;;853:136;;;;:::o;13846:140:0:-;13894:13;13950:29;13926:53;;;;;;;;:20;:18;:20::i;:::-;:53;;;;;;;;;13919:60;;13846:140;:::o;1126:164:11:-;1162:16;1201;1213:3;1201:7;;:11;;:16;;;;:::i;:::-;1190:27;;1227:31;1249:8;1227:21;:31::i;:::-;1275:8;1268:15;;1126:164;:::o;2917:969:16:-;3065:12;3128:13;3144:11;:19;3156:6;3144:19;;;;;;;;;;;;;;;:25;;;3128:41;;3179:19;3201:11;:19;3213:6;3201:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3179:51;;3240:27;3270:11;:19;3282:6;3270:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3240:57;;3329:13;3316:26;;;;;;;;:9;:26;;;;;;;;;;3308:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:37;3496:5;3503:10;3515:9;3488:7;:37::i;:::-;3481:44;;3589:47;3612:7;3621:8;3631:4;3589:22;:47::i;:::-;3702;3721:7;3730:6;3738:10;3702:18;:47::i;:::-;;3787:52;3795:8;3805:6;3813:10;3825:4;3831:7;3787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3787:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:4;3868:11;;;;;2917:969;;;;;;:::o;1209:417:23:-;1328:16;1393:54;1418:7;1427:6;1435:11;1393:24;:54::i;:::-;1382:65;;1495:71;1522:7;1531:6;1547:4;1554:11;1495:26;:71::i;:::-;1611:8;1604:15;;1209:417;;;;;;:::o;3102:111:9:-;3155:16;659:42;3183:23;;3102:111;:::o;1723::10:-;1776:16;698:42;1804:23;;1723:111;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3707:159:13:-;3793:15;3827:8;:26;3844:7;3836:16;;;;;;;;3827:26;;;;;;;;;;;:32;3854:4;3827:32;;;;;;;;;;;;;;;;3820:39;;3707:159;;;;:::o;1660:148:25:-;1723:13;1766:10;1755:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1791:10;1780:21;;;;;;;;:7;:21;;;;;;;;;1755:46;1748:53;;1660:148;;;:::o;2070:694:13:-;2181:18;2242:22;2267:8;:26;2284:7;2276:16;;;;;;;;2267:26;;;;;;;;;;;:32;2294:4;2267:32;;;;;;;;;;;;;;;;2242:57;;2375:14;2357;:32;;2349:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:34;2507:14;2488;:18;;:34;;;;:::i;:::-;2475:47;;2604:10;2569:8;:26;2586:7;2578:16;;;;;;;;2569:26;;;;;;;;;;;:32;2596:4;2569:32;;;;;;;;;;;;;;;:45;;;;2652:59;2669:7;2678:4;2684:14;2700:10;2652:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:10;2740:17;;;2070:694;;;;;:::o;2002:200:25:-;2090:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:24;2140:7;2124:15;:24::i;:::-;2117:41;;;2159:2;2163:5;2117:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2117:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:52:25;;;;;;;;;;;;;;;;2109:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:200;;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;768:122:12:-;839:8;827:9;:20;;;;862:21;874:8;862:21;;;;;;;;;;;;;;;;;;768:122;:::o;3256:285:25:-;3346:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:10;3369:21;;;;;;;;:7;:21;;;;;;;;;3365:170;;;3406:30;3424:4;3430:5;3406:17;:30::i;:::-;3365:170;;;3468:10;3457:21;;;;;;;;:7;:21;;;;;;;;;3453:82;;;3494:30;3512:4;3518:5;3494:17;:30::i;:::-;3453:82;3365:170;3256:285;;;;:::o;3778:453:23:-;3883:16;3937:18;3958:55;3983:7;3992:6;4000:12;3958:24;:55::i;:::-;3937:76;;4057:41;4076:7;4085:12;4057:18;:41::i;:::-;4136:42;4148:7;4157:6;4165:12;4136:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:10;4207:17;;;3778:453;;;;;:::o;1227:479:13:-;1335:18;1418:49;1455:11;1418:8;:26;1435:7;1427:16;;;;;;;;1418:26;;;;;;;;;;;:32;1445:4;1418:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1405:62;;1549:10;1514:8;:26;1531:7;1523:16;;;;;;;;1514:26;;;;;;;;;;;:32;1541:4;1514:32;;;;;;;;;;;;;;;:45;;;;1597:56;1614:7;1623:4;1629:11;1642:10;1597:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:10;1682:17;;1227:479;;;;;:::o;2443:228:25:-;2549:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:24;2599:7;2583:15;:24::i;:::-;2576:45;;;2622:4;2628:2;2632:5;2576:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2576:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2576:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2576:62:25;;;;;;;;;;;;;;;;2568:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:228;;;;;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1015:217:9:-;525:42;1124:30;;;1155:4;1169;1176:5;1124:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:58:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1124:58:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1124:58:9;;;;;;;;;;;;;;;;;1213:12;1219:5;1213;:12::i;:::-;1015:217;;:::o;1248:150:10:-;564:42;1323:31;;;1355:4;1361:5;1323:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1323:44:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1323:44:10;;;;;;;;;;;;;;;;1315:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:150;;:::o;2817:247:25:-;2889:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:10;2912:21;;;;;;;;:7;:21;;;;;;;;;2908:150;;;2949:20;2963:5;2949:13;:20::i;:::-;2908:150;;;3001:10;2990:21;;;;;;;;:7;:21;;;;;;;;;2986:72;;;3027:20;3041:5;3027:13;:20::i;:::-;2986:72;2908:150;2817:247;;;:::o;1445:653:9:-;525:42;1541:25;;;659:42;1581:5;1541:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:46:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:46:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:46:9;;;;;;;;;;;;;;;;;1626:19;1648:5;1626:27;;1664:25;1691:22;1717:34;1739:11;1717:21;:34::i;:::-;1663:88;;;;1761:16;1780:3;1761:22;;1793:21;659:42;1817:60;;;1891:11;1916:17;1947:14;1975:8;1997:25;:23;:25::i;:::-;1817:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1817:215:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1817:215:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1817:215:9;;;;;;;;;;;;;;;;1793:239;;2063:28;2077:13;2063;:28::i;:::-;1445:653;;;;;;:::o;890:111:10:-;564:42;947:20;;;968:5;947:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:27:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;947:27:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:27:10;;;;;;;;;;;;;;;;939:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:111;:::o;2414:363:9:-;2487:17;2506;659:42;2547:62;;;2610:9;2547:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2547:73:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2547:73:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2547:73:9;;;;;;;;;;;;;;;;2535:85;;2667:28;:26;:28::i;:::-;2642:78;;;2721:9;2642:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2642:89:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2642:89:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2642:89:9;;;;;;;;;;;;;;;;2630:101;;2749:9;2760;2741:29;;;;2414:363;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/CountdownGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time before the end of the countdown.\n///             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n///             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // execute griefing\n        return Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the staker to begin countdown to finalize the agreement\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before Countdown.isActive()\n    /// @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require countdown is not started\n        require(isInitialized(), \"deadline already set\");\n\n        // start countdown\n        return Countdown._start();\n    }\n\n    /// @notice Called by the staker to retrieve the remaining stake once the agreement has ended\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: after Countdown.isOver()\n    /// @param recipient address of the account where to send the stake\n    /// @return amount uint256 amount of tokens (18 decimals) retrieved\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // retrieve stake\n        return Staking._takeFullStake(Griefing.getTokenID(staker), staker, recipient);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    /// @notice Validate if the current stake is greater than 0\n    /// @return validity bool true if non-zero stake\n    function isStaked() public view returns (bool validity) {\n        uint256 currentStake = getStake();\n        return currentStake > 0;\n    }\n\n    enum AgreementStatus { isInitialized, isInCountdown, isTerminated }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isInCountdown: staker has triggered countdown to termination\n    ///          - isTerminated: griefing agreement is over, staker can retrieve stake\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        if (Countdown.isOver()) {\n            return AgreementStatus.isTerminated;\n        } else if (Countdown.isActive()) {\n            return AgreementStatus.isInCountdown;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n    /// @return validity bool true if correct state\n    function isInCountdown() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInCountdown;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isTerminated state\n    /// @return validity bool true if correct state\n    function isTerminated() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isTerminated;\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  }
}
