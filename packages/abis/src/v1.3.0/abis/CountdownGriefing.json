{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        { "internalType": "address", "name": "creator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        { "internalType": "uint256", "name": "deadline", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        { "internalType": "address", "name": "factory", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        { "internalType": "uint256", "name": "length", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "cost", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "name": "getRatio",
      "outputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        { "internalType": "uint256", "name": "time", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        { "internalType": "address", "name": "tokenAddress", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" },
        { "internalType": "address", "name": "staker", "type": "address" },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        { "internalType": "bytes", "name": "message", "type": "bytes" }
      ],
      "name": "punish",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        { "internalType": "uint256", "name": "deadline", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "returnStake",
      "outputs": [
        { "internalType": "uint256", "name": "amount", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "recipient", "type": "address" }
      ],
      "name": "retrieveStake",
      "outputs": [
        { "internalType": "uint256", "name": "amount", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        { "internalType": "address", "name": "counterparty", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "address", "name": "token", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        { "internalType": "uint256", "name": "stake", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isStaked",
      "outputs": [
        { "internalType": "bool", "name": "validity", "type": "bool" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506141b6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806372b45a5511610104578063c529ebfd116100a2578063e7f43c6811610071578063e7f43c68146109c8578063ee57e36f14610a12578063eedad66b14610acd578063fc0e3d9014610afb576101da565b8063c529ebfd146108eb578063dac6270d1461095c578063de2229fe1461097a578063e3323aba146109a6576101da565b806388cc58e4116100de57806388cc58e41461077c57806390bfe0bf146107c6578063a9fb763c1461089f578063be1c766b146108cd576101da565b806372b45a55146106a7578063754b2707146106f15780637ac665741461075e576101da565b806341ce28781161017c5780635baeb8061161014b5780635baeb806146105c85780635e5365c1146106215780635f8d96de1461063f578063728fa4941461065d576101da565b806341ce28781461047857806345f54485146104d0578063465b414e146104fe5780635ad3f91814610557576101da565b806319fbb48e116101b857806319fbb48e1461039f57806321df0da7146103cb57806329605e771461042a5780632ab6f8db1461046e576101da565b80630778217a146101df5780630ee2cb10146103295780631723537d14610373575b600080fd5b61032760048036036101008110156101f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156102a157600080fd5b8201836020820111156102b357600080fd5b803590602001918460018302840111640100000000831117156102d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b19565b005b610331610e2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b610f0d565b6040518082600281111561038b57fe5b60ff16815260200191505060405180910390f35b6103a7610f43565b604051808260038111156103b757fe5b60ff16815260200191505060405180910390f35b6103d3610fbc565b604051808360028111156103e357fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61046c6004803603602081101561044057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611001565b005b610476611088565b005b6104ba6004803603602081101561048e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110d565b6040518082815260200191505060405180910390f35b6104fc600480360360208110156104e657600080fd5b8101908080359060200190929190505050611259565b005b6105416004803603606081101561051457600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611327565b6040518082815260200191505060405180910390f35b6105866004803603602081101561056d57600080fd5b81019080803560ff169060200190929190505050611412565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61060b600480360360608110156105de57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611479565b6040518082815260200191505060405180910390f35b6106296115ac565b6040518082815260200191505060405180910390f35b6106476116c0565b6040518082815260200191505060405180910390f35b6106656116c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106af6116f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107336004803603602081101561070757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518083815260200182600281111561074957fe5b60ff1681526020019250505060405180910390f35b6107666117c2565b6040518082815260200191505060405180910390f35b610784611881565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610889600480360360408110156107dc57600080fd5b81019080803590602001909291908035906020019064010000000081111561080357600080fd5b82018360208201111561081557600080fd5b8035906020019184600183028401116401000000008311171561083757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118ab565b6040518082815260200191505060405180910390f35b6108cb600480360360208110156108b557600080fd5b81019080803590602001909291905050506119ec565b005b6108d5611b35565b6040518082815260200191505060405180910390f35b61091a6004803603602081101561090157600080fd5b81019080803560ff169060200190929190505050611b3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610964611ba6565b6040518082815260200191505060405180910390f35b610982611bd6565b6040518082600281111561099257fe5b60ff16815260200191505060405180910390f35b6109ae611c06565b604051808215151515815260200191505060405180910390f35b6109d0611c1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036020811015610a2857600080fd5b8101908080359060200190640100000000811115610a4557600080fd5b820183602082011115610a5757600080fd5b80359060200191846001830284011164010000000083111715610a7957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c47565b005b610af960048036036020811015610ae357600080fd5b8101908080359060200190929190505050611cce565b005b610b03611e17565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610bbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061410b602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610c8557610c8489611e7a565b5b610c9188878787612088565b610c9a83612347565b6000825114610cad57610cac82612388565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610d7c57fe5b60ff168152602001858152602001846002811115610d9657fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610de0578082015181840152602081019050610dc5565b50505050905090810190601f168015610e0d5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d6020811015610ef757600080fd5b8101908080519060200190929190505050905090565b6000610f17612427565b15610f255760029050610f40565b610f2d61244e565b15610f3b5760019050610f40565b600090505b90565b6000806001541415610f585760009050610fb9565b60006002811115610f6557fe5b610f6d611bd6565b6002811115610f7857fe5b1415610f875760019050610fb9565b600280811115610f9357fe5b610f9b611bd6565b6002811115610fa657fe5b14610fb45760029050610fb9565b600390505b90565b600080610fed600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612476565b915081610ff983611412565b915091509091565b61100a336124cf565b61107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61108581612529565b50565b611091336124cf565b611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61110b612738565b565b6000611118336128a5565b806111285750611127336124cf565b5b61119a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6111a26128e4565b611214576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061125161124a82612476565b828561290b565b915050919050565b61126233612932565b806112725750611271336124cf565b5b6112e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061132261131a82612476565b828385612971565b505050565b600060028081111561133557fe5b82600281111561134157fe5b1415611372576012600a0a61136361135d856012600a0a612996565b86612a1c565b8161136a57fe5b04905061140b565b6001600281111561137f57fe5b82600281111561138b57fe5b141561139a576000905061140b565b600060028111156113a757fe5b8260028111156113b357fe5b141561140a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141356021913960400191505060405180910390fd5b5b9392505050565b600060028081111561142057fe5b82600281111561142c57fe5b14156114415761143a612a54565b9050611474565b6001600281111561144e57fe5b82600281111561145a57fe5b141561146f57611468612a70565b9050611474565b600090505b919050565b600060028081111561148757fe5b82600281111561149357fe5b14156114c4576012600a0a6114b56114af856012600a0a612996565b86612a8c565b816114bc57fe5b0490506115a5565b600160028111156114d157fe5b8260028111156114dd57fe5b1415611534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140c96021913960400191505060405180910390fd5b6000600281111561154157fe5b82600281111561154d57fe5b14156115a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141356021913960400191505060405180910390fd5b5b9392505050565b60006115b7336128a5565b806115c757506115c6336124cf565b5b611639576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611641612ac0565b6116b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6116bb612ae7565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b60006117cc6128e4565b61183e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061187b61187482612476565b828361290b565b91505090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006118b633612932565b806118c657506118c5336124cf565b5b611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6119406128e4565b156119b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6119e433600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612b0f565b905092915050565b6119f533612932565b80611a055750611a04336124cf565b5b611a77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b611a7f6128e4565b15611af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611b30611b2882612476565b823385612dd2565b505050565b6000600154905090565b6000600280811115611b4d57fe5b826002811115611b5957fe5b1415611b6e57611b67612df8565b9050611ba1565b60016002811115611b7b57fe5b826002811115611b8757fe5b1415611b9c57611b95612e14565b9050611ba1565b600090505b919050565b6000426000541115611bce57611bc742600054612e3090919063ffffffff16565b9050611bd3565b600090505b90565b6000806000541415611beb5760009050611c03565b426000541115611bfe5760019050611c03565b600290505b90565b600080611c11611e17565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611c50336124cf565b611cc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611ccb81612388565b50565b611cd7336128a5565b80611ce75750611ce6336124cf565b5b611d59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611d616128e4565b15611dd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611e12611e0a82612476565b823385612dd2565b505050565b6000611e75611e4a600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612476565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e7a565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561209557fe5b8160028111156120a157fe5b14806120c35750600160028111156120b557fe5b8160028111156120c157fe5b145b156121225760008214612121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614156602c913960400191505060405180910390fd5b5b61212b83612ee0565b61219d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156121fb57fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156122a557fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561231157fe5b60ff16815260200183815260200182600281111561232b57fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156123ea5780820151818401526020810190506123cf565b50505050905090810190601f1680156124175780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561243557fe5b61243d610f43565b600381111561244857fe5b14905090565b60006002600381111561245d57fe5b612465610f43565b600381111561247057fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156125ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612691576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156127fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006128af6116f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006002808111156128f257fe5b6128fa610f0d565b600281111561290557fe5b14905090565b6000806129188585612e7a565b905061292685858584612971565b50809150509392505050565b600061293c6116c9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061297e858584612f23565b905061298b858484613103565b809050949350505050565b6000808314156129a95760009050612a16565b60008284029050828482816129ba57fe5b0414612a11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140ea6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a612a44612a308585612996565b60026012600a0a81612a3e57fe5b046132c1565b81612a4b57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081612ab0612aa0856012600a0a612996565b60028581612aaa57fe5b046132c1565b81612ab757fe5b04905092915050565b6000806002811115612ace57fe5b612ad6610f0d565b6002811115612ae157fe5b14905090565b6000612afe426001546132c190919063ffffffff16565b9050612b0981613349565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612c0c57fe5b826002811115612c1857fe5b1415612c8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612c97838784611327565b9350612ca481898661338a565b612caf818888613464565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d86578082015181840152602081019050612d6b565b50505050905090810190601f168015612db35780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612ddf85858461350a565b9050612ded8584308561366f565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b6000612e7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613862565b905092915050565b600060026000846002811115612e8c57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612eef57fe5b826002811115612efb57fe5b1480612f1c5750600280811115612f0e57fe5b826002811115612f1a57fe5b145b9050919050565b60008060026000866002811115612f3657fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612ffa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b61300d8382612e3090919063ffffffff16565b9150816002600087600281111561302057fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f35785858585604051808560028111156130a457fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261310d81612ee0565b61317f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61318884611412565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561320e57600080fd5b505af1158015613222573d6000803e3d6000fd5b505050506040513d602081101561323857600080fd5b81019080805190602001909291905050506132bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b60008082840190508381101561333f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261339481612ee0565b613406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561341257fe5b84600281111561341e57fe5b14156134335761342e8383613922565b61345e565b6001600281111561344057fe5b84600281111561344c57fe5b141561345d5761345c8383613a3a565b5b5b50505050565b600080613472858585612f23565b905061347e8584613b86565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156134b257fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600061357a826002600087600281111561352057fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546132c190919063ffffffff16565b9050806002600086600281111561358d57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561361157fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361367981612ee0565b6136eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6136f485611412565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156137ae57600080fd5b505af11580156137c2573d6000803e3d6000fd5b505050506040513d60208110156137d857600080fd5b810190808051906020019092919050505061385b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600083831115829061390f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156138d45780820151818401526020810190506138b9565b50505050905090810190601f1680156139015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156139f157600080fd5b505af1158015613a05573d6000803e3d6000fd5b505050506040513d6020811015613a1b57600080fd5b810190808051906020019092919050505050613a3681613c5d565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613ad557600080fd5b505af1158015613ae9573d6000803e3d6000fd5b505050506040513d6020811015613aff57600080fd5b8101908080519060200190929190505050613b82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b81613b9081612ee0565b613c02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613c0e57fe5b836002811115613c1a57fe5b1415613c2e57613c2982613c5d565b613c58565b60016002811115613c3b57fe5b836002811115613c4757fe5b1415613c5757613c5682613e6c565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613d0c57600080fd5b505af1158015613d20573d6000803e3d6000fd5b505050506040513d6020811015613d3657600080fd5b8101908080519060200190929190505050506000819050600080613d5983613f83565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613da0612a70565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613e1e57600080fd5b505af1158015613e32573d6000803e3d6000fd5b505050506040513d6020811015613e4857600080fd5b81019080805190602001909291905050509050613e6481613e6c565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613ed357600080fd5b505af1158015613ee7573d6000803e3d6000fd5b505050506040513d6020811015613efd57600080fd5b8101908080519060200190929190505050613f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613feb57600080fd5b505afa158015613fff573d6000803e3d6000fd5b505050506040513d602081101561401557600080fd5b81019080805190602001909291905050509050614030612e14565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561408057600080fd5b505afa158015614094573d6000803e3d6000fd5b505050506040513d60208110156140aa57600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158203a51657046ef195c21c2eacc31503bb8b4c95809690a4203ea264000ddd2efc164736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806372b45a5511610104578063c529ebfd116100a2578063e7f43c6811610071578063e7f43c68146109c8578063ee57e36f14610a12578063eedad66b14610acd578063fc0e3d9014610afb576101da565b8063c529ebfd146108eb578063dac6270d1461095c578063de2229fe1461097a578063e3323aba146109a6576101da565b806388cc58e4116100de57806388cc58e41461077c57806390bfe0bf146107c6578063a9fb763c1461089f578063be1c766b146108cd576101da565b806372b45a55146106a7578063754b2707146106f15780637ac665741461075e576101da565b806341ce28781161017c5780635baeb8061161014b5780635baeb806146105c85780635e5365c1146106215780635f8d96de1461063f578063728fa4941461065d576101da565b806341ce28781461047857806345f54485146104d0578063465b414e146104fe5780635ad3f91814610557576101da565b806319fbb48e116101b857806319fbb48e1461039f57806321df0da7146103cb57806329605e771461042a5780632ab6f8db1461046e576101da565b80630778217a146101df5780630ee2cb10146103295780631723537d14610373575b600080fd5b61032760048036036101008110156101f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156102a157600080fd5b8201836020820111156102b357600080fd5b803590602001918460018302840111640100000000831117156102d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b19565b005b610331610e2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b610f0d565b6040518082600281111561038b57fe5b60ff16815260200191505060405180910390f35b6103a7610f43565b604051808260038111156103b757fe5b60ff16815260200191505060405180910390f35b6103d3610fbc565b604051808360028111156103e357fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b61046c6004803603602081101561044057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611001565b005b610476611088565b005b6104ba6004803603602081101561048e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110d565b6040518082815260200191505060405180910390f35b6104fc600480360360208110156104e657600080fd5b8101908080359060200190929190505050611259565b005b6105416004803603606081101561051457600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611327565b6040518082815260200191505060405180910390f35b6105866004803603602081101561056d57600080fd5b81019080803560ff169060200190929190505050611412565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61060b600480360360608110156105de57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611479565b6040518082815260200191505060405180910390f35b6106296115ac565b6040518082815260200191505060405180910390f35b6106476116c0565b6040518082815260200191505060405180910390f35b6106656116c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106af6116f6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107336004803603602081101561070757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611723565b6040518083815260200182600281111561074957fe5b60ff1681526020019250505060405180910390f35b6107666117c2565b6040518082815260200191505060405180910390f35b610784611881565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610889600480360360408110156107dc57600080fd5b81019080803590602001909291908035906020019064010000000081111561080357600080fd5b82018360208201111561081557600080fd5b8035906020019184600183028401116401000000008311171561083757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118ab565b6040518082815260200191505060405180910390f35b6108cb600480360360208110156108b557600080fd5b81019080803590602001909291905050506119ec565b005b6108d5611b35565b6040518082815260200191505060405180910390f35b61091a6004803603602081101561090157600080fd5b81019080803560ff169060200190929190505050611b3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610964611ba6565b6040518082815260200191505060405180910390f35b610982611bd6565b6040518082600281111561099257fe5b60ff16815260200191505060405180910390f35b6109ae611c06565b604051808215151515815260200191505060405180910390f35b6109d0611c1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610acb60048036036020811015610a2857600080fd5b8101908080359060200190640100000000811115610a4557600080fd5b820183602082011115610a5757600080fd5b80359060200191846001830284011164010000000083111715610a7957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c47565b005b610af960048036036020811015610ae357600080fd5b8101908080359060200190929190505050611cce565b005b610b03611e17565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610bbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061410b602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610c8557610c8489611e7a565b5b610c9188878787612088565b610c9a83612347565b6000825114610cad57610cac82612388565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610d7c57fe5b60ff168152602001858152602001846002811115610d9657fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610de0578082015181840152602081019050610dc5565b50505050905090810190601f168015610e0d5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d6020811015610ef757600080fd5b8101908080519060200190929190505050905090565b6000610f17612427565b15610f255760029050610f40565b610f2d61244e565b15610f3b5760019050610f40565b600090505b90565b6000806001541415610f585760009050610fb9565b60006002811115610f6557fe5b610f6d611bd6565b6002811115610f7857fe5b1415610f875760019050610fb9565b600280811115610f9357fe5b610f9b611bd6565b6002811115610fa657fe5b14610fb45760029050610fb9565b600390505b90565b600080610fed600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612476565b915081610ff983611412565b915091509091565b61100a336124cf565b61107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61108581612529565b50565b611091336124cf565b611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61110b612738565b565b6000611118336128a5565b806111285750611127336124cf565b5b61119a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6111a26128e4565b611214576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061125161124a82612476565b828561290b565b915050919050565b61126233612932565b806112725750611271336124cf565b5b6112e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061132261131a82612476565b828385612971565b505050565b600060028081111561133557fe5b82600281111561134157fe5b1415611372576012600a0a61136361135d856012600a0a612996565b86612a1c565b8161136a57fe5b04905061140b565b6001600281111561137f57fe5b82600281111561138b57fe5b141561139a576000905061140b565b600060028111156113a757fe5b8260028111156113b357fe5b141561140a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141356021913960400191505060405180910390fd5b5b9392505050565b600060028081111561142057fe5b82600281111561142c57fe5b14156114415761143a612a54565b9050611474565b6001600281111561144e57fe5b82600281111561145a57fe5b141561146f57611468612a70565b9050611474565b600090505b919050565b600060028081111561148757fe5b82600281111561149357fe5b14156114c4576012600a0a6114b56114af856012600a0a612996565b86612a8c565b816114bc57fe5b0490506115a5565b600160028111156114d157fe5b8260028111156114dd57fe5b1415611534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140c96021913960400191505060405180910390fd5b6000600281111561154157fe5b82600281111561154d57fe5b14156115a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806141356021913960400191505060405180910390fd5b5b9392505050565b60006115b7336128a5565b806115c757506115c6336124cf565b5b611639576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611641612ac0565b6116b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6116bb612ae7565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b60006117cc6128e4565b61183e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061187b61187482612476565b828361290b565b91505090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006118b633612932565b806118c657506118c5336124cf565b5b611938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6119406128e4565b156119b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6119e433600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612b0f565b905092915050565b6119f533612932565b80611a055750611a04336124cf565b5b611a77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b611a7f6128e4565b15611af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611b30611b2882612476565b823385612dd2565b505050565b6000600154905090565b6000600280811115611b4d57fe5b826002811115611b5957fe5b1415611b6e57611b67612df8565b9050611ba1565b60016002811115611b7b57fe5b826002811115611b8757fe5b1415611b9c57611b95612e14565b9050611ba1565b600090505b919050565b6000426000541115611bce57611bc742600054612e3090919063ffffffff16565b9050611bd3565b600090505b90565b6000806000541415611beb5760009050611c03565b426000541115611bfe5760019050611c03565b600290505b90565b600080611c11611e17565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611c50336124cf565b611cc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611ccb81612388565b50565b611cd7336128a5565b80611ce75750611ce6336124cf565b5b611d59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611d616128e4565b15611dd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611e12611e0a82612476565b823385612dd2565b505050565b6000611e75611e4a600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612476565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612e7a565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600281111561209557fe5b8160028111156120a157fe5b14806120c35750600160028111156120b557fe5b8160028111156120c157fe5b145b156121225760008214612121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180614156602c913960400191505060405180910390fd5b5b61212b83612ee0565b61219d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff021916908360028111156121fb57fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156122a557fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561231157fe5b60ff16815260200183815260200182600281111561232b57fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156123ea5780820151818401526020810190506123cf565b50505050905090810190601f1680156124175780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561243557fe5b61243d610f43565b600381111561244857fe5b14905090565b60006002600381111561245d57fe5b612465610f43565b600381111561247057fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156125ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612691576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156127fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006128af6116f6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006002808111156128f257fe5b6128fa610f0d565b600281111561290557fe5b14905090565b6000806129188585612e7a565b905061292685858584612971565b50809150509392505050565b600061293c6116c9565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600061297e858584612f23565b905061298b858484613103565b809050949350505050565b6000808314156129a95760009050612a16565b60008284029050828482816129ba57fe5b0414612a11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806140ea6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a612a44612a308585612996565b60026012600a0a81612a3e57fe5b046132c1565b81612a4b57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081612ab0612aa0856012600a0a612996565b60028581612aaa57fe5b046132c1565b81612ab757fe5b04905092915050565b6000806002811115612ace57fe5b612ad6610f0d565b6002811115612ae157fe5b14905090565b6000612afe426001546132c190919063ffffffff16565b9050612b0981613349565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612c0c57fe5b826002811115612c1857fe5b1415612c8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612c97838784611327565b9350612ca481898661338a565b612caf818888613464565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d86578082015181840152602081019050612d6b565b50505050905090810190601f168015612db35780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612ddf85858461350a565b9050612ded8584308561366f565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b6000612e7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613862565b905092915050565b600060026000846002811115612e8c57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612eef57fe5b826002811115612efb57fe5b1480612f1c5750600280811115612f0e57fe5b826002811115612f1a57fe5b145b9050919050565b60008060026000866002811115612f3657fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612ffa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b61300d8382612e3090919063ffffffff16565b9150816002600087600281111561302057fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f35785858585604051808560028111156130a457fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261310d81612ee0565b61317f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61318884611412565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561320e57600080fd5b505af1158015613222573d6000803e3d6000fd5b505050506040513d602081101561323857600080fd5b81019080805190602001909291905050506132bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b60008082840190508381101561333f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261339481612ee0565b613406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561341257fe5b84600281111561341e57fe5b14156134335761342e8383613922565b61345e565b6001600281111561344057fe5b84600281111561344c57fe5b141561345d5761345c8383613a3a565b5b5b50505050565b600080613472858585612f23565b905061347e8584613b86565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156134b257fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600061357a826002600087600281111561352057fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546132c190919063ffffffff16565b9050806002600086600281111561358d57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561361157fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361367981612ee0565b6136eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6136f485611412565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156137ae57600080fd5b505af11580156137c2573d6000803e3d6000fd5b505050506040513d60208110156137d857600080fd5b810190808051906020019092919050505061385b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600083831115829061390f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156138d45780820151818401526020810190506138b9565b50505050905090810190601f1680156139015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156139f157600080fd5b505af1158015613a05573d6000803e3d6000fd5b505050506040513d6020811015613a1b57600080fd5b810190808051906020019092919050505050613a3681613c5d565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613ad557600080fd5b505af1158015613ae9573d6000803e3d6000fd5b505050506040513d6020811015613aff57600080fd5b8101908080519060200190929190505050613b82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b81613b9081612ee0565b613c02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613c0e57fe5b836002811115613c1a57fe5b1415613c2e57613c2982613c5d565b613c58565b60016002811115613c3b57fe5b836002811115613c4757fe5b1415613c5757613c5682613e6c565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613d0c57600080fd5b505af1158015613d20573d6000803e3d6000fd5b505050506040513d6020811015613d3657600080fd5b8101908080519060200190929190505050506000819050600080613d5983613f83565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613da0612a70565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613e1e57600080fd5b505af1158015613e32573d6000803e3d6000fd5b505050506040513d6020811015613e4857600080fd5b81019080805190602001909291905050509050613e6481613e6c565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613ed357600080fd5b505af1158015613ee7573d6000803e3d6000fd5b505050506040513d6020811015613efd57600080fd5b8101908080519060200190929190505050613f80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613feb57600080fd5b505afa158015613fff573d6000803e3d6000fd5b505050506040513d602081101561401557600080fd5b81019080805190602001909291905050509050614030612e14565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561408057600080fd5b505afa158015614094573d6000803e3d6000fd5b505050506040513d60208110156140aa57600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158203a51657046ef195c21c2eacc31503bb8b4c95809690a4203ea264000ddd2efc164736f6c63430005100032",
  "sourceMap": "1593:13575:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1593:13575:0;;;;;;;",
  "deployedSourceMap": "1593:13575:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1593:13575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:970;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3572:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3572:970:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3572:970:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3572:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3572:970:0;;;;;;;;;;;;;;;:::i;:::-;;1134:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13964:335:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:428:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12785:210:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10955:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10955:228:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;11322:204;;;:::i;:::-;;10252:496;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10252:496:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8234:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8234:414:0;;;;;;;;;;;;;;;;;:::i;:::-;;5448:393:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5448:393:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6477:428:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6477:428:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8939:361:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1034:95:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12171:112:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11655:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4337:212:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:212:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9558:345:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1770:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7521:439:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7521:439:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7521:439:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7521:439:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7521:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7521:439:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6219:476;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6219:476:0;;;;;;;;;;;;;;;;;:::i;:::-;;1440:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1047:292:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1047:292:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1479:173:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1996:275;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13395:139:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1454:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4746:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4746:226:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4746:226:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4746:226:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4746:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4746:226:0;;;;;;;;;;;;;;;:::i;:::-;;5354:471;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5354:471:0;;;;;;;;;;;;;;;;;:::i;:::-;;13125:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3572:970;600:10:24;589:8;;:21;;;;;;;;;;;;;;;;;;702:15;762:7;750:20;738:32;;801:1;789:8;:13;;;781:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3923:6:0;3908:5;:12;;;:21;;;;;;;;;;;;;;;;;;3960:12;3939:5;:18;;;:33;;;;;;;;;;;;;;;;;;4031:1;4011:22;;:8;:22;;;4007:84;;4049:31;4071:8;4049:21;:31::i;:::-;4007:84;4131:53;4150:6;4158:7;4167:5;4174:9;4131:18;:53::i;:::-;4227:37;4248:15;4227:20;:37::i;:::-;4322:1;4303:8;:15;:20;4299:87;;4339:36;4366:8;4339:26;:36::i;:::-;4299:87;4438:97;4450:8;4460:6;4468:12;4482:7;4491:5;4498:9;4509:15;4526:8;4438:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4438:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:970;;;;;;;;;:::o;1134:229:24:-;1177:15;1313:8;;;;;;;;;;;1304:37;;;1350:4;1304:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1304:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1304:52:24;;;;;;;;;;;;;;;;1297:59;;1134:229;:::o;13964:335:0:-;14015:22;14053:18;:16;:18::i;:::-;14049:244;;;14094:28;14087:35;;;;14049:244;14143:20;:18;:20::i;:::-;14139:154;;;14186:29;14179:36;;;;14139:154;14253:29;14246:36;;13964:335;;:::o;1971:428:11:-;2022:22;2071:1;2060:7;;:12;2056:59;;;2093:22;2086:29;;;;2056:59;2161:21;2129:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2125:99;;;2203:21;2196:28;;;;2125:99;2270:21;2238:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2234:158;;2312:24;2305:31;;;;2234:158;2370:22;2363:29;;1971:428;;:::o;12785:210:0:-;12826:27;12855:13;12890:33;12910:5;:12;;;;;;;;;;;;12890:19;:33::i;:::-;12880:43;;12941:7;12950:37;12979:7;12950:28;:37::i;:::-;12933:55;;;;12785:210;;:::o;10955:228::-;11051:31;11071:10;11051:19;:31::i;:::-;11043:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11140:36;11167:8;11140:26;:36::i;:::-;10955:228;:::o;11322:204::-;11402:31;11422:10;11402:19;:31::i;:::-;11394:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11491:28;:26;:28::i;:::-;11322:204::o;10252:496::-;10310:14;10371:20;10380:10;10371:8;:20::i;:::-;:55;;;;10395:31;10415:10;10395:19;:31::i;:::-;10371:55;10363:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10511:14;:12;:14::i;:::-;10503:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10598:14;10615:5;:12;;;;;;;;;;;;10598:29;;10671:70;10694:27;10714:6;10694:19;:27::i;:::-;10723:6;10731:9;10671:22;:70::i;:::-;10664:77;;;10252:496;;;:::o;8234:414::-;8333:26;8348:10;8333:14;:26::i;:::-;:61;;;;8363:31;8383:10;8363:19;:31::i;:::-;8333:61;8325:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8477:14;8494:5;:12;;;;;;;;;;;;8477:29;;8561:80;8580:27;8600:6;8580:19;:27::i;:::-;8609:6;8617;8625:15;8561:18;:80::i;:::-;;8234:414;;:::o;5448:393:16:-;5541:12;5582:13;5569:26;;;;;;;;:9;:26;;;;;;;;;5565:110;;;955:2;940;932:26;5616:53;5632:29;5645:10;955:2;940;932:26;5632:12;:29::i;:::-;5663:5;5616:15;:53::i;:::-;:59;;;;;;5609:66;;;;5565:110;5702:13;5689:26;;;;;;;;:9;:26;;;;;;;;;5685:52;;;5736:1;5729:8;;;;5685:52;5764:13;5751:26;;;;;;;;:9;:26;;;;;;;;;5747:87;;;5791:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:87;5448:393;;;;;;:::o;554:280:25:-;616:20;663:10;652:21;;;;;;;;:7;:21;;;;;;;;;648:71;;;694:25;:23;:25::i;:::-;687:32;;;;648:71;744:10;733:21;;;;;;;;:7;:21;;;;;;;;;729:71;;;775:25;:23;:25::i;:::-;768:32;;;;729:71;825:1;810:17;;554:280;;;;:::o;6477:428:16:-;6570:18;6617:13;6604:26;;;;;;;;:9;:26;;;;;;;;;6600:104;;;955:2;940;932:26;6651:47;6667:23;6680:4;955:2;940;932:26;6667:12;:23::i;:::-;6692:5;6651:15;:47::i;:::-;:53;;;;;;6644:60;;;;6600:104;6731:13;6718:26;;;;;;;;:9;:26;;;;;;;;;6714:87;;;6758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6714:87;6828:13;6815:26;;;;;;;;:9;:26;;;;;;;;;6811:87;;;6855:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:87;6477:428;;;;;;:::o;8939:361:0:-;8981:16;9044:20;9053:10;9044:8;:20::i;:::-;:55;;;;9068:31;9088:10;9068:19;:31::i;:::-;9044:55;9036:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9190:15;:13;:15::i;:::-;9182:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9275:18;:16;:18::i;:::-;9268:25;;8939:361;:::o;1034:95:12:-;1078:16;1113:9;;1106:16;;1034:95;:::o;12171:112:0:-;12219:20;12258:5;:18;;;;;;;;;;;;12251:25;;12171:112;:::o;11655:94::-;11697:14;11730:5;:12;;;;;;;;;;;;11723:19;;11655:94;:::o;4337:212:16:-;4392:13;4407:19;4485:11;:19;4497:6;4485:19;;;;;;;;;;;;;;;:25;;;4512:11;:19;4524:6;4512:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4477:65;;;;4337:212;;;:::o;9558:345:0:-;9597:14;9669;:12;:14::i;:::-;9661:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9756:14;9773:5;:12;;;;;;;;;;;;9756:29;;9829:67;9852:27;9872:6;9852:19;:27::i;:::-;9881:6;9889;9829:22;:67::i;:::-;9822:74;;;9558:345;:::o;1770:92:24:-;1813:15;1847:8;;;;;;;;;;;1840:15;;1770:92;:::o;7521:439:0:-;7595:12;7654:26;7669:10;7654:14;:26::i;:::-;:61;;;;7684:31;7704:10;7684:19;:31::i;:::-;7654:61;7646:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7811:14;:12;:14::i;:::-;7810:15;7802:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7891:62;7907:10;7919:5;:12;;;;;;;;;;;;7933:10;7945:7;7891:15;:62::i;:::-;7884:69;;7521:439;;;;:::o;6219:476::-;6308:26;6323:10;6308:14;:26::i;:::-;:61;;;;6338:31;6358:10;6338:19;:31::i;:::-;6308:61;6300:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6465:14;:12;:14::i;:::-;6464:15;6456:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6548:14;6565:5;:12;;;;;;;;;;;;6548:29;;6609:79;6627:27;6647:6;6627:19;:27::i;:::-;6656:6;6664:10;6676:11;6609:17;:79::i;:::-;;6219:476;;:::o;1440:89:11:-;1482:14;1515:7;;1508:14;;1440:89;:::o;1047:292:25:-;1112:23;1162:10;1151:21;;;;;;;;:7;:21;;;;;;;;;1147:74;;;1193:28;:26;:28::i;:::-;1186:35;;;;1147:74;1246:10;1235:21;;;;;;;;:7;:21;;;;;;;;;1231:74;;;1277:28;:26;:28::i;:::-;1270:35;;;;1231:74;1330:1;1315:17;;1047:292;;;;:::o;1479:173:12:-;1528:12;1568:3;1556:9;;:15;1552:93;;;1592:18;1606:3;1592:9;;:13;;:18;;;;:::i;:::-;1585:25;;;;1552:93;1644:1;1637:8;;1479:173;;:::o;1996:275::-;2046:21;2096:1;2083:9;;:14;2079:60;;;2118:21;2111:28;;;;2079:60;2165:3;2153:9;;:15;2149:115;;;2189:20;2182:27;;;;2149:115;2243:21;2236:28;;1996:275;;:::o;13395:139:0:-;13436:13;13461:20;13484:10;:8;:10::i;:::-;13461:33;;13526:1;13511:12;:16;13504:23;;;13395:139;:::o;1454:95:18:-;1498:16;1533:9;;;;;;;;;;;1526:16;;1454:95;:::o;4746:226:0:-;4842:31;4862:10;4842:19;:31::i;:::-;4834:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4929:36;4956:8;4929:26;:36::i;:::-;4746:226;:::o;5354:471::-;5450:20;5459:10;5450:8;:20::i;:::-;:55;;;;5474:31;5494:10;5474:19;:31::i;:::-;5450:55;5442:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5595:14;:12;:14::i;:::-;5594:15;5586:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5678:14;5695:5;:12;;;;;;;;;;;;5678:29;;5739:79;5757:27;5777:6;5757:19;:27::i;:::-;5786:6;5794:10;5806:11;5739:17;:79::i;:::-;;5354:471;;:::o;13125:147::-;13166:13;13198:67;13217:33;13237:5;:12;;;;;;;;;;;;13217:19;:33::i;:::-;13252:5;:12;;;;;;;;;;;;13198:18;:67::i;:::-;13191:74;;13125:147;:::o;301:417:18:-;442:1;421:23;;:9;;;;;;;;;;;:23;;;413:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:1;523:22;;:8;:22;;;;515:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:8;628:9;;:20;;;;;;;;;;;;;;;;;;686:25;702:8;686:25;;;;;;;;;;;;;;;;;;;;;;301:417;:::o;1711:640:16:-;1847:13;1834:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1877:13;1864:26;;;;;;;;:9;:26;;;;;;;;;1834:56;1830:154;;;1923:1;1914:5;:10;1906:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:154;2034:36;2062:7;2034:27;:36::i;:::-;2026:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:7;2100:11;:19;2112:6;2100:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2207:5;2179:11;:19;2191:6;2179:19;;;;;;;;;;;;;;;:25;;:33;;;;2254:9;2222:11;:19;2234:6;2222:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2301:43;2310:6;2318:7;2327:5;2334:9;2301:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:640;;;;:::o;821:110:11:-;886:6;876:7;:16;;;;907:17;917:6;907:17;;;;;;;;;;;;;;;;;;821:110;:::o;417:97:14:-;486:21;498:8;486:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;486:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:97;:::o;3352:126:11:-;3393:13;3449:22;3425:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;3418:53;;3352:126;:::o;3079:130::-;3122:13;3178:24;3154:48;;;;;;;;:20;:18;:20::i;:::-;:48;;;;;;;;;3147:55;;3079:130;:::o;4715:180:16:-;4774:27;4860:11;:19;4872:6;4860:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4852:36;;4715:180;;;:::o;1555:111:18:-;1614:7;1650:9;;;;;;;;;;;1640:19;;:6;:19;;;1633:26;;1555:111;;;:::o;724:410::-;856:1;835:23;;:9;;;;;;;;;;;:23;;;;827:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:1;939:22;;:8;:22;;;;931:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:8;1044:9;;:20;;;;;;;;;;;;;;;;;;1102:25;1118:8;1102:25;;;;;;;;;;;;;;;;;;;;;;724:410;:::o;1140:285::-;1256:1;1235:23;;:9;;;;;;;;;;;:23;;;;1227:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:1;1331:9;;:22;;;;;;;;;;;;;;;;;;1391:27;1415:1;1391:27;;;;;;;;;;;;;;;;;;;;;;1140:285::o;11926:117:0:-;11983:13;12025:11;:9;:11::i;:::-;12015:21;;:6;:21;;;12008:28;;11926:117;;;:::o;15028:138::-;15075:13;15131:28;15107:52;;;;;;;;:20;:18;:20::i;:::-;:52;;;;;;;;;15100:59;;15028:138;:::o;2990:369:23:-;3096:19;3150:22;3175:35;3194:7;3203:6;3175:18;:35::i;:::-;3150:60;;3248:54;3259:7;3268:6;3276:9;3287:14;3248:10;:54::i;:::-;;3338:14;3331:21;;;2990:369;;;;;:::o;12466:129:0:-;12529:13;12571:17;:15;:17::i;:::-;12561:27;;:6;:27;;;12554:34;;12466:129;;;:::o;2152:408:23:-;2276:16;2341:55;2366:7;2375:6;2383:12;2341:24;:55::i;:::-;2330:66;;2444:56;2467:7;2476:9;2487:12;2444:22;:56::i;:::-;2545:8;2538:15;;2152:408;;;;;;:::o;2159:459:52:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;519:140:6:-;576:9;312:2;297;289:26;601:43;614:18;627:1;630;614:12;:18::i;:::-;642:1;312:2;297;289:26;634:9;;;;;;601:12;:43::i;:::-;:51;;;;;;597:55;;519:140;;;;:::o;2879:99:9:-;2929:13;525:42;2954:17;;2879:99;:::o;1500::10:-;1550:13;564:42;1575:17;;1500:99;:::o;853:136:6:-;910:9;981:1;935:43;948:22;961:1;312:2;297;289:26;948:12;:22::i;:::-;976:1;972;:5;;;;;;935:12;:43::i;:::-;:47;;;;;;931:51;;853:136;;;;:::o;14449:140:0:-;14497:13;14553:29;14529:53;;;;;;;;:20;:18;:20::i;:::-;:53;;;;;;;;;14522:60;;14449:140;:::o;1126:164:11:-;1162:16;1201;1213:3;1201:7;;:11;;:16;;;;:::i;:::-;1190:27;;1227:31;1249:8;1227:21;:31::i;:::-;1275:8;1268:15;;1126:164;:::o;2917:969:16:-;3065:12;3128:13;3144:11;:19;3156:6;3144:19;;;;;;;;;;;;;;;:25;;;3128:41;;3179:19;3201:11;:19;3213:6;3201:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3179:51;;3240:27;3270:11;:19;3282:6;3270:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3240:57;;3329:13;3316:26;;;;;;;;:9;:26;;;;;;;;;;3308:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:37;3496:5;3503:10;3515:9;3488:7;:37::i;:::-;3481:44;;3589:47;3612:7;3621:8;3631:4;3589:22;:47::i;:::-;3702;3721:7;3730:6;3738:10;3702:18;:47::i;:::-;;3787:52;3795:8;3805:6;3813:10;3825:4;3831:7;3787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3787:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:4;3868:11;;;;;2917:969;;;;;;:::o;1209:417:23:-;1328:16;1393:54;1418:7;1427:6;1435:11;1393:24;:54::i;:::-;1382:65;;1495:71;1522:7;1531:6;1547:4;1554:11;1495:26;:71::i;:::-;1611:8;1604:15;;1209:417;;;;;;:::o;3102:111:9:-;3155:16;659:42;3183:23;;3102:111;:::o;1723::10:-;1776:16;698:42;1804:23;;1723:111;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3707:159:13:-;3793:15;3827:8;:26;3844:7;3836:16;;;;;;;;3827:26;;;;;;;;;;;:32;3854:4;3827:32;;;;;;;;;;;;;;;;3820:39;;3707:159;;;;:::o;1660:148:25:-;1723:13;1766:10;1755:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1791:10;1780:21;;;;;;;;:7;:21;;;;;;;;;1755:46;1748:53;;1660:148;;;:::o;2070:694:13:-;2181:18;2242:22;2267:8;:26;2284:7;2276:16;;;;;;;;2267:26;;;;;;;;;;;:32;2294:4;2267:32;;;;;;;;;;;;;;;;2242:57;;2375:14;2357;:32;;2349:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:34;2507:14;2488;:18;;:34;;;;:::i;:::-;2475:47;;2604:10;2569:8;:26;2586:7;2578:16;;;;;;;;2569:26;;;;;;;;;;;:32;2596:4;2569:32;;;;;;;;;;;;;;;:45;;;;2652:59;2669:7;2678:4;2684:14;2700:10;2652:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:10;2740:17;;;2070:694;;;;;:::o;2002:200:25:-;2090:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:24;2140:7;2124:15;:24::i;:::-;2117:41;;;2159:2;2163:5;2117:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2117:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:52:25;;;;;;;;;;;;;;;;2109:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:200;;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;768:122:12:-;839:8;827:9;:20;;;;862:21;874:8;862:21;;;;;;;;;;;;;;;;;;768:122;:::o;3256:285:25:-;3346:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:10;3369:21;;;;;;;;:7;:21;;;;;;;;;3365:170;;;3406:30;3424:4;3430:5;3406:17;:30::i;:::-;3365:170;;;3468:10;3457:21;;;;;;;;:7;:21;;;;;;;;;3453:82;;;3494:30;3512:4;3518:5;3494:17;:30::i;:::-;3453:82;3365:170;3256:285;;;;:::o;3778:453:23:-;3883:16;3937:18;3958:55;3983:7;3992:6;4000:12;3958:24;:55::i;:::-;3937:76;;4057:41;4076:7;4085:12;4057:18;:41::i;:::-;4136:42;4148:7;4157:6;4165:12;4136:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:10;4207:17;;;3778:453;;;;;:::o;1227:479:13:-;1335:18;1418:49;1455:11;1418:8;:26;1435:7;1427:16;;;;;;;;1418:26;;;;;;;;;;;:32;1445:4;1418:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1405:62;;1549:10;1514:8;:26;1531:7;1523:16;;;;;;;;1514:26;;;;;;;;;;;:32;1541:4;1514:32;;;;;;;;;;;;;;;:45;;;;1597:56;1614:7;1623:4;1629:11;1642:10;1597:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:10;1682:17;;1227:479;;;;;:::o;2443:228:25:-;2549:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:24;2599:7;2583:15;:24::i;:::-;2576:45;;;2622:4;2628:2;2632:5;2576:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2576:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2576:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2576:62:25;;;;;;;;;;;;;;;;2568:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:228;;;;;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1015:217:9:-;525:42;1124:30;;;1155:4;1169;1176:5;1124:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:58:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1124:58:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1124:58:9;;;;;;;;;;;;;;;;;1213:12;1219:5;1213;:12::i;:::-;1015:217;;:::o;1248:150:10:-;564:42;1323:31;;;1355:4;1361:5;1323:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1323:44:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1323:44:10;;;;;;;;;;;;;;;;1315:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:150;;:::o;2817:247:25:-;2889:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:10;2912:21;;;;;;;;:7;:21;;;;;;;;;2908:150;;;2949:20;2963:5;2949:13;:20::i;:::-;2908:150;;;3001:10;2990:21;;;;;;;;:7;:21;;;;;;;;;2986:72;;;3027:20;3041:5;3027:13;:20::i;:::-;2986:72;2908:150;2817:247;;;:::o;1445:653:9:-;525:42;1541:25;;;659:42;1581:5;1541:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:46:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:46:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:46:9;;;;;;;;;;;;;;;;;1626:19;1648:5;1626:27;;1664:25;1691:22;1717:34;1739:11;1717:21;:34::i;:::-;1663:88;;;;1761:16;1780:3;1761:22;;1793:21;659:42;1817:60;;;1891:11;1916:17;1947:14;1975:8;1997:25;:23;:25::i;:::-;1817:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1817:215:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1817:215:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1817:215:9;;;;;;;;;;;;;;;;1793:239;;2063:28;2077:13;2063;:28::i;:::-;1445:653;;;;;;:::o;890:111:10:-;564:42;947:20;;;968:5;947:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:27:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;947:27:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:27:10;;;;;;;;;;;;;;;;939:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:111;:::o;2414:363:9:-;2487:17;2506;659:42;2547:62;;;2610:9;2547:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2547:73:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2547:73:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2547:73:9;;;;;;;;;;;;;;;;2535:85;;2667:28;:26;:28::i;:::-;2642:78;;;2721:9;2642:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2642:89:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2642:89:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2642:89:9;;;;;;;;;;;;;;;;2630:101;;2749:9;2760;2741:29;;;;2414:363;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/CountdownGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time before the end of the countdown.\n///             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n///             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // execute griefing\n        return Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the staker to begin countdown to finalize the agreement\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before Countdown.isActive()\n    /// @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require countdown is not started\n        require(isInitialized(), \"deadline already set\");\n\n        // start countdown\n        return Countdown._start();\n    }\n\n    /// @notice Called by anyone to return the remaining stake once the agreement has ended\n    /// @dev Access Control: anyone\n    ///      State Machine: after Countdown.isOver()\n    /// @return amount uint256 amount of tokens (18 decimals) returned\n    function returnStake() public returns (uint256 amount) {\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // retrieve stake\n        return Staking._takeFullStake(Griefing.getTokenID(staker), staker, staker);\n    }\n\n    /// @notice Called by the staker to retrieve the remaining stake once the agreement has ended\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: after Countdown.isOver()\n    /// @param recipient address of the account where to send the stake\n    /// @return amount uint256 amount of tokens (18 decimals) retrieved\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // retrieve stake\n        return Staking._takeFullStake(Griefing.getTokenID(staker), staker, recipient);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    /// @notice Validate if the current stake is greater than 0\n    /// @return validity bool true if non-zero stake\n    function isStaked() public view returns (bool validity) {\n        uint256 currentStake = getStake();\n        return currentStake > 0;\n    }\n\n    enum AgreementStatus { isInitialized, isInCountdown, isTerminated }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isInCountdown: staker has triggered countdown to termination\n    ///          - isTerminated: griefing agreement is over, staker can retrieve stake\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        if (Countdown.isOver()) {\n            return AgreementStatus.isTerminated;\n        } else if (Countdown.isActive()) {\n            return AgreementStatus.isInCountdown;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n    /// @return validity bool true if correct state\n    function isInCountdown() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInCountdown;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isTerminated state\n    /// @return validity bool true if correct state\n    function isTerminated() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isTerminated;\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  }
}
