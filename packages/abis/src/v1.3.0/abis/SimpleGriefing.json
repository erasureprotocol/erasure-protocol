{
  "contractName": "SimpleGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        { "internalType": "address", "name": "creator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "exchangeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        { "internalType": "address", "name": "factory", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        { "internalType": "uint256", "name": "cost", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "name": "getRatio",
      "outputs": [
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        { "internalType": "address", "name": "tokenAddress", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" },
        { "internalType": "address", "name": "staker", "type": "address" },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "uint256", "name": "ratio", "type": "uint256" },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "bytes", "name": "metadata", "type": "bytes" }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "amountToAdd", "type": "uint256" }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "uint256", "name": "punishment", "type": "uint256" },
        { "internalType": "bytes", "name": "message", "type": "bytes" }
      ],
      "name": "punish",
      "outputs": [
        { "internalType": "uint256", "name": "cost", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        { "internalType": "address", "name": "staker", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        { "internalType": "address", "name": "counterparty", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        { "internalType": "address", "name": "token", "type": "address" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        { "internalType": "uint256", "name": "stake", "type": "uint256" }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum SimpleGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061387b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806372b45a55116100b8578063c529ebfd1161007c578063c529ebfd14610602578063e7f43c6814610673578063ed251a42146106bd578063ee57e36f146107fc578063eedad66b146108b7578063fc0e3d90146108e557610137565b806372b45a55146103fa578063754b27071461044457806388cc58e4146104b157806390bfe0bf146104fb578063a9fb763c146105d457610137565b806345f54485116100ff57806345f544851461025f578063465b414e1461028d5780635ad3f918146102e65780635baeb80614610357578063728fa494146103b057610137565b80630ee2cb101461013c5780631723537d1461018657806321df0da7146101b257806329605e77146102115780632ab6f8db14610255575b600080fd5b610144610903565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e6109e4565b6040518082600181111561019e57fe5b60ff16815260200191505060405180910390f35b6101ba610a0d565b604051808360028111156101ca57fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6102536004803603602081101561022757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a52565b005b61025d610ad9565b005b61028b6004803603602081101561027557600080fd5b8101908080359060200190929190505050610b5e565b005b6102d0600480360360608110156102a357600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610c2c565b6040518082815260200191505060405180910390f35b610315600480360360208110156102fc57600080fd5b81019080803560ff169060200190929190505050610d17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039a6004803603606081101561036d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610d7e565b6040518082815260200191505060405180910390f35b6103b8610eb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610402610ede565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104866004803603602081101561045a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f0b565b6040518083815260200182600281111561049c57fe5b60ff1681526020019250505060405180910390f35b6104b9610faa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105be6004803603604081101561051157600080fd5b81019080803590602001909291908035906020019064010000000081111561053857600080fd5b82018360208201111561054a57600080fd5b8035906020019184600183028401116401000000008311171561056c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fd4565b6040518082815260200191505060405180910390f35b610600600480360360208110156105ea57600080fd5b810190808035906020019092919050505061109a565b005b6106316004803603602081101561061857600080fd5b81019080803560ff169060200190929190505050611168565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61067b6111cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107fa600480360360e08110156106d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561077457600080fd5b82018360208201111561078657600080fd5b803590602001918460018302840111640100000000831117156107a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f9565b005b6108b56004803603602081101561081257600080fd5b810190808035906020019064010000000081111561082f57600080fd5b82018360208201111561084157600080fd5b8035906020019184600183028401116401000000008311171561086357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114fa565b005b6108e3600480360360208110156108cd57600080fd5b8101908080359060200190929190505050611581565b005b6108ed61164f565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d60208110156109ce57600080fd5b8101908080519060200190929190505050905090565b6000806109ef61164f565b90506000811115610a04576001915050610a0a565b60009150505b90565b600080610a3e600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166116b2565b915081610a4a83610d17565b915091509091565b610a5b3361170b565b610acd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610ad681611765565b50565b610ae23361170b565b610b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610b5c611974565b565b610b6733611ae1565b80610b775750610b763361170b565b5b610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610c27610c1f826116b2565b828385611b20565b505050565b6000600280811115610c3a57fe5b826002811115610c4657fe5b1415610c77576012600a0a610c68610c62856012600a0a611b45565b86611bcb565b81610c6f57fe5b049050610d10565b60016002811115610c8457fe5b826002811115610c9057fe5b1415610c9f5760009050610d10565b60006002811115610cac57fe5b826002811115610cb857fe5b1415610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137fa6021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610d2557fe5b826002811115610d3157fe5b1415610d4657610d3f611c03565b9050610d79565b60016002811115610d5357fe5b826002811115610d5f57fe5b1415610d7457610d6d611c1f565b9050610d79565b600090505b919050565b6000600280811115610d8c57fe5b826002811115610d9857fe5b1415610dc9576012600a0a610dba610db4856012600a0a611b45565b86611c3b565b81610dc157fe5b049050610eaa565b60016002811115610dd657fe5b826002811115610de257fe5b1415610e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061378e6021913960400191505060405180910390fd5b60006002811115610e4657fe5b826002811115610e5257fe5b1415610ea9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137fa6021913960400191505060405180910390fd5b5b9392505050565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610fdf33611ae1565b80610fef5750610fee3361170b565b5b611061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61109233600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585611c6f565b905092915050565b6110a333611ae1565b806110b357506110b23361170b565b5b611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061116361115b826116b2565b823385611f32565b505050565b600060028081111561117657fe5b82600281111561118257fe5b141561119757611190611f58565b90506111ca565b600160028111156111a457fe5b8260028111156111b057fe5b14156111c5576111be611f74565b90506111ca565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff161461129f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806137d0602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146113655761136488611f90565b5b6113718786868661219e565b6000825114611384576113838261245d565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561145257fe5b60ff16815260200184815260200183600281111561146c57fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114b0578082015181840152602081019050611495565b50505050905090810190601f1680156114dd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6115033361170b565b611575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61157e8161245d565b50565b61158a336124fc565b8061159a57506115993361170b565b5b61160c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061164a611642826116b2565b823385611f32565b505050565b60006116ad611682600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166116b2565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661253b565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561182a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611a39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611aeb610eb1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000611b2d8585846125a0565b9050611b3a85848461277e565b809050949350505050565b600080831415611b585760009050611bc5565b6000828402905082848281611b6957fe5b0414611bc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137af6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611bf3611bdf8585611b45565b60026012600a0a81611bed57fe5b0461293c565b81611bfa57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081611c5f611c4f856012600a0a611b45565b60028581611c5957fe5b0461293c565b81611c6657fe5b04905092915050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115611d6c57fe5b826002811115611d7857fe5b1415611dec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b611df7838784610c2c565b9350611e048189866129c4565b611e0f818888612a9e565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ee6578082015181840152602081019050611ecb565b50505050905090810190601f168015611f135780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000611f3f858584612b44565b9050611f4d85843085612ca7565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612054576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060028111156121ab57fe5b8160028111156121b757fe5b14806121d95750600160028111156121cb57fe5b8160028111156121d757fe5b145b156122385760008214612237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061381b602c913960400191505060405180910390fd5b5b61224183612e9a565b6122b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561231157fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156123bb57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561242757fe5b60ff16815260200183815260200182600281111561244157fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156124bf5780820151818401526020810190506124a4565b50505050905090810190601f1680156124ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000612506610ede565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600084600281111561254c57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000808660028111156125b257fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6126898382612edd90919063ffffffff16565b91508160008087600281111561269b57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f357858585856040518085600281111561271f57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261278881612e9a565b6127fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61280384610d17565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561288957600080fd5b505af115801561289d573d6000803e3d6000fd5b505050506040513d60208110156128b357600080fd5b8101908080519060200190929190505050612936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b6000808284019050838110156129ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b826129ce81612e9a565b612a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115612a4c57fe5b846002811115612a5857fe5b1415612a6d57612a688383612f27565b612a98565b60016002811115612a7a57fe5b846002811115612a8657fe5b1415612a9757612a96838361303f565b5b5b50505050565b600080612aac8585856125a0565b9050612ab8858461318b565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b85858560405180846002811115612aec57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612bb382600080876002811115612b5957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461293c90919063ffffffff16565b905080600080866002811115612bc557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c8484848460405180856002811115612c4957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b83612cb181612e9a565b612d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612d2c85610d17565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612de657600080fd5b505af1158015612dfa573d6000803e3d6000fd5b505050506040513d6020811015612e1057600080fd5b8101908080519060200190929190505050612e93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600060016002811115612ea957fe5b826002811115612eb557fe5b1480612ed65750600280811115612ec857fe5b826002811115612ed457fe5b145b9050919050565b6000612f1f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613262565b905092915050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612ff657600080fd5b505af115801561300a573d6000803e3d6000fd5b505050506040513d602081101561302057600080fd5b81019080805190602001909291905050505061303b81613322565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156130da57600080fd5b505af11580156130ee573d6000803e3d6000fd5b505050506040513d602081101561310457600080fd5b8101908080519060200190929190505050613187576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161319581612e9a565b613207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561321357fe5b83600281111561321f57fe5b14156132335761322e82613322565b61325d565b6001600281111561324057fe5b83600281111561324c57fe5b141561325c5761325b82613531565b5b5b505050565b600083831115829061330f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156132d45780820151818401526020810190506132b9565b50505050905090810190601f1680156133015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156133d157600080fd5b505af11580156133e5573d6000803e3d6000fd5b505050506040513d60208110156133fb57600080fd5b810190808051906020019092919050505050600081905060008061341e83613648565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613465611c1f565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156134e357600080fd5b505af11580156134f7573d6000803e3d6000fd5b505050506040513d602081101561350d57600080fd5b8101908080519060200190929190505050905061352981613531565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561359857600080fd5b505af11580156135ac573d6000803e3d6000fd5b505050506040513d60208110156135c257600080fd5b8101908080519060200190929190505050613645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156136b057600080fd5b505afa1580156136c4573d6000803e3d6000fd5b505050506040513d60208110156136da57600080fd5b810190808051906020019092919050505090506136f5611f74565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561374557600080fd5b505afa158015613759573d6000803e3d6000fd5b505050506040513d602081101561376f57600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820e8de74a927a14eeff9f0a079ca69fe84812f6feaee7f52e4d6ba460a25df5e7964736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806372b45a55116100b8578063c529ebfd1161007c578063c529ebfd14610602578063e7f43c6814610673578063ed251a42146106bd578063ee57e36f146107fc578063eedad66b146108b7578063fc0e3d90146108e557610137565b806372b45a55146103fa578063754b27071461044457806388cc58e4146104b157806390bfe0bf146104fb578063a9fb763c146105d457610137565b806345f54485116100ff57806345f544851461025f578063465b414e1461028d5780635ad3f918146102e65780635baeb80614610357578063728fa494146103b057610137565b80630ee2cb101461013c5780631723537d1461018657806321df0da7146101b257806329605e77146102115780632ab6f8db14610255575b600080fd5b610144610903565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e6109e4565b6040518082600181111561019e57fe5b60ff16815260200191505060405180910390f35b6101ba610a0d565b604051808360028111156101ca57fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6102536004803603602081101561022757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a52565b005b61025d610ad9565b005b61028b6004803603602081101561027557600080fd5b8101908080359060200190929190505050610b5e565b005b6102d0600480360360608110156102a357600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610c2c565b6040518082815260200191505060405180910390f35b610315600480360360208110156102fc57600080fd5b81019080803560ff169060200190929190505050610d17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039a6004803603606081101561036d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610d7e565b6040518082815260200191505060405180910390f35b6103b8610eb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610402610ede565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104866004803603602081101561045a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f0b565b6040518083815260200182600281111561049c57fe5b60ff1681526020019250505060405180910390f35b6104b9610faa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105be6004803603604081101561051157600080fd5b81019080803590602001909291908035906020019064010000000081111561053857600080fd5b82018360208201111561054a57600080fd5b8035906020019184600183028401116401000000008311171561056c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fd4565b6040518082815260200191505060405180910390f35b610600600480360360208110156105ea57600080fd5b810190808035906020019092919050505061109a565b005b6106316004803603602081101561061857600080fd5b81019080803560ff169060200190929190505050611168565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61067b6111cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107fa600480360360e08110156106d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff1690602001909291908035906020019064010000000081111561077457600080fd5b82018360208201111561078657600080fd5b803590602001918460018302840111640100000000831117156107a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111f9565b005b6108b56004803603602081101561081257600080fd5b810190808035906020019064010000000081111561082f57600080fd5b82018360208201111561084157600080fd5b8035906020019184600183028401116401000000008311171561086357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114fa565b005b6108e3600480360360208110156108cd57600080fd5b8101908080359060200190929190505050611581565b005b6108ed61164f565b6040518082815260200191505060405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109a457600080fd5b505afa1580156109b8573d6000803e3d6000fd5b505050506040513d60208110156109ce57600080fd5b8101908080519060200190929190505050905090565b6000806109ef61164f565b90506000811115610a04576001915050610a0a565b60009150505b90565b600080610a3e600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166116b2565b915081610a4a83610d17565b915091509091565b610a5b3361170b565b610acd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610ad681611765565b50565b610ae23361170b565b610b54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610b5c611974565b565b610b6733611ae1565b80610b775750610b763361170b565b5b610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610c27610c1f826116b2565b828385611b20565b505050565b6000600280811115610c3a57fe5b826002811115610c4657fe5b1415610c77576012600a0a610c68610c62856012600a0a611b45565b86611bcb565b81610c6f57fe5b049050610d10565b60016002811115610c8457fe5b826002811115610c9057fe5b1415610c9f5760009050610d10565b60006002811115610cac57fe5b826002811115610cb857fe5b1415610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137fa6021913960400191505060405180910390fd5b5b9392505050565b6000600280811115610d2557fe5b826002811115610d3157fe5b1415610d4657610d3f611c03565b9050610d79565b60016002811115610d5357fe5b826002811115610d5f57fe5b1415610d7457610d6d611c1f565b9050610d79565b600090505b919050565b6000600280811115610d8c57fe5b826002811115610d9857fe5b1415610dc9576012600a0a610dba610db4856012600a0a611b45565b86611c3b565b81610dc157fe5b049050610eaa565b60016002811115610dd657fe5b826002811115610de257fe5b1415610e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061378e6021913960400191505060405180910390fd5b60006002811115610e4657fe5b826002811115610e5257fe5b1415610ea9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137fa6021913960400191505060405180910390fd5b5b9392505050565b6000600460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610fdf33611ae1565b80610fef5750610fee3361170b565b5b611061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61109233600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585611c6f565b905092915050565b6110a333611ae1565b806110b357506110b23361170b565b5b611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061116361115b826116b2565b823385611f32565b505050565b600060028081111561117657fe5b82600281111561118257fe5b141561119757611190611f58565b90506111ca565b600160028111156111a457fe5b8260028111156111b057fe5b14156111c5576111be611f74565b90506111ca565b600090505b919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff161461129f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806137d0602a913960400191505060405180910390fd5b86600460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600460010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146113655761136488611f90565b5b6113718786868661219e565b6000825114611384576113838261245d565b5b7f18debbd89bc6f0c372f96922b415c36062ad62c1af35e03281407b2d5083e93888888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600281111561145257fe5b60ff16815260200184815260200183600281111561146c57fe5b60ff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114b0578082015181840152602081019050611495565b50505050905090810190601f1680156114dd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6115033361170b565b611575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61157e8161245d565b50565b61158a336124fc565b8061159a57506115993361170b565b5b61160c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6000600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061164a611642826116b2565b823385611f32565b505050565b60006116ad611682600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166116b2565b600460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661253b565b905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561182a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611a39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611aeb610eb1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000611b2d8585846125a0565b9050611b3a85848461277e565b809050949350505050565b600080831415611b585760009050611bc5565b6000828402905082848281611b6957fe5b0414611bc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806137af6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a611bf3611bdf8585611b45565b60026012600a0a81611bed57fe5b0461293c565b81611bfa57fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b600081611c5f611c4f856012600a0a611b45565b60028581611c5957fe5b0461293c565b81611c6657fe5b04905092915050565b600080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115611d6c57fe5b826002811115611d7857fe5b1415611dec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b611df7838784610c2c565b9350611e048189866129c4565b611e0f818888612a9e565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ee6578082015181840152602081019050611ecb565b50505050905090810190601f168015611f135780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000611f3f858584612b44565b9050611f4d85843085612ca7565b809050949350505050565b6000732a1530c4c41db0b0b2bb646cb5eb1a67b7158667905090565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f905090565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612054576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060028111156121ab57fe5b8160028111156121b757fe5b14806121d95750600160028111156121cb57fe5b8160028111156121d757fe5b145b156122385760008214612237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061381b602c913960400191505060405180910390fd5b5b61224183612e9a565b6122b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561231157fe5b021790555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156123bb57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561242757fe5b60ff16815260200183815260200182600281111561244157fe5b60ff16815260200194505050505060405180910390a150505050565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156124bf5780820151818401526020810190506124a4565b50505050905090810190601f1680156124ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000612506610ede565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600084600281111561254c57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000808660028111156125b257fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6126898382612edd90919063ffffffff16565b91508160008087600281111561269b57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f357858585856040518085600281111561271f57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b8261278881612e9a565b6127fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61280384610d17565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561288957600080fd5b505af115801561289d573d6000803e3d6000fd5b505050506040513d60208110156128b357600080fd5b8101908080519060200190929190505050612936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b6000808284019050838110156129ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b826129ce81612e9a565b612a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115612a4c57fe5b846002811115612a5857fe5b1415612a6d57612a688383612f27565b612a98565b60016002811115612a7a57fe5b846002811115612a8657fe5b1415612a9757612a96838361303f565b5b5b50505050565b600080612aac8585856125a0565b9050612ab8858461318b565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b85858560405180846002811115612aec57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000612bb382600080876002811115612b5957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461293c90919063ffffffff16565b905080600080866002811115612bc557fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c8484848460405180856002811115612c4957fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b83612cb181612e9a565b612d23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612d2c85610d17565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612de657600080fd5b505af1158015612dfa573d6000803e3d6000fd5b505050506040513d6020811015612e1057600080fd5b8101908080519060200190929190505050612e93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600060016002811115612ea957fe5b826002811115612eb557fe5b1480612ed65750600280811115612ec857fe5b826002811115612ed457fe5b145b9050919050565b6000612f1f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613262565b905092915050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612ff657600080fd5b505af115801561300a573d6000803e3d6000fd5b505050506040513d602081101561302057600080fd5b81019080805190602001909291905050505061303b81613322565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156130da57600080fd5b505af11580156130ee573d6000803e3d6000fd5b505050506040513d602081101561310457600080fd5b8101908080519060200190929190505050613187576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161319581612e9a565b613207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561321357fe5b83600281111561321f57fe5b14156132335761322e82613322565b61325d565b6001600281111561324057fe5b83600281111561324c57fe5b141561325c5761325b82613531565b5b5b505050565b600083831115829061330f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156132d45780820151818401526020810190506132b9565b50505050905090810190601f1680156133015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156133d157600080fd5b505af11580156133e5573d6000803e3d6000fd5b505050506040513d60208110156133fb57600080fd5b810190808051906020019092919050505050600081905060008061341e83613648565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613465611c1f565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b1580156134e357600080fd5b505af11580156134f7573d6000803e3d6000fd5b505050506040513d602081101561350d57600080fd5b8101908080519060200190929190505050905061352981613531565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561359857600080fd5b505af11580156135ac573d6000803e3d6000fd5b505050506040513d60208110156135c257600080fd5b8101908080519060200190929190505050613645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156136b057600080fd5b505afa1580156136c4573d6000803e3d6000fd5b505050506040513d60208110156136da57600080fd5b810190808051906020019092919050505090506136f5611f74565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561374557600080fd5b505afa158015613759573d6000803e3d6000fd5b505050506040513d602081101561376f57600080fd5b8101908080519060200190929190505050915081819150915091509156fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a72315820e8de74a927a14eeff9f0a079ca69fe84812f6feaee7f52e4d6ba460a25df5e7964736f6c63430005100032",
  "sourceMap": "1480:10055:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:10055:2;;;;;;;",
  "deployedSourceMap": "1480:10055:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:10055:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10689:279:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9910:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8080:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8080:228:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;8447:204;;;:::i;:::-;;7459:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7459:414:2;;;;;;;;;;;;;;;;;:::i;:::-;;5448:393:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5448:393:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;554:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;554:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6477:428:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6477:428:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9296:112:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8780:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4337:212:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:212:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6842:343:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6842:343:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6842:343:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6842:343:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6842:343:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6842:343:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5650:380;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5650:380:2;;;;;;;;;;;;;;;;;:::i;:::-;;1047:292:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1047:292:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1454:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3257:840:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3257:840:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3257:840:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3257:840:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3257:840:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3257:840:2;;;;;;;;;;;;;;;:::i;:::-;;4301:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4301:226:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4301:226:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4301:226:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4301:226:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4301:226:2;;;;;;;;;;;;;;;:::i;:::-;;4895:375;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4895:375:2;;;;;;;;;;;;;;;;;:::i;:::-;;10250:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1134:229:24;1177:15;1313:8;;;;;;;;;;;1304:37;;;1350:4;1304:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1304:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1304:52:24;;;;;;;;;;;;;;;;1297:59;;1134:229;:::o;10689:279:2:-;10740:22;10774:20;10797:10;:8;:10::i;:::-;10774:33;;10836:1;10821:12;:16;10817:145;;;10860:24;10853:31;;;;;10817:145;10922:29;10915:36;;;10689:279;;:::o;9910:210::-;9951:27;9980:13;10015:33;10035:5;:12;;;;;;;;;;;;10015:19;:33::i;:::-;10005:43;;10066:7;10075:37;10104:7;10075:28;:37::i;:::-;10058:55;;;;9910:210;;:::o;8080:228::-;8176:31;8196:10;8176:19;:31::i;:::-;8168:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8265:36;8292:8;8265:26;:36::i;:::-;8080:228;:::o;8447:204::-;8527:31;8547:10;8527:19;:31::i;:::-;8519:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8616:28;:26;:28::i;:::-;8447:204::o;7459:414::-;7558:26;7573:10;7558:14;:26::i;:::-;:61;;;;7588:31;7608:10;7588:19;:31::i;:::-;7558:61;7550:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7702:14;7719:5;:12;;;;;;;;;;;;7702:29;;7786:80;7805:27;7825:6;7805:19;:27::i;:::-;7834:6;7842;7850:15;7786:18;:80::i;:::-;;7459:414;;:::o;5448:393:16:-;5541:12;5582:13;5569:26;;;;;;;;:9;:26;;;;;;;;;5565:110;;;955:2;940;932:26;5616:53;5632:29;5645:10;955:2;940;932:26;5632:12;:29::i;:::-;5663:5;5616:15;:53::i;:::-;:59;;;;;;5609:66;;;;5565:110;5702:13;5689:26;;;;;;;;:9;:26;;;;;;;;;5685:52;;;5736:1;5729:8;;;;5685:52;5764:13;5751:26;;;;;;;;:9;:26;;;;;;;;;5747:87;;;5791:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5747:87;5448:393;;;;;;:::o;554:280:25:-;616:20;663:10;652:21;;;;;;;;:7;:21;;;;;;;;;648:71;;;694:25;:23;:25::i;:::-;687:32;;;;648:71;744:10;733:21;;;;;;;;:7;:21;;;;;;;;;729:71;;;775:25;:23;:25::i;:::-;768:32;;;;729:71;825:1;810:17;;554:280;;;;:::o;6477:428:16:-;6570:18;6617:13;6604:26;;;;;;;;:9;:26;;;;;;;;;6600:104;;;955:2;940;932:26;6651:47;6667:23;6680:4;955:2;940;932:26;6667:12;:23::i;:::-;6692:5;6651:15;:47::i;:::-;:53;;;;;;6644:60;;;;6600:104;6731:13;6718:26;;;;;;;;:9;:26;;;;;;;;;6714:87;;;6758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6714:87;6828:13;6815:26;;;;;;;;:9;:26;;;;;;;;;6811:87;;;6855:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6811:87;6477:428;;;;;;:::o;9296:112:2:-;9344:20;9383:5;:18;;;;;;;;;;;;9376:25;;9296:112;:::o;8780:94::-;8822:14;8855:5;:12;;;;;;;;;;;;8848:19;;8780:94;:::o;4337:212:16:-;4392:13;4407:19;4485:11;:19;4497:6;4485:19;;;;;;;;;;;;;;;:25;;;4512:11;:19;4524:6;4512:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4477:65;;;;4337:212;;;:::o;1770:92:24:-;1813:15;1847:8;;;;;;;;;;;1840:15;;1770:92;:::o;6842:343:2:-;6916:12;6975:26;6990:10;6975:14;:26::i;:::-;:61;;;;7005:31;7025:10;7005:19;:31::i;:::-;6975:61;6967:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7116:62;7132:10;7144:5;:12;;;;;;;;;;;;7158:10;7170:7;7116:15;:62::i;:::-;7109:69;;6842:343;;;;:::o;5650:380::-;5739:26;5754:10;5739:14;:26::i;:::-;:61;;;;5769:31;5789:10;5769:19;:31::i;:::-;5739:61;5731:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5883:14;5900:5;:12;;;;;;;;;;;;5883:29;;5944:79;5962:27;5982:6;5962:19;:27::i;:::-;5991:6;5999:10;6011:11;5944:17;:79::i;:::-;;5650:380;;:::o;1047:292:25:-;1112:23;1162:10;1151:21;;;;;;;;:7;:21;;;;;;;;;1147:74;;;1193:28;:26;:28::i;:::-;1186:35;;;;1147:74;1246:10;1235:21;;;;;;;;:7;:21;;;;;;;;;1231:74;;;1277:28;:26;:28::i;:::-;1270:35;;;;1231:74;1330:1;1315:17;;1047:292;;;;:::o;1454:95:18:-;1498:16;1533:9;;;;;;;;;;;1526:16;;1454:95;:::o;3257:840:2:-;600:10:24;589:8;;:21;;;;;;;;;;;;;;;;;;702:15;762:7;750:20;738:32;;801:1;789:8;:13;;;781:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3575:6:2;3560:5;:12;;;:21;;;;;;;;;;;;;;;;;;3612:12;3591:5;:18;;;:33;;;;;;;;;;;;;;;;;;3683:1;3663:22;;:8;:22;;;3659:84;;3701:31;3723:8;3701:21;:31::i;:::-;3659:84;3783:53;3802:6;3810:7;3819:5;3826:9;3783:18;:53::i;:::-;3894:1;3875:8;:15;:20;3871:87;;3911:36;3938:8;3911:26;:36::i;:::-;3871:87;4010:80;4022:8;4032:6;4040:12;4054:7;4063:5;4070:9;4081:8;4010:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4010:80:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3257:840;;;;;;;;:::o;4301:226::-;4397:31;4417:10;4397:19;:31::i;:::-;4389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4484:36;4511:8;4484:26;:36::i;:::-;4301:226;:::o;4895:375::-;4991:20;5000:10;4991:8;:20::i;:::-;:55;;;;5015:31;5035:10;5015:19;:31::i;:::-;4991:55;4983:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5123:14;5140:5;:12;;;;;;;;;;;;5123:29;;5184:79;5202:27;5222:6;5202:19;:27::i;:::-;5231:6;5239:10;5251:11;5184:17;:79::i;:::-;;4895:375;;:::o;10250:147::-;10291:13;10323:67;10342:33;10362:5;:12;;;;;;;;;;;;10342:19;:33::i;:::-;10377:5;:12;;;;;;;;;;;;10323:18;:67::i;:::-;10316:74;;10250:147;:::o;4715:180:16:-;4774:27;4860:11;:19;4872:6;4860:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4852:36;;4715:180;;;:::o;1555:111:18:-;1614:7;1650:9;;;;;;;;;;;1640:19;;:6;:19;;;1633:26;;1555:111;;;:::o;724:410::-;856:1;835:23;;:9;;;;;;;;;;;:23;;;;827:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:1;939:22;;:8;:22;;;;931:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1056:8;1044:9;;:20;;;;;;;;;;;;;;;;;;1102:25;1118:8;1102:25;;;;;;;;;;;;;;;;;;;;;;724:410;:::o;1140:285::-;1256:1;1235:23;;:9;;;;;;;;;;;:23;;;;1227:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:1;1331:9;;:22;;;;;;;;;;;;;;;;;;1391:27;1415:1;1391:27;;;;;;;;;;;;;;;;;;;;;;1140:285::o;9591:129:2:-;9654:13;9696:17;:15;:17::i;:::-;9686:27;;:6;:27;;;9679:34;;9591:129;;;:::o;2152:408:23:-;2276:16;2341:55;2366:7;2375:6;2383:12;2341:24;:55::i;:::-;2330:66;;2444:56;2467:7;2476:9;2487:12;2444:22;:56::i;:::-;2545:8;2538:15;;2152:408;;;;;;:::o;2159:459:52:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;519:140:6:-;576:9;312:2;297;289:26;601:43;614:18;627:1;630;614:12;:18::i;:::-;642:1;312:2;297;289:26;634:9;;;;;;601:12;:43::i;:::-;:51;;;;;;597:55;;519:140;;;;:::o;2879:99:9:-;2929:13;525:42;2954:17;;2879:99;:::o;1500::10:-;1550:13;564:42;1575:17;;1500:99;:::o;853:136:6:-;910:9;981:1;935:43;948:22;961:1;312:2;297;289:26;948:12;:22::i;:::-;976:1;972;:5;;;;;;935:12;:43::i;:::-;:47;;;;;;931:51;;853:136;;;;:::o;2917:969:16:-;3065:12;3128:13;3144:11;:19;3156:6;3144:19;;;;;;;;;;;;;;;:25;;;3128:41;;3179:19;3201:11;:19;3213:6;3201:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3179:51;;3240:27;3270:11;:19;3282:6;3270:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3240:57;;3329:13;3316:26;;;;;;;;:9;:26;;;;;;;;;;3308:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:37;3496:5;3503:10;3515:9;3488:7;:37::i;:::-;3481:44;;3589:47;3612:7;3621:8;3631:4;3589:22;:47::i;:::-;3702;3721:7;3730:6;3738:10;3702:18;:47::i;:::-;;3787:52;3795:8;3805:6;3813:10;3825:4;3831:7;3787:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3787:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:4;3868:11;;;;;2917:969;;;;;;:::o;1209:417:23:-;1328:16;1393:54;1418:7;1427:6;1435:11;1393:24;:54::i;:::-;1382:65;;1495:71;1522:7;1531:6;1547:4;1554:11;1495:26;:71::i;:::-;1611:8;1604:15;;1209:417;;;;;;:::o;3102:111:9:-;3155:16;659:42;3183:23;;3102:111;:::o;1723::10:-;1776:16;698:42;1804:23;;1723:111;:::o;301:417:18:-;442:1;421:23;;:9;;;;;;;;;;;:23;;;413:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:1;523:22;;:8;:22;;;;515:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:8;628:9;;:20;;;;;;;;;;;;;;;;;;686:25;702:8;686:25;;;;;;;;;;;;;;;;;;;;;;301:417;:::o;1711:640:16:-;1847:13;1834:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1877:13;1864:26;;;;;;;;:9;:26;;;;;;;;;1834:56;1830:154;;;1923:1;1914:5;:10;1906:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:154;2034:36;2062:7;2034:27;:36::i;:::-;2026:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:7;2100:11;:19;2112:6;2100:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2207:5;2179:11;:19;2191:6;2179:19;;;;;;;;;;;;;;;:25;;:33;;;;2254:9;2222:11;:19;2234:6;2222:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2301:43;2310:6;2318:7;2327:5;2334:9;2301:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:640;;;;:::o;417:97:14:-;486:21;498:8;486:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;486:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:97;:::o;9051:117:2:-;9108:13;9150:11;:9;:11::i;:::-;9140:21;;:6;:21;;;9133:28;;9051:117;;;:::o;3707:159:13:-;3793:15;3827:8;:26;3844:7;3836:16;;;;;;;;3827:26;;;;;;;;;;;:32;3854:4;3827:32;;;;;;;;;;;;;;;;3820:39;;3707:159;;;;:::o;2070:694::-;2181:18;2242:22;2267:8;:26;2284:7;2276:16;;;;;;;;2267:26;;;;;;;;;;;:32;2294:4;2267:32;;;;;;;;;;;;;;;;2242:57;;2375:14;2357;:32;;2349:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:34;2507:14;2488;:18;;:34;;;;:::i;:::-;2475:47;;2604:10;2569:8;:26;2586:7;2578:16;;;;;;;;2569:26;;;;;;;;;;;:32;2596:4;2569:32;;;;;;;;;;;;;;;:45;;;;2652:59;2669:7;2678:4;2684:14;2700:10;2652:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:10;2740:17;;;2070:694;;;;;:::o;2002:200:25:-;2090:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:24;2140:7;2124:15;:24::i;:::-;2117:41;;;2159:2;2163:5;2117:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2117:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2117:52:25;;;;;;;;;;;;;;;;2109:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:200;;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3256:285:25:-;3346:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3380:10;3369:21;;;;;;;;:7;:21;;;;;;;;;3365:170;;;3406:30;3424:4;3430:5;3406:17;:30::i;:::-;3365:170;;;3468:10;3457:21;;;;;;;;:7;:21;;;;;;;;;3453:82;;;3494:30;3512:4;3518:5;3494:17;:30::i;:::-;3453:82;3365:170;3256:285;;;;:::o;3778:453:23:-;3883:16;3937:18;3958:55;3983:7;3992:6;4000:12;3958:24;:55::i;:::-;3937:76;;4057:41;4076:7;4085:12;4057:18;:41::i;:::-;4136:42;4148:7;4157:6;4165:12;4136:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:10;4207:17;;;3778:453;;;;;:::o;1227:479:13:-;1335:18;1418:49;1455:11;1418:8;:26;1435:7;1427:16;;;;;;;;1418:26;;;;;;;;;;;:32;1445:4;1418:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1405:62;;1549:10;1514:8;:26;1531:7;1523:16;;;;;;;;1514:26;;;;;;;;;;;:32;1541:4;1514:32;;;;;;;;;;;;;;;:45;;;;1597:56;1614:7;1623:4;1629:11;1642:10;1597:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:10;1682:17;;1227:479;;;;;:::o;2443:228:25:-;2549:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2583:24;2599:7;2583:15;:24::i;:::-;2576:45;;;2622:4;2628:2;2632:5;2576:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2576:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2576:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2576:62:25;;;;;;;;;;;;;;;;2568:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:228;;;;;:::o;1660:148::-;1723:13;1766:10;1755:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1791:10;1780:21;;;;;;;;:7;:21;;;;;;;;;1755:46;1748:53;;1660:148;;;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1015:217:9:-;525:42;1124:30;;;1155:4;1169;1176:5;1124:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1124:58:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1124:58:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1124:58:9;;;;;;;;;;;;;;;;;1213:12;1219:5;1213;:12::i;:::-;1015:217;;:::o;1248:150:10:-;564:42;1323:31;;;1355:4;1361:5;1323:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1323:44:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1323:44:10;;;;;;;;;;;;;;;;1315:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:150;;:::o;2817:247:25:-;2889:7;1405:23;1420:7;1405:14;:23::i;:::-;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:10;2912:21;;;;;;;;:7;:21;;;;;;;;;2908:150;;;2949:20;2963:5;2949:13;:20::i;:::-;2908:150;;;3001:10;2990:21;;;;;;;;:7;:21;;;;;;;;;2986:72;;;3027:20;3041:5;3027:13;:20::i;:::-;2986:72;2908:150;2817:247;;;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1445:653:9:-;525:42;1541:25;;;659:42;1581:5;1541:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:46:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1541:46:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1541:46:9;;;;;;;;;;;;;;;;;1626:19;1648:5;1626:27;;1664:25;1691:22;1717:34;1739:11;1717:21;:34::i;:::-;1663:88;;;;1761:16;1780:3;1761:22;;1793:21;659:42;1817:60;;;1891:11;1916:17;1947:14;1975:8;1997:25;:23;:25::i;:::-;1817:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1817:215:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1817:215:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1817:215:9;;;;;;;;;;;;;;;;1793:239;;2063:28;2077:13;2063;:28::i;:::-;1445:653;;;;;;:::o;890:111:10:-;564:42;947:20;;;968:5;947:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:27:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;947:27:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;947:27:10;;;;;;;;;;;;;;;;939:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:111;:::o;2414:363:9:-;2487:17;2506;659:42;2547:62;;;2610:9;2547:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2547:73:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2547:73:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2547:73:9;;;;;;;;;;;;;;;;2535:85;;2667:28;:26;:28::i;:::-;2642:78;;;2721:9;2642:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2642:89:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2642:89:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2642:89:9;;;;;;;;;;;;;;;;2630:101;;2749:9;2760;2741:29;;;;2414:363;;;:::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title SimpleGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/SimpleGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time.\n///             - The counterparty can increase, release, or punish the stake at any time.\n///             - The agreement can be terminated by the counterparty by releasing or punishing the full stake amount. Note it is always possible for the staker to increase their stake again.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract SimpleGriefing is Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // execute griefing\n        cost = Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    enum AgreementStatus { isInitialized, isStaked }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isStaked: stake is deposited\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        uint256 currentStake = getStake();\n        if (currentStake > 0) {\n            return AgreementStatus.isStaked;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isStaked state\n    /// @return validity bool true if correct state\n    function isStaked() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isStaked;\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang",
    "optimizer": false,
    "runs": 200
  }
}
