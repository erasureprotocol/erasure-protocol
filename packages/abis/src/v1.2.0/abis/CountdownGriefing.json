{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeTaken",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retrieveStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validity",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50613578806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806372b45a5511610104578063be1c766b116100a2578063e3323aba11610071578063e3323aba14610946578063e7f43c6814610968578063ee57e36f146109b2578063eedad66b14610a6d576101cf565b8063be1c766b14610886578063dac6270d146108a4578063de2229fe146108c2578063e1254fba146108ee576101cf565b806388cc58e4116100de57806388cc58e4146105f957806390bfe0bf14610643578063a9fb763c1461071c578063b6ef42841461074a576101cf565b806372b45a55146104ea578063754b2707146105345780637a766460146105a1576101cf565b806341ce2878116101715780635baeb8061161014b5780635baeb8061461040b5780635e5365c1146104645780635f8d96de14610482578063728fa494146104a0576101cf565b806341ce28781461032c57806345f5448514610384578063465b414e146103b2576101cf565b806321df0da7116101ad57806321df0da71461027657806329605e77146102c05780632ab6f8db146103045780632c7c780c1461030e576101cf565b80630ee2cb10146101d45780631723537d1461021e57806319fbb48e1461024a575b600080fd5b6101dc610a9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610226610b7c565b6040518082600281111561023657fe5b60ff16815260200191505060405180910390f35b610252610bb2565b6040518082600381111561026257fe5b60ff16815260200191505060405180910390f35b61027e610c2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610302600480360360208110156102d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c47565b005b61030c610cce565b005b610316610d53565b6040518082815260200191505060405180910390f35b61036e6004803603602081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d88565b6040518082815260200191505060405180910390f35b6103b06004803603602081101561039a57600080fd5b8101908080359060200190929190505050610ec5565b005b6103f5600480360360608110156103c857600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610fa9565b6040518082815260200191505060405180910390f35b61044e6004803603606081101561042157600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611094565b6040518082815260200191505060405180910390f35b61046c6111c7565b6040518082815260200191505060405180910390f35b61048a6112db565b6040518082815260200191505060405180910390f35b6104a86112e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f2611311565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105766004803603602081101561054a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061133e565b6040518083815260200182600281111561058c57fe5b60ff1681526020019250505060405180910390f35b6105e3600480360360208110156105b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113dd565b6040518082815260200191505060405180910390f35b6106016113ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107066004803603604081101561065957600080fd5b81019080803590602001909291908035906020019064010000000081111561068057600080fd5b82018360208201111561069257600080fd5b803590602001918460018302840111640100000000831117156106b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611419565b6040518082815260200191505060405180910390f35b6107486004803603602081101561073257600080fd5b810190808035906020019092919050505061155a565b005b610884600480360360e081101561076057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156107fe57600080fd5b82018360208201111561081057600080fd5b8035906020019184600183028401116401000000008311171561083257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611693565b005b61088e61198e565b6040518082815260200191505060405180910390f35b6108ac611998565b6040518082815260200191505060405180910390f35b6108ca6119c8565b604051808260028111156108da57fe5b60ff16815260200191505060405180910390f35b6109306004803603602081101561090457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f8565b6040518082815260200191505060405180910390f35b61094e611a41565b604051808215151515815260200191505060405180910390f35b610970611a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a6b600480360360208110156109c857600080fd5b81019080803590602001906401000000008111156109e557600080fd5b8201836020820111156109f757600080fd5b80359060200191846001830284011164010000000083111715610a1957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a7c565b005b610a9960048036036020811015610a8357600080fd5b8101908080359060200190929190505050611b03565b005b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d6020811015610b6657600080fd5b8101908080519060200190929190505050905090565b6000610b86611c3c565b15610b945760029050610baf565b610b9c611c63565b15610baa5760019050610baf565b600090505b90565b6000806001541415610bc75760009050610c28565b60006002811115610bd457fe5b610bdc6119c8565b6002811115610be757fe5b1415610bf65760019050610c28565b600280811115610c0257fe5b610c0a6119c8565b6002811115610c1557fe5b14610c235760029050610c28565b600390505b90565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b610c5033611c8b565b610cc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610ccb81611ce5565b50565b610cd733611c8b565b610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610d51611ef4565b565b6000610d83600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166113dd565b905090565b6000610d9333612061565b80610da35750610da233611c8b565b5b610e15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b610e1d6120a0565b610e8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b610ebe600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836120c7565b9050919050565b610ece336120eb565b80610ede5750610edd33611c8b565b5b610f50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b610fa5600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361212a565b5050565b6000600280811115610fb757fe5b826002811115610fc357fe5b1415610ff4576012600a0a610fe5610fdf856012600a0a61231e565b866123a4565b81610fec57fe5b04905061108d565b6001600281111561100157fe5b82600281111561100d57fe5b141561101c576000905061108d565b6000600281111561102957fe5b82600281111561103557fe5b141561108c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f76021913960400191505060405180910390fd5b5b9392505050565b60006002808111156110a257fe5b8260028111156110ae57fe5b14156110df576012600a0a6110d06110ca856012600a0a61231e565b866123dc565b816110d757fe5b0490506111c0565b600160028111156110ec57fe5b8260028111156110f857fe5b141561114f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061348b6021913960400191505060405180910390fd5b6000600281111561115c57fe5b82600281111561116857fe5b14156111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f76021913960400191505060405180910390fd5b5b9392505050565b60006111d233612061565b806111e257506111e133611c8b565b5b611254576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b61125c612410565b6112ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6112d6612437565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b60006113e8826119f8565b9050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611424336120eb565b80611434575061143333611c8b565b5b6114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6114ae6120a0565b15611521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61155233600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858561245f565b905092915050565b611563336120eb565b80611573575061157233611c8b565b5b6115e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6115ed6120a0565b15611660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b611690600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836126cb565b50565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806134cd602a913960400191505060405180910390fd5b86600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146117ff576117fe886128e9565b5b61180a878686612af7565b61181383612cc1565b60008251146118265761182582612d02565b5b7f664ded22802a39a33ce123e5d663871dacea1984cc7ec83e5b8b850118649f6488888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018460028111156118fa57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611944578082015181840152602081019050611929565b50505050905090810190601f1680156119715780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6000600154905090565b60004260005411156119c0576119b942600054612da190919063ffffffff16565b90506119c5565b600090505b90565b60008060005414156119dd57600090506119f5565b4260005411156119f057600190506119f5565b600290505b90565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080611a4c610d53565b11905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8533611c8b565b611af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611b0081612d02565b50565b611b0c33612061565b80611b1c5750611b1b33611c8b565b5b611b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611b966120a0565b15611c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b611c39600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836126cb565b50565b6000600380811115611c4a57fe5b611c52610bb2565b6003811115611c5d57fe5b14905090565b600060026003811115611c7257fe5b611c7a610bb2565b6003811115611c8557fe5b14905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611daa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611fb9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061206b611311565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006002808111156120ae57fe5b6120b6610b7c565b60028111156120c157fe5b14905090565b6000806120d3846119f8565b90506120e084848361212a565b508091505092915050565b60006120f56112e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000806121378584612e2a565b9050612141610c2b565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156121c757600080fd5b505af11580156121db573d6000803e3d6000fd5b505050506040513d60208110156121f157600080fd5b8101908080519060200190929190505050612274576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b7f925e052b9be9fe61c1aa15c79475f18b346732f0cf5fb7a0841a558238afce99858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600080831415612331576000905061239e565b600082840290508284828161234257fe5b0414612399576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134ac6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a6123cc6123b8858561231e565b60026012600a0a816123c657fe5b04612fbb565b816123d357fe5b04905092915050565b6000816124006123f0856012600a0a61231e565b600285816123fa57fe5b04612fbb565b8161240757fe5b04905092915050565b600080600281111561241e57fe5b612426610b7c565b600281111561243157fe5b14905090565b600061244e42600154612fbb90919063ffffffff16565b905061245981613043565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600281111561250857fe5b81600281111561251457fe5b1415612588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612593828683610fa9565b925061259f8784613084565b6125a986866131d0565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18787878688604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612680578082015181840152602081019050612665565b50505050905090810190601f1680156126ad5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a18292505050949350505050565b6126d5838261325d565b506126de610c2b565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561279857600080fd5b505af11580156127ac573d6000803e3d6000fd5b505050506040513d60208110156127c257600080fd5b8101908080519060200190929190505050612845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b7ffb8efd70c9f0ca009bfc9f2ca8a9256a5aefbc720bdb8d838e4bcd42c241b9eb838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115612b0457fe5b816002811115612b1057fe5b1480612b32575060016002811115612b2457fe5b816002811115612b3057fe5b145b15612b915760008214612b90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613518602c913960400191505060405180910390fd5b5b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115612c3657fe5b02179055507fc964ed8af672f908dc7ba57f61d45a87a7e179cecf5198e7b7d53c920d898f06838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826002811115612ca757fe5b60ff168152602001935050505060405180910390a1505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015612d64578082015181840152602081019050612d49565b50505050905090810190601f168015612d915780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600082821115612e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612ef88382612da190919063ffffffff16565b915081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f51c54d09e3f09480ef3014ab9c0738a405a9f38ebca6b7f60ff3acbd22ed2b44848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a18191505092915050565b600080828401905083811015613039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561311f57600080fd5b505af1158015613133573d6000803e3d6000fd5b505050506040513d602081101561314957600080fd5b81019080805190602001909291905050506131cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b6000806131dd8484612e2a565b90506131e883613373565b7f659f33fc6677bebf3a9bf3101092792e31f35766d0358e54577bdd91a655f6a08484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18091505092915050565b60006132b182600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fbb90919063ffffffff16565b905080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f05ee66c5c291705b2a39786f7a3c9abb763a9c66336056b9e154be4aa0f31813838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a180905092915050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156133da57600080fd5b505af11580156133ee573d6000803e3d6000fd5b505050506040513d602081101561340457600080fd5b8101908080519060200190929190505050613487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158204452337b17aecc4df5ca0ca484acb49d1c04e6ea9a7c592dbcb5a040b67c9efd64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806372b45a5511610104578063be1c766b116100a2578063e3323aba11610071578063e3323aba14610946578063e7f43c6814610968578063ee57e36f146109b2578063eedad66b14610a6d576101cf565b8063be1c766b14610886578063dac6270d146108a4578063de2229fe146108c2578063e1254fba146108ee576101cf565b806388cc58e4116100de57806388cc58e4146105f957806390bfe0bf14610643578063a9fb763c1461071c578063b6ef42841461074a576101cf565b806372b45a55146104ea578063754b2707146105345780637a766460146105a1576101cf565b806341ce2878116101715780635baeb8061161014b5780635baeb8061461040b5780635e5365c1146104645780635f8d96de14610482578063728fa494146104a0576101cf565b806341ce28781461032c57806345f5448514610384578063465b414e146103b2576101cf565b806321df0da7116101ad57806321df0da71461027657806329605e77146102c05780632ab6f8db146103045780632c7c780c1461030e576101cf565b80630ee2cb10146101d45780631723537d1461021e57806319fbb48e1461024a575b600080fd5b6101dc610a9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610226610b7c565b6040518082600281111561023657fe5b60ff16815260200191505060405180910390f35b610252610bb2565b6040518082600381111561026257fe5b60ff16815260200191505060405180910390f35b61027e610c2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610302600480360360208110156102d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c47565b005b61030c610cce565b005b610316610d53565b6040518082815260200191505060405180910390f35b61036e6004803603602081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d88565b6040518082815260200191505060405180910390f35b6103b06004803603602081101561039a57600080fd5b8101908080359060200190929190505050610ec5565b005b6103f5600480360360608110156103c857600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050610fa9565b6040518082815260200191505060405180910390f35b61044e6004803603606081101561042157600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611094565b6040518082815260200191505060405180910390f35b61046c6111c7565b6040518082815260200191505060405180910390f35b61048a6112db565b6040518082815260200191505060405180910390f35b6104a86112e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f2611311565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105766004803603602081101561054a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061133e565b6040518083815260200182600281111561058c57fe5b60ff1681526020019250505060405180910390f35b6105e3600480360360208110156105b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113dd565b6040518082815260200191505060405180910390f35b6106016113ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107066004803603604081101561065957600080fd5b81019080803590602001909291908035906020019064010000000081111561068057600080fd5b82018360208201111561069257600080fd5b803590602001918460018302840111640100000000831117156106b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611419565b6040518082815260200191505060405180910390f35b6107486004803603602081101561073257600080fd5b810190808035906020019092919050505061155a565b005b610884600480360360e081101561076057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156107fe57600080fd5b82018360208201111561081057600080fd5b8035906020019184600183028401116401000000008311171561083257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611693565b005b61088e61198e565b6040518082815260200191505060405180910390f35b6108ac611998565b6040518082815260200191505060405180910390f35b6108ca6119c8565b604051808260028111156108da57fe5b60ff16815260200191505060405180910390f35b6109306004803603602081101561090457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f8565b6040518082815260200191505060405180910390f35b61094e611a41565b604051808215151515815260200191505060405180910390f35b610970611a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a6b600480360360208110156109c857600080fd5b81019080803590602001906401000000008111156109e557600080fd5b8201836020820111156109f757600080fd5b80359060200191846001830284011164010000000083111715610a1957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a7c565b005b610a9960048036036020811015610a8357600080fd5b8101908080359060200190929190505050611b03565b005b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b3c57600080fd5b505afa158015610b50573d6000803e3d6000fd5b505050506040513d6020811015610b6657600080fd5b8101908080519060200190929190505050905090565b6000610b86611c3c565b15610b945760029050610baf565b610b9c611c63565b15610baa5760019050610baf565b600090505b90565b6000806001541415610bc75760009050610c28565b60006002811115610bd457fe5b610bdc6119c8565b6002811115610be757fe5b1415610bf65760019050610c28565b600280811115610c0257fe5b610c0a6119c8565b6002811115610c1557fe5b14610c235760029050610c28565b600390505b90565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b610c5033611c8b565b610cc2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610ccb81611ce5565b50565b610cd733611c8b565b610d49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610d51611ef4565b565b6000610d83600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166113dd565b905090565b6000610d9333612061565b80610da35750610da233611c8b565b5b610e15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b610e1d6120a0565b610e8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b610ebe600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836120c7565b9050919050565b610ece336120eb565b80610ede5750610edd33611c8b565b5b610f50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b610fa5600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361212a565b5050565b6000600280811115610fb757fe5b826002811115610fc357fe5b1415610ff4576012600a0a610fe5610fdf856012600a0a61231e565b866123a4565b81610fec57fe5b04905061108d565b6001600281111561100157fe5b82600281111561100d57fe5b141561101c576000905061108d565b6000600281111561102957fe5b82600281111561103557fe5b141561108c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f76021913960400191505060405180910390fd5b5b9392505050565b60006002808111156110a257fe5b8260028111156110ae57fe5b14156110df576012600a0a6110d06110ca856012600a0a61231e565b866123dc565b816110d757fe5b0490506111c0565b600160028111156110ec57fe5b8260028111156110f857fe5b141561114f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061348b6021913960400191505060405180910390fd5b6000600281111561115c57fe5b82600281111561116857fe5b14156111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134f76021913960400191505060405180910390fd5b5b9392505050565b60006111d233612061565b806111e257506111e133611c8b565b5b611254576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b61125c612410565b6112ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b6112d6612437565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b60006113e8826119f8565b9050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611424336120eb565b80611434575061143333611c8b565b5b6114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6114ae6120a0565b15611521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61155233600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858561245f565b905092915050565b611563336120eb565b80611573575061157233611c8b565b5b6115e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6115ed6120a0565b15611660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b611690600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836126cb565b50565b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614611739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806134cd602a913960400191505060405180910390fd5b86600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146117ff576117fe886128e9565b5b61180a878686612af7565b61181383612cc1565b60008251146118265761182582612d02565b5b7f664ded22802a39a33ce123e5d663871dacea1984cc7ec83e5b8b850118649f6488888888888888604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018460028111156118fa57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611944578082015181840152602081019050611929565b50505050905090810190601f1680156119715780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6000600154905090565b60004260005411156119c0576119b942600054612da190919063ffffffff16565b90506119c5565b600090505b90565b60008060005414156119dd57600090506119f5565b4260005411156119f057600190506119f5565b600290505b90565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080611a4c610d53565b11905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8533611c8b565b611af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611b0081612d02565b50565b611b0c33612061565b80611b1c5750611b1b33611c8b565b5b611b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611b966120a0565b15611c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b611c39600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633836126cb565b50565b6000600380811115611c4a57fe5b611c52610bb2565b6003811115611c5d57fe5b14905090565b600060026003811115611c7257fe5b611c7a610bb2565b6003811115611c8557fe5b14905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611daa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611fb9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061206b611311565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006002808111156120ae57fe5b6120b6610b7c565b60028111156120c157fe5b14905090565b6000806120d3846119f8565b90506120e084848361212a565b508091505092915050565b60006120f56112e4565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000806121378584612e2a565b9050612141610c2b565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156121c757600080fd5b505af11580156121db573d6000803e3d6000fd5b505050506040513d60208110156121f157600080fd5b8101908080519060200190929190505050612274576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b7f925e052b9be9fe61c1aa15c79475f18b346732f0cf5fb7a0841a558238afce99858585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b600080831415612331576000905061239e565b600082840290508284828161234257fe5b0414612399576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134ac6021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a6123cc6123b8858561231e565b60026012600a0a816123c657fe5b04612fbb565b816123d357fe5b04905092915050565b6000816124006123f0856012600a0a61231e565b600285816123fa57fe5b04612fbb565b8161240757fe5b04905092915050565b600080600281111561241e57fe5b612426610b7c565b600281111561243157fe5b14905090565b600061244e42600154612fbb90919063ffffffff16565b905061245981613043565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600281111561250857fe5b81600281111561251457fe5b1415612588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612593828683610fa9565b925061259f8784613084565b6125a986866131d0565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18787878688604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612680578082015181840152602081019050612665565b50505050905090810190601f1680156126ad5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a18292505050949350505050565b6126d5838261325d565b506126de610c2b565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561279857600080fd5b505af11580156127ac573d6000803e3d6000fd5b505050506040513d60208110156127c257600080fd5b8101908080519060200190929190505050612845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b7ffb8efd70c9f0ca009bfc9f2ca8a9256a5aefbc720bdb8d838e4bcd42c241b9eb838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115612b0457fe5b816002811115612b1057fe5b1480612b32575060016002811115612b2457fe5b816002811115612b3057fe5b145b15612b915760008214612b90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613518602c913960400191505060405180910390fd5b5b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115612c3657fe5b02179055507fc964ed8af672f908dc7ba57f61d45a87a7e179cecf5198e7b7d53c920d898f06838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826002811115612ca757fe5b60ff168152602001935050505060405180910390a1505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015612d64578082015181840152602081019050612d49565b50505050905090810190601f168015612d915780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600082821115612e19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612ef88382612da190919063ffffffff16565b915081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f51c54d09e3f09480ef3014ab9c0738a405a9f38ebca6b7f60ff3acbd22ed2b44848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a18191505092915050565b600080828401905083811015613039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561311f57600080fd5b505af1158015613133573d6000803e3d6000fd5b505050506040513d602081101561314957600080fd5b81019080805190602001909291905050506131cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b6000806131dd8484612e2a565b90506131e883613373565b7f659f33fc6677bebf3a9bf3101092792e31f35766d0358e54577bdd91a655f6a08484604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18091505092915050565b60006132b182600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612fbb90919063ffffffff16565b905080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f05ee66c5c291705b2a39786f7a3c9abb763a9c66336056b9e154be4aa0f31813838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a180905092915050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156133da57600080fd5b505af11580156133ee573d6000803e3d6000fd5b505050506040513d602081101561340457600080fd5b8101908080519060200190929190505050613487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158204452337b17aecc4df5ca0ca484acb49d1c04e6ea9a7c592dbcb5a040b67c9efd64736f6c634300050d0032",
  "sourceMap": "1595:11786:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1595:11786:0;;;;;;;",
  "deployedSourceMap": "1595:11786:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1595:11786:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12177:335:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:428:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:87:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9640:228:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9640:228:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;10007:204;;;:::i;:::-;;11406:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9038:395;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9038:395:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7721:319;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7721:319:0;;;;;;;;;;;;;;;;;:::i;:::-;;4371:405:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4371:405:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5406:440;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5406:440:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8331:361:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;673:95:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10856:112:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10340:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3612:212:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3612:212:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2709:120:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2709:120:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1001:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7011:439:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7011:439:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7011:439:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7011:439:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7011:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7011:439:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5816:375;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5816:375:0;;;;;;;;;;;;;;;;;:::i;:::-;;3331:915;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3331:915:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3331:915:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3331:915:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3331:915:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3331:915:0;;;;;;;;;;;;;;;:::i;:::-;;865:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;914:173:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1346:275;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:110:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2052:110:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11646:101:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1455:95:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4450:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4450:226:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4450:226:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4450:226:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4450:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4450:226:0;;;;;;;;;;;;;;;:::i;:::-;;5055:370;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5055:370:0;;;;;;;;;;;;;;;;;:::i;:::-;;645:229:24;688:15;824:8;;;;;;;;;;;815:37;;;861:4;815:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;815:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;815:52:24;;;;;;;;;;;;;;;;808:59;;645:229;:::o;12177:335:0:-;12228:22;12266:18;:16;:18::i;:::-;12262:244;;;12307:28;12300:35;;;;12262:244;12356:20;:18;:20::i;:::-;12352:154;;;12399:29;12392:36;;;;12352:154;12466:29;12459:36;;12177:335;;:::o;1293:428:13:-;1344:22;1393:1;1382:7;;:12;1378:59;;;1415:22;1408:29;;;;1378:59;1483:21;1451:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;1447:99;;;1525:21;1518:28;;;;1447:99;1592:21;1560:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;1556:158;;1634:24;1627:31;;;;1556:158;1692:22;1685:29;;1293:428;;:::o;1206:87:12:-;1247:13;413:42;1272:14;;1206:87;:::o;9640:228:0:-;9736:31;9756:10;9736:19;:31::i;:::-;9728:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9825:36;9852:8;9825:26;:36::i;:::-;9640:228;:::o;10007:204::-;10087:31;10107:10;10087:19;:31::i;:::-;10079:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10176:28;:26;:28::i;:::-;10007:204::o;11406:117::-;11454:13;11486:30;11503:5;:12;;;;;;;;;;;;11486:16;:30::i;:::-;11479:37;;11406:117;:::o;9038:395::-;9096:14;9157:20;9166:10;9157:8;:20::i;:::-;:55;;;;9181:31;9201:10;9181:19;:31::i;:::-;9157:55;9149:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9297:14;:12;:14::i;:::-;9289:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9379:47;9402:5;:12;;;;;;;;;;;;9416:9;9379:22;:47::i;:::-;9372:54;;9038:395;;;:::o;7721:319::-;7820:26;7835:10;7820:14;:26::i;:::-;:61;;;;7850:31;7870:10;7850:19;:31::i;:::-;7820:61;7812:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7970:63;7989:5;:12;;;;;;;;;;;;8003:5;:12;;;;;;;;;;;;8017:15;7970:18;:63::i;:::-;;7721:319;:::o;4371:405:18:-;4464:12;4505:13;4492:26;;;;;;;;:9;:26;;;;;;;;;4488:123;;;809:2;794;786:26;4541:53;4557:29;4570:10;809:2;794;786:26;4557:12;:29::i;:::-;4588:5;4541:15;:53::i;:::-;:59;;;;;;4534:66;;;;4488:123;4637:13;4624:26;;;;;;;;:9;:26;;;;;;;;;4620:52;;;4671:1;4664:8;;;;4620:52;4699:13;4686:26;;;;;;;;:9;:26;;;;;;;;;4682:87;;;4726:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4682:87;4371:405;;;;;;:::o;5406:440::-;5499:18;5546:13;5533:26;;;;;;;;:9;:26;;;;;;;;;5529:117;;;809:2;794;786:26;5582:47;5598:23;5611:4;809:2;794;786:26;5598:12;:23::i;:::-;5623:5;5582:15;:47::i;:::-;:53;;;;;;5575:60;;;;5529:117;5672:13;5659:26;;;;;;;;:9;:26;;;;;;;;;5655:87;;;5699:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5655:87;5769:13;5756:26;;;;;;;;:9;:26;;;;;;;;;5752:87;;;5796:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5752:87;5406:440;;;;;;:::o;8331:361:0:-;8373:16;8436:20;8445:10;8436:8;:20::i;:::-;:55;;;;8460:31;8480:10;8460:19;:31::i;:::-;8436:55;8428:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8582:15;:13;:15::i;:::-;8574:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8667:18;:16;:18::i;:::-;8660:25;;8331:361;:::o;673:95:14:-;717:16;752:9;;745:16;;673:95;:::o;10856:112:0:-;10904:20;10943:5;:18;;;;;;;;;;;;10936:25;;10856:112;:::o;10340:94::-;10382:14;10415:5;:12;;;;;;;;;;;;10408:19;;10340:94;:::o;3612:212:18:-;3667:13;3682:19;3760:11;:19;3772:6;3760:19;;;;;;;;;;;;;;;:25;;;3787:11;:19;3799:6;3787:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3752:65;;;;3612:212;;;:::o;2709:120:23:-;2764:13;2796:26;2815:6;2796:18;:26::i;:::-;2789:33;;2709:120;;;:::o;1001:92:24:-;1044:15;1078:8;;;;;;;;;;;1071:15;;1001:92;:::o;7011:439:0:-;7085:12;7144:26;7159:10;7144:14;:26::i;:::-;:61;;;;7174:31;7194:10;7174:19;:31::i;:::-;7144:61;7136:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7301:14;:12;:14::i;:::-;7300:15;7292:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7381:62;7397:10;7409:5;:12;;;;;;;;;;;;7423:10;7435:7;7381:15;:62::i;:::-;7374:69;;7011:439;;;;:::o;5816:375::-;5905:26;5920:10;5905:14;:26::i;:::-;:61;;;;5935:31;5955:10;5935:19;:31::i;:::-;5905:61;5897:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6062:14;:12;:14::i;:::-;6061:15;6053:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6128:56;6146:5;:12;;;;;;;;;;;;6160:10;6172:11;6128:17;:56::i;:::-;5816:375;:::o;3331:915::-;349:10:24;338:8;;:21;;;;;;;;;;;;;;;;;;451:15;511:7;499:20;487:32;;550:1;538:8;:13;;;530:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3645:6:0;3630:5;:12;;;:21;;;;;;;;;;;;;;;;;;3682:12;3661:5;:18;;;:33;;;;;;;;;;;;;;;;;;3753:1;3733:22;;:8;:22;;;3729:84;;3771:31;3793:8;3771:21;:31::i;:::-;3729:84;3853:44;3872:6;3880:5;3887:9;3853:18;:44::i;:::-;3940:37;3961:15;3940:20;:37::i;:::-;4035:1;4016:8;:15;:20;4012:87;;4052:36;4079:8;4052:26;:36::i;:::-;4012:87;4151:88;4163:8;4173:6;4181:12;4195:5;4202:9;4213:15;4230:8;4151:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4151:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3331:915;;;;;;;;:::o;865:89:13:-;907:14;940:7;;933:14;;865:89;:::o;914:173:14:-;963:12;1003:3;991:9;;:15;987:93;;;1027:18;1041:3;1027:9;;:13;;:18;;;;:::i;:::-;1020:25;;;;987:93;1079:1;1072:8;;914:173;;:::o;1346:275::-;1396:21;1446:1;1433:9;;:14;1429:60;;;1468:21;1461:28;;;;1429:60;1515:3;1503:9;;:15;1499:115;;;1539:20;1532:27;;;;1499:115;1593:21;1586:28;;1346:275;;:::o;2052:110:15:-;2107:15;2141:8;:14;2150:4;2141:14;;;;;;;;;;;;;;;;2134:21;;2052:110;;;:::o;11646:101:0:-;11687:13;11739:1;11719:17;:15;:17::i;:::-;:21;11712:28;;11646:101;:::o;1455:95:19:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;4450:226:0:-;4546:31;4566:10;4546:19;:31::i;:::-;4538:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4633:36;4660:8;4633:26;:36::i;:::-;4450:226;:::o;5055:370::-;5151:20;5160:10;5151:8;:20::i;:::-;:55;;;;5175:31;5195:10;5175:19;:31::i;:::-;5151:55;5143:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5296:14;:12;:14::i;:::-;5295:15;5287:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5362:56;5380:5;:12;;;;;;;;;;;;5394:10;5406:11;5362:17;:56::i;:::-;5055:370;:::o;2125:126:13:-;2166:13;2222:22;2198:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;2191:53;;2125:126;:::o;1989:130::-;2032:13;2088:24;2064:48;;;;;;;;:20;:18;:20::i;:::-;:48;;;;;;;;;2057:55;;1989:130;:::o;1556:111:19:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;725:410::-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;10611:117:0:-;10668:13;10710:11;:9;:11::i;:::-;10700:21;;:6;:21;;;10693:28;;10611:117;;;:::o;13241:138::-;13288:13;13344:28;13320:52;;;;;;;;:20;:18;:20::i;:::-;:52;;;;;;;;;13313:59;;13241:138;:::o;1661:322:23:-;1738:19;1792:22;1817:26;1836:6;1817:18;:26::i;:::-;1792:51;;1881:45;1892:6;1900:9;1911:14;1881:10;:45::i;:::-;;1962:14;1955:21;;;1661:322;;;;:::o;11151:129:0:-;11214:13;11256:17;:15;:17::i;:::-;11246:27;;:6;:27;;;11239:34;;11151:129;;;:::o;1163:492:23:-;1258:16;1312:18;1333:46;1358:6;1366:12;1333:24;:46::i;:::-;1312:67;;1442:18;:16;:18::i;:::-;1435:35;;;1471:9;1482:12;1435:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1435:60:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1435:60:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1435:60:23;;;;;;;;;;;;;;;;1427:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:43;1570:6;1578:9;1589:12;1559:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:10;1631:17;;;1163:492;;;;;:::o;233:458:8:-;291:7;536:1;531;:6;527:45;;;560:1;553:8;;;;527:45;582:9;598:1;594;:5;582:17;;626:1;621;617;:5;;;;;;:10;609:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:1;676:8;;;233:458;;;;;:::o;520:140:6:-;577:9;313:2;298;290:26;602:43;615:18;628:1;631;615:12;:18::i;:::-;643:1;313:2;298;290:26;635:9;;;;;;602:12;:43::i;:::-;:51;;;;;;598:55;;520:140;;;;:::o;854:136::-;911:9;982:1;936:43;949:22;962:1;313:2;298;290:26;949:12;:22::i;:::-;977:1;973;:5;;;;;;936:12;:43::i;:::-;:47;;;;;;932:51;;854:136;;;;:::o;12662:140:0:-;12710:13;12766:29;12742:53;;;;;;;;:20;:18;:20::i;:::-;:53;;;;;;;;;12735:60;;12662:140;:::o;672:164:13:-;708:16;747;759:3;747:7;;:11;;:16;;;;:::i;:::-;736:27;;773:31;795:8;773:21;:31::i;:::-;821:8;814:15;;672:164;:::o;2282:879:18:-;2430:12;2493:13;2509:11;:19;2521:6;2509:19;;;;;;;;;;;;;;;:25;;;2493:41;;2544:19;2566:11;:19;2578:6;2566:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2544:51;;2627:13;2614:26;;;;;;;;:9;:26;;;;;;;;;;2606:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2786:37;2794:5;2801:10;2813:9;2786:7;:37::i;:::-;2779:44;;2887:33;2905:8;2915:4;2887:17;:33::i;:::-;2986:38;3005:6;3013:10;2986:18;:38::i;:::-;;3062:52;3070:8;3080:6;3088:10;3100:4;3106:7;3062:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3062:52:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:4;3143:11;;;;2282:879;;;;;;:::o;754:403:23:-;871:45;896:6;904:11;871:24;:45::i;:::-;;979:18;:16;:18::i;:::-;972:39;;;1012:6;1028:4;1035:11;972:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:75:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;972:75:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;972:75:23;;;;;;;;;;;;;;;;964:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1111:39;1122:6;1130;1138:11;1111:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:403;;;:::o;302:417:19:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;1355:448:18:-;1462:13;1449:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1492:13;1479:26;;;;;;;;:9;:26;;;;;;;;;1449:56;1445:154;;;1538:1;1529:5;:10;1521:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:154;1668:5;1640:11;:19;1652:6;1640:19;;;;;;;;;;;;;;;:25;;:33;;;;1715:9;1683:11;:19;1695:6;1683:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;1762:34;1771:6;1779:5;1786:9;1762:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:448;;;:::o;556:110:13:-;621:6;611:7;:16;;;;642:17;652:6;642:17;;;;;;;;;;;;;;;;;;556:110;:::o;274:97:16:-;343:21;355:8;343:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;343:21:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:97;:::o;1280:179:8:-;1338:7;1370:1;1365;:6;;1357:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:9;1432:1;1428;:5;1416:17;;1451:1;1444:8;;;1280:179;;;;:::o;1107:620:15:-;1189:18;1250:22;1275:8;:14;1284:4;1275:14;;;;;;;;;;;;;;;;1250:39;;1365:14;1347;:32;;1339:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:34;1497:14;1478;:18;;:34;;;;:::i;:::-;1465:47;;1576:10;1559:8;:14;1568:4;1559:14;;;;;;;;;;;;;;;:27;;;;1624:50;1641:4;1647:14;1663:10;1624:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:10;1703:17;;;1107:620;;;;:::o;1542:176:8:-;1600:7;1619:9;1635:1;1631;:5;1619:17;;1659:1;1654;:6;;1646:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:1;1703:8;;;1542:176;;;;:::o;522:122:14:-;593:8;581:9;:20;;;;616:21;628:8;616:21;;;;;;;;;;;;;;;;;;522:122;:::o;957:147:12:-;413:42;1032:28;;;1061:4;1067:5;1032:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1032:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1032:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1032:41:12;;;;;;;;;;;;;;;;1024:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:147;;:::o;1989:392:23:-;2065:16;2119:18;2140:46;2165:6;2173:12;2140:24;:46::i;:::-;2119:67;;2230:27;2244:12;2230:13;:27::i;:::-;2295:33;2307:6;2315:12;2295:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:10;2357:17;;;1989:392;;;;:::o;696:405:15:-;775:18;858:31;877:11;858:8;:14;867:4;858:14;;;;;;;;;;;;;;;;:18;;:31;;;;:::i;:::-;845:44;;953:10;936:8;:14;945:4;936:14;;;;;;;;;;;;;;;:27;;;;1001:47;1018:4;1024:11;1037:10;1001:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:10;1077:17;;696:405;;;;:::o;605:108:12:-;413:42;662:17;;;680:5;662:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;662:24:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;662:24:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;662:24:12;;;;;;;;;;;;;;;;654:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:108;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../helpers/openzeppelin-solidity/math/SafeMath.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.2.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.2.0/docs/state-machines/agreements/CountdownGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time before the end of the countdown.\n///             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n///             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(address operator, address staker, address counterparty, uint256 ratio, Griefing.RatioType ratioType, uint256 countdownLength, bytes metadata);\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of NMR (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // add stake\n        Staking._addStake(_data.staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of NMR (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // add stake\n        Staking._addStake(_data.staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param punishment uint256 amount of NMR (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of NMR (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // execute griefing\n        return Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of NMR (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // release stake back to the staker\n        Staking._takeStake(_data.staker, _data.staker, amountToRelease);\n    }\n\n    /// @notice Called by the staker to begin countdown to finalize the agreement\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before Countdown.isActive()\n    /// @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require countdown is not started\n        require(isInitialized(), \"deadline already set\");\n\n        // start countdown\n        return Countdown._start();\n    }\n\n    /// @notice Called by the staker to retrieve the remaining stake once the agreement has ended\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: after Countdown.isOver()\n    /// @param recipient address of the account where to send the stake\n    /// @return amount uint256 amount of NMR (18 decimals) retrieved\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // retrieve stake\n        return Staking._takeFullStake(_data.staker, recipient);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of NMR (18 decimals) staked\n    function getCurrentStake() public view returns (uint256 stake) {\n        return Staking.getStake(_data.staker);\n    }\n\n    /// @notice Validate if the current stake is greater than 0\n    /// @return validity bool true if non-zero stake\n    function isStaked() public view returns (bool validity) {\n        return getCurrentStake() > 0;\n    }\n\n    enum AgreementStatus { isInitialized, isInCountdown, isTerminated }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isInCountdown: staker has triggered countdown to termination\n    ///          - isTerminated: griefing agreement is over, staker can retrieve stake\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        if (Countdown.isOver()) {\n            return AgreementStatus.isTerminated;\n        } else if (Countdown.isActive()) {\n            return AgreementStatus.isInCountdown;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n    /// @return validity bool true if correct state\n    function isInCountdown() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInCountdown;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isTerminated state\n    /// @return validity bool true if correct state\n    function isTerminated() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isTerminated;\n    }\n}\n"
}
