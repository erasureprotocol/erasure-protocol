{
  "contractName": "CountdownGriefingEscrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "DataSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "agreement",
          "type": "address"
        }
      ],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "agreementParams",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeTaken",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowCountdown",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "agreementParams",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "depositAndSetSeller",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "depositAndSetBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBuyer",
      "outputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSeller",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getData",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "paymentAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stakeAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint120",
          "name": "ratio",
          "type": "uint120"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "countdownLength",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEscrowStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefingEscrow.EscrowStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "2470:19065:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2470:19065:4;;;;;;;",
  "deployedSourceMap": "2470:19065:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2470:19065:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8626:292;;;:::i;:::-;;645:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1293:428:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:87:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17517:228:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17517:228:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;17884:204;;;:::i;:::-;;19515:435;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12260:2431;;;:::i;:::-;;673:95:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18216:91:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20590:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7998:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7998:266:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;16256:350;;;:::i;:::-;;2709:120:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2709:120:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10105:263:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10105:263:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1001:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10744:294:4;;;:::i;:::-;;14892:336;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14892:336:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14892:336:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14892:336:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14892:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14892:336:4;;;;;;;;;;;;;;;:::i;:::-;;865:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;914:173:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18700:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1346:275:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:110:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2052:110:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1455:95:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5177:2047:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5177:2047:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5177:2047:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5177:2047:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5177:2047:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5177:2047:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5177:2047:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5177:2047:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5177:2047:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5177:2047:4;;;;;;;;;;;;;;;:::i;:::-;;15509:414;;;:::i;:::-;;7398:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7398:226:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7398:226:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7398:226:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7398:226:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7398:226:4;;;;;;;;;;;;;;;:::i;:::-;;8626:292;8734:1;8710:26;;:5;:12;;;;;;;;;;;;:26;;;;8702:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8777:20;8786:10;8777:8;:20::i;:::-;:55;;;;8801:31;8821:10;8801:19;:31::i;:::-;8777:55;8769:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8896:15;:13;:15::i;:::-;8626:292::o;645:229:24:-;688:15;824:8;;;;;;;;;;;815:37;;;861:4;815:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;815:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;815:52:24;;;;;;;;;;;;;;;;808:59;;645:229;:::o;1293:428:13:-;1344:22;1393:1;1382:7;;:12;1378:59;;;1415:22;1408:29;;;;1378:59;1483:21;1451:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;1447:99;;;1525:21;1518:28;;;;1447:99;1592:21;1560:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;1556:158;;1634:24;1627:31;;;;1556:158;1692:22;1685:29;;1293:428;;:::o;1206:87:12:-;1247:13;413:42;1272:14;;1206:87;:::o;17517:228:4:-;17613:31;17633:10;17613:19;:31::i;:::-;17605:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17702:36;17729:8;17702:26;:36::i;:::-;17517:228;:::o;17884:204::-;17964:31;17984:10;17964:19;:31::i;:::-;17956:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18053:28;:26;:28::i;:::-;17884:204::o;19515:435::-;19564:21;19595:19;19624:13;19647:28;19685:23;19746:5;:19;;;;;;;;;;;;19779:5;:17;;;;;;;;;;;;19810:5;:21;;:27;;;;;;;;;;;;19851:5;:21;;:31;;;;;;;;;;;;19896:5;:21;;:37;;;;;;;;;;;;19725:218;;;;;;;;;;19515:435;;;;;:::o;12260:2431::-;12340:20;12349:10;12340:8;:20::i;:::-;:55;;;;12364:31;12384:10;12364:19;:31::i;:::-;12340:55;12332:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12475:13;:11;:13::i;:::-;12467:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12555:17;12646:21;12670;:19;:21::i;:::-;12646:45;;12705:22;12739:13;12730:43;;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12730:45:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12730:45:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12730:45:4;;;;;;;;;;;;;;;;12705:70;;12789:24;12837:14;12827:40;;;12868:13;12827:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12827:55:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12827:55:4;;;;;;39:16:-1;36:1;17:17;2:54;12827:55:4;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12827:55:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;12827:55:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12827:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12816:78;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12816:78:4;;;;;;;;;;;;;;;;12789:105;;12955:25;13115:4;13138:5;:12;;;;;;;;;;;;13168:5;:11;;;;;;;;;;;;13205:5;:21;;:27;;;;;;;;;;;;13197:36;;13251:5;:21;;:31;;;;;;;;;;;;13308:5;:21;;:37;;;;;;;;;;;;13300:46;;13364:9;;;;;;;;;;;;12983:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12983:404:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12983:404:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;12983:404:4;12955:432;;13479:16;13470:33;;;13504:12;13470:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13470:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13470:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13470:47:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13470:47:4;;;;;;;;;;;;;;;;13458:59;;12260:2431;;;;13594:18;13636:21;13660:34;13682:5;:11;;;;;;;;;;;;13660:21;:34::i;:::-;13636:58;;13708:19;13730:35;13752:5;:12;;;;;;;;;;;;13730:21;:35::i;:::-;13708:57;;13792:30;13810:11;13792:13;:17;;:30;;;;:::i;:::-;13779:43;;12260:2431;;13860:1;13847:10;:14;13843:204;;;13892:18;:16;:18::i;:::-;13885:34;;;13920:9;13931:10;13885:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13885:57:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13885:57:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13885:57:4;;;;;;;;;;;;;;;;13877:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14000:9;13982:42;;;14025:10;13982:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13982:54:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13982:54:4;;;;13843:204;14113:9;14095:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14095:45:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14095:45:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14095:45:4;;;;;;;;;;;;;;;;;14180:16;14199:22;:20;:22::i;:::-;14180:41;;14255:1;14235:22;;:8;:22;;;14231:186;;14291:9;14273:45;;;14319:8;14273:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14273:55:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14273:55:4;;;;14231:186;;;14377:9;14359:45;;;:47;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14359:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14359:47:4;;;;14231:186;14467:24;14452:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;14535:5;:19;;;14528:26;;;;;;;;;;;14571:5;:17;;;14564:24;;;;;;;;;;;14605:5;:21;;;14598:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14664:20;14674:9;14664:20;;;;;;;;;;;;;;;;;;;;;;12260:2431;;;:::o;673:95:14:-;717:16;752:9;;745:16;;673:95;:::o;18216:91:4:-;18257:13;18289:5;:11;;;;;;;;;;;;18282:18;;18216:91;:::o;20590:105::-;20638:19;20676:5;:12;;;;;;;;;;;;20669:19;;20590:105;:::o;7998:266::-;8127:1;8103:26;;:5;:12;;;;;;;;;;;;:26;;;8095:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8200:6;8185:5;:12;;;:21;;;;;;;;;;;;;;;;;;8242:15;:13;:15::i;:::-;7998:266;:::o;16256:350::-;16335:19;16343:10;16335:7;:19::i;:::-;:54;;;;16358:31;16378:10;16358:19;:31::i;:::-;16335:54;16327:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16468:13;:11;:13::i;:::-;:35;;;;;16485:18;:16;:18::i;:::-;16468:35;16460:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16590:9;:7;:9::i;:::-;16256:350::o;2709:120:23:-;2764:13;2796:26;2815:6;2796:18;:26::i;:::-;2789:33;;2709:120;;;:::o;10105:263:4:-;10231:1;10208:25;;:5;:11;;;;;;;;;;;;:25;;;10200:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10301:5;10287;:11;;;:19;;;;;;;;;;;;;;;;;;10344:17;:15;:17::i;:::-;10105:263;:::o;1001:92:24:-;1044:15;1078:8;;;;;;;;;;;1071:15;;1001:92;:::o;10744:294:4:-;10853:1;10830:25;;:5;:11;;;;;;;;;;;;:25;;;;10822:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10895:19;10903:10;10895:7;:19::i;:::-;:54;;;;10918:31;10938:10;10918:19;:31::i;:::-;10895:54;10887:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:17;:15;:17::i;:::-;10744:294::o;14892:336::-;14991:20;15000:10;14991:8;:20::i;:::-;:55;;;;15015:31;15035:10;15015:19;:31::i;:::-;14991:55;14983:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15126:13;:11;:13::i;:::-;15118:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15202:19;15216:4;15202:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15202:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14892:336;:::o;865:89:13:-;907:14;940:7;;933:14;;865:89;:::o;914:173:14:-;963:12;1003:3;991:9;;:15;987:93;;;1027:18;1041:3;1027:9;;:13;;:18;;;;:::i;:::-;1020:25;;;;987:93;1079:1;1072:8;;914:173;;:::o;18700:94:4:-;18742:14;18775:5;:12;;;;;;;;;;;;18768:19;;18700:94;:::o;1346:275:14:-;1396:21;1446:1;1433:9;;:14;1429:60;;;1468:21;1461:28;;;;1429:60;1515:3;1503:9;;:15;1499:115;;;1539:20;1532:27;;;;1499:115;1593:21;1586:28;;1346:275;;:::o;2052:110:15:-;2107:15;2141:8;:14;2150:4;2141:14;;;;;;;;;;;;;;;;2134:21;;2052:110;;;:::o;1455:95:19:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;5177:2047:4:-;349:10:24;338:8;;:21;;;;;;;;;;;;;;;;;;451:15;511:7;499:20;487:32;;550:1;538:8;:13;;;530:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5536:1:4;5519:19;;:5;:19;;;5515:69;;5568:5;5554;:11;;;:19;;;;;;;;;;;;;;;;;;5515:69;5615:1;5597:20;;:6;:20;;;5593:72;;5648:6;5633:5;:12;;;:21;;;;;;;;;;;;;;;;;;5593:72;5734:1;5714:22;;:8;:22;;;5710:84;;5752:31;5774:8;5752:21;:31::i;:::-;5710:84;5867:1;5842:13;:27;5838:203;;5926:13;5910:31;;5893:13;:48;;5885:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6016:13;5986:5;:19;;;:44;;;;;;;;;;;;;;;;;;5838:203;6077:1;6054:11;:25;6050:191;;6134:11;6118:29;;6103:11;:44;6095:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6218:11;6190:5;:17;;;:40;;;;;;;;;;;;;;;;;;6050:191;6283:37;6304:15;6283:20;:37::i;:::-;6389:1;6370:8;:15;:20;6366:87;;6406:36;6433:8;6406:26;:36::i;:::-;6366:87;6535:1;6509:15;:22;:27;6505:567;;6570:13;6601:28;6647:26;6701:15;6690:67;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6690:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6552:205;;;;;;6804:5;6788:23;;6779:5;:32;6771:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6895:18;6879:36;;6857:18;:58;6849:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6990:71;;;;;;;;7014:5;6990:71;;;;;;7022:9;6990:71;;;;;;;;;;;;7041:18;6990:71;;;;;6966:5;:21;;:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6505:567;;;;7109:108;7121:8;7131:5;7138:6;7146:13;7161:11;7174:15;7191:8;7201:15;7109:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7109:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7109:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5177:2047;;;;;;;;;:::o;15509:414::-;15587:20;15596:10;15587:8;:20::i;:::-;:43;;;;15611:19;15619:10;15611:7;:19::i;:::-;15587:43;:78;;;;15634:31;15654:10;15634:19;:31::i;:::-;15587:78;15579:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15754:8;:6;:8::i;:::-;:32;;;;15766:20;:18;:20::i;:::-;15754:32;:58;;;;15790:22;:20;:22::i;:::-;15754:58;15746:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15907:9;:7;:9::i;:::-;15509:414::o;7398:226::-;7494:31;7514:10;7494:19;:31::i;:::-;7486:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:36;7608:8;7581:26;:36::i;:::-;7398:226;:::o;18966:117::-;19023:13;19065:11;:9;:11::i;:::-;19055:21;;:6;:21;;;19048:28;;18966:117;;;:::o;1556:111:19:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;8924:783:4:-;9009:8;:6;:8::i;:::-;:34;;;;9021:22;:20;:22::i;:::-;9009:34;9001:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9133:14;9150:5;:12;;;;;;;;;;;;9133:29;;9172:19;9202:5;:17;;;;;;;;;;;;9194:26;;9172:48;;9290:1;9267:11;:25;9263:106;;9308:50;9326:6;9334:10;9346:11;9308:17;:50::i;:::-;9263:106;9406:35;9421:6;9429:11;9406:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;9512:22;:20;:22::i;:::-;9508:193;;;9565:24;9550:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;9603:10;:8;:10::i;:::-;9508:193;;;9659:31;9644:5;:12;;;:46;;;;;;;;;;;;;;;;;;;;;;;;9508:193;8924:783;;:::o;725:410:19:-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;21131:130:4:-;21177:13;21230:24;21209:45;;;;;;;;:17;:15;:17::i;:::-;:45;;;;;;;;;21202:52;;21131:130;:::o;1733:290:15:-;1788:21;1852:22;1877:8;:14;1886:4;1877:14;;;;;;;;;;;;;;;;1852:39;;1928:38;1945:4;1951:14;1928:16;:38::i;:::-;;2002:14;1995:21;;;1733:290;;;:::o;1542:176:8:-;1600:7;1619:9;1635:1;1631;:5;1619:17;;1659:1;1654;:6;;1646:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:1;1703:8;;;1542:176;;;;:::o;18478:115:4:-;18534:13;18576:10;:8;:10::i;:::-;18566:20;;:6;:20;;;18559:27;;18478:115;;;:::o;2125:126:13:-;2166:13;2222:22;2198:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;2191:53;;2125:126;:::o;16612:698:4:-;16696:14;16713:5;:12;;;;;;;;;;;;16696:29;;16735:13;16751:5;:11;;;;;;;;;;;;16735:27;;16839:1;16811:24;16828:6;16811:16;:24::i;:::-;:29;16807:98;;16856:38;16879:6;16887;16856:22;:38::i;:::-;;16807:98;16981:1;16954:23;16971:5;16954:16;:23::i;:::-;:28;16950:95;;16998:36;17021:5;17028;16998:22;:36::i;:::-;;16950:95;17095:24;17080:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;17163:5;:19;;;17156:26;;;;;;;;;;;17199:5;:17;;;17192:24;;;;;;;;;;;17233:5;:21;;;17226:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17292:11;;;;;;;;;;16612:698;;:::o;11044:824::-;11131:8;:6;:8::i;:::-;:32;;;;11143:20;:18;:20::i;:::-;11131:32;11123:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11255:13;11271:5;:11;;;;;;;;;;;;11255:27;;11292:21;11324:5;:19;;;;;;;;;;;;11316:28;;11292:52;;11422:1;11397:13;:27;11393:109;;11440:51;11458:5;11465:10;11477:13;11440:17;:51::i;:::-;11393:109;11539:38;11556:5;11563:13;11539:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;11665:20;:18;:20::i;:::-;11661:201;;;11716:24;11701:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;11754:18;:16;:18::i;:::-;;11661:201;;;11818:33;11803:5;:12;;;:48;;;;;;;;;;;;;;;;;;;;;;;;11661:201;11044:824;;:::o;21267:130::-;21313:13;21366:24;21345:45;;;;;;;;:17;:15;:17::i;:::-;:45;;;;;;;;;21338:52;;21267:130;:::o;1280:179:8:-;1338:7;1370:1;1365;:6;;1357:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:9;1432:1;1428;:5;1416:17;;1451:1;1444:8;;;1280:179;;;;:::o;302:417:19:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;556:110:13:-;621:6;611:7;:16;;;;642:17;652:6;642:17;;;;;;;;;;;;;;;;;;556:110;:::o;274:97:16:-;343:21;355:8;343:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;343:21:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:97;:::o;20701:120:4:-;20742:13;20795:19;20774:40;;;;;;;;:17;:15;:17::i;:::-;:40;;;;;;;;;20767:47;;20701:120;:::o;20827:144::-;20880:13;20933:31;20912:52;;;;;;;;:17;:15;:17::i;:::-;:52;;;;;;;;;20905:59;;20827:144;:::o;20977:148::-;21032:13;21085:33;21064:54;;;;;;;;:17;:15;:17::i;:::-;:54;;;;;;;;;21057:61;;20977:148;:::o;754:403:23:-;871:45;896:6;904:11;871:24;:45::i;:::-;;979:18;:16;:18::i;:::-;972:39;;;1012:6;1028:4;1035:11;972:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:75:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;972:75:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;972:75:23;;;;;;;;;;;;;;;;964:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1111:39;1122:6;1130;1138:11;1111:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:403;;;:::o;1107:620:15:-;1189:18;1250:22;1275:8;:14;1284:4;1275:14;;;;;;;;;;;;;;;;1250:39;;1365:14;1347;:32;;1339:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:34;1497:14;1478;:18;;:34;;;;:::i;:::-;1465:47;;1576:10;1559:8;:14;1568:4;1559:14;;;;;;;;;;;;;;;:27;;;;1624:50;1641:4;1647:14;1663:10;1624:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:10;1703:17;;;1107:620;;;;:::o;1661:322:23:-;1738:19;1792:22;1817:26;1836:6;1817:18;:26::i;:::-;1792:51;;1881:45;1892:6;1900:9;1911:14;1881:10;:45::i;:::-;;1962:14;1955:21;;;1661:322;;;;:::o;672:164:13:-;708:16;747;759:3;747:7;;:11;;:16;;;;:::i;:::-;736:27;;773:31;795:8;773:21;:31::i;:::-;821:8;814:15;;672:164;:::o;696:405:15:-;775:18;858:31;877:11;858:8;:14;867:4;858:14;;;;;;;;;;;;;;;;:18;;:31;;;;:::i;:::-;845:44;;953:10;936:8;:14;945:4;936:14;;;;;;;;;;;;;;;:27;;;;1001:47;1018:4;1024:11;1037:10;1001:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:10;1077:17;;696:405;;;;:::o;1163:492:23:-;1258:16;1312:18;1333:46;1358:6;1366:12;1333:24;:46::i;:::-;1312:67;;1442:18;:16;:18::i;:::-;1435:35;;;1471:9;1482:12;1435:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1435:60:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1435:60:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1435:60:23;;;;;;;;;;;;;;;;1427:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:43;1570:6;1578:9;1589:12;1559:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:10;1631:17;;;1163:492;;;;;:::o;522:122:14:-;593:8;581:9;:20;;;;616:21;628:8;616:21;;;;;;;;;;;;;;;;;;522:122;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../helpers/openzeppelin-solidity/math/SafeMath.sol\";\nimport \"../helpers/openzeppelin-solidity/token/ERC20/IERC20.sol\";\nimport \"../agreements/CountdownGriefing.sol\";\nimport \"../modules/iFactory.sol\";\nimport \"../modules/iRegistry.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Staking.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefingEscrow\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.2.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/v1.2.0/docs/state-machines/escrows/CountdownGriefingEscrow.png\n/// @notice This escrow allows for a buyer and a seller to deposit their stake and payment before sending it to a CountdownGriefing agreement.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details.\n///         Notable features:\n///             - The deposited payment and stake become the stake of the agreement once the escrow is finalized.\n///             - If the buyer is not defined on creation, the first user to deposit the payment becomes the buyer.\n///             - If the seller is not defined on creation, the first user to deposit the stake becomes the seller.\n///             - Either party is able to cancel the escrow and retrieve their deposit if their counterparty never completes their deposit.\n///             - If the buyer deposits their payment after the stake has already been deposited by the seller, this starts a countdown for the seller to finalize the escrow.\n///             - If the seller does not finalize the escrow before the end of the countdown, the buyer can timeout the escrow and recover their stake.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\n///         **Note**\n///             Given the nature of ethereum, it is possible that while a cancel request is pending, the counterparty finalizes the escrow and the deposits are transfered to the agreement.\n///             This contract is designed such that there is only two end states: deposits are returned to the buyer and the seller OR the agreement is successfully created.\n///             This is why a user CANNOT rely on the cancellation feature to always work.\ncontract CountdownGriefingEscrow is Countdown, Staking, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address buyer;\n        address seller;\n        uint128 paymentAmount;\n        uint128 stakeAmount;\n        EscrowStatus status;\n        AgreementParams agreementParams;\n    }\n\n    struct AgreementParams {\n        uint120 ratio;\n        Griefing.RatioType ratioType;\n        uint128 countdownLength;\n    }\n\n    event Initialized(\n        address operator,\n        address buyer,\n        address seller,\n        uint256 paymentAmount,\n        uint256 stakeAmount,\n        uint256 countdownLength,\n        bytes metadata,\n        bytes agreementParams\n    );\n    event StakeDeposited(address seller, uint256 amount);\n    event PaymentDeposited(address buyer, uint256 amount);\n    event Finalized(address agreement);\n    event DataSubmitted(bytes data);\n    event Cancelled();\n\n    /// @notice Constructor used to initialize the escrow parameters.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param buyer address of the buyer. Optional parameter. This address is the only one able to deposit the payment. If not set, the first to deposit the payment becomes the buyer.\n    /// @param seller address of the seller. Optional parameter. This address is the only one able to deposit the stake. If not set, the first to deposit the stake becomes the seller.\n    /// @param paymentAmount uint256 amount of NMR (18 decimals) to be deposited by buyer as payment. Required parameter. This number must fit in a uint128 for optimization reasons.\n    /// @param stakeAmount uint256 amount of NMR (18 decimals) to be deposited by seller as stake. Required parameter. This number must fit in a uint128 for optimization reasons.\n    /// @param escrowCountdown uint256 amount of time (in seconds) the seller has to finalize the escrow after the payment and stake is deposited. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    /// @param agreementParams bytes ABI-encoded parameters used by CountdownGriefing agreement on initialization. Required parameter.\n    ///                        This encoded data blob must contain the uint120 ratio, Griefing.RatioType ratioType, and uint128 agreementCountdown encoded as `abi.encode(ratio, ratioType, agreementCountdown)`.\n    ///                        See CountdownGriefing initialize function for additional details.\n    function initialize(\n        address operator,\n        address buyer,\n        address seller,\n        uint256 paymentAmount,\n        uint256 stakeAmount,\n        uint256 escrowCountdown,\n        bytes memory metadata,\n        bytes memory agreementParams\n    ) public initializeTemplate() {\n        // set participants if defined\n        if (buyer != address(0)) {\n            _data.buyer = buyer;\n        }\n        if (seller != address(0)) {\n            _data.seller = seller;\n        }\n\n        // set operator if defined\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set amounts if defined\n        if (paymentAmount != uint256(0)) {\n            require(paymentAmount <= uint256(uint128(paymentAmount)), \"paymentAmount is too large\");\n            _data.paymentAmount = uint128(paymentAmount);\n        }\n        if (stakeAmount != uint256(0)) {\n            require(stakeAmount == uint256(uint128(stakeAmount)), \"stakeAmount is too large\");\n            _data.stakeAmount = uint128(stakeAmount);\n        }\n\n        // set countdown length\n        Countdown._setLength(escrowCountdown);\n\n        // set metadata if defined\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // set agreementParams if defined\n        if (agreementParams.length != 0) {\n            (\n                uint256 ratio,\n                Griefing.RatioType ratioType,\n                uint256 agreementCountdown\n            ) = abi.decode(agreementParams, (uint256, Griefing.RatioType, uint256));\n            require(ratio == uint256(uint120(ratio)), \"ratio out of bounds\");\n            require(agreementCountdown == uint256(uint128(agreementCountdown)), \"agreementCountdown out of bounds\");\n            _data.agreementParams = AgreementParams(uint120(ratio), ratioType, uint128(agreementCountdown));\n        }\n\n        // emit event\n        emit Initialized(operator, buyer, seller, paymentAmount, stakeAmount, escrowCountdown, metadata, agreementParams);\n    }\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata Data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Deposit Stake in NMR and set seller address\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    ///          - if buyer already deposited the payment, finalize the escrow\n    /// @dev Access Control: anyone\n    ///      State Machine: before finalize() OR before cancel()\n    function depositAndSetSeller(address seller) public {\n        // restrict access control\n        require(_data.seller == address(0), \"seller already set\");\n\n        // set seller\n        _data.seller = seller;\n\n        // deposit stake\n        _depositStake();\n    }\n\n    /// @notice Deposit Stake in NMR\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    ///          - if buyer already deposited the payment, finalize the escrow\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: before finalize() OR before cancel()\n    function depositStake() public {\n        // restrict access control\n        require(_data.seller != address(0), \"seller not yet set\");\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n\n        // deposit stake\n        _depositStake();\n    }\n\n    function _depositStake() private {\n        // restrict state machine\n        require(isOpen() || onlyPaymentDeposited(), \"can only deposit stake once\");\n\n        // declare storage variables in memory\n        address seller = _data.seller;\n        uint256 stakeAmount = uint256(_data.stakeAmount);\n\n        // Add the stake amount\n        if (stakeAmount != uint256(0)) {\n            Staking._addStake(seller, msg.sender, stakeAmount);\n        }\n\n        // emit event\n        emit StakeDeposited(seller, stakeAmount);\n\n        // If payment is deposited, finalize the escrow\n        if (onlyPaymentDeposited()) {\n            _data.status = EscrowStatus.isDeposited;\n            finalize();\n        } else {\n            _data.status = EscrowStatus.onlyStakeDeposited;\n        }\n    }\n\n    /// @notice Deposit Payment in NMR and set buyer address\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    ///          - if seller already deposited the stake, start the finalization countdown\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: before finalize() OR before cancel()\n    function depositAndSetBuyer(address buyer) public {\n        // restrict access control\n        require(_data.buyer == address(0), \"buyer already set\");\n\n        // set buyer\n        _data.buyer = buyer;\n\n        // deposit payment\n        _depositPayment();\n    }\n\n    /// @notice Deposit Payment in NMR\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    ///          - if seller already deposited the stake, start the finalization countdown\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: before finalize() OR before cancel()\n    function depositPayment() public {\n        // restrict access control\n        require(_data.buyer != address(0), \"buyer not yet set\");\n        require(isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only buyer or operator\");\n\n        // deposit payment\n        _depositPayment();\n    }\n\n    function _depositPayment() private {\n        // restrict state machine\n        require(isOpen() || onlyStakeDeposited(), \"can only deposit payment once\");\n\n        // declare storage variables in memory\n        address buyer = _data.buyer;\n        uint256 paymentAmount = uint256(_data.paymentAmount);\n\n        // Add the payment as a stake\n        if (paymentAmount != uint256(0)) {\n            Staking._addStake(buyer, msg.sender, paymentAmount);\n        }\n\n        // emit event\n        emit PaymentDeposited(buyer, paymentAmount);\n\n        // If stake is deposited, start countdown for seller to finalize\n        if (onlyStakeDeposited()) {\n            _data.status = EscrowStatus.isDeposited;\n            Countdown._start();\n        } else {\n            _data.status = EscrowStatus.onlyPaymentDeposited;\n        }\n    }\n\n    /// @notice Finalize escrow and execute completion script\n    ///          - create the agreement\n    ///          - transfer deposited stake and payment to agreement\n    ///          - start agreement countdown\n    ///          - disable agreement operator\n    /// @dev Access Control: seller OR operator\n    ///      State Machine: after depositStake() AND after depositPayment()\n    function finalize() public {\n        // restrict access control\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n        // restrict state machine\n        require(isDeposited(), \"only after deposit\");\n\n        // create the agreement\n\n        address agreement;\n        {\n            // get the agreement factory address\n\n            address escrowFactory = Template.getFactory();\n            address escrowRegistry = iFactory(escrowFactory).getInstanceRegistry();\n            address agreementFactory = abi.decode(iRegistry(escrowRegistry).getFactoryData(escrowFactory), (address));\n\n            // encode initialization function\n            bytes memory initCalldata = abi.encodeWithSignature(\n                'initialize(address,address,address,uint256,uint8,uint256,bytes)',\n                address(this),\n                _data.seller,\n                _data.buyer,\n                uint256(_data.agreementParams.ratio),\n                _data.agreementParams.ratioType,\n                uint256(_data.agreementParams.countdownLength),\n                bytes(\"\")\n            );\n\n            // deploy and initialize agreement contract\n            agreement = iFactory(agreementFactory).create(initCalldata);\n        }\n\n        // transfer stake and payment to the agreement\n\n        uint256 totalStake;\n        {\n            uint256 paymentAmount = Deposit._clearDeposit(_data.buyer);\n            uint256 stakeAmount = Deposit._clearDeposit(_data.seller);\n            totalStake = paymentAmount.add(stakeAmount);\n        }\n\n        if (totalStake > 0) {\n            require(IERC20(BurnNMR.getToken()).approve(agreement, totalStake), \"token approval failed\");\n            CountdownGriefing(agreement).increaseStake(totalStake);\n        }\n\n        // start agreement countdown\n\n        CountdownGriefing(agreement).startCountdown();\n\n        // transfer operator\n        address operator = Operated.getOperator();\n        if (operator != address(0)) {\n            CountdownGriefing(agreement).transferOperator(operator);\n        } else {\n            CountdownGriefing(agreement).renounceOperator();\n        }\n\n        // update status\n        _data.status = EscrowStatus.isFinalized;\n\n        // delete storage\n        delete _data.paymentAmount;\n        delete _data.stakeAmount;\n        delete _data.agreementParams;\n\n        // emit event\n        emit Finalized(agreement);\n    }\n\n    /// @notice Submit data to the buyer\n    /// @dev Access Control: seller OR operator\n    ///      State Machine: after finalize()\n    /// @param data Data (any format) to submit to the buyer\n    function submitData(bytes memory data) public {\n        // restrict access control\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n        // restrict state machine\n        require(isFinalized(), \"only after finalized\");\n\n        // emit event\n        emit DataSubmitted(data);\n    }\n\n    /// @notice Cancel escrow because no interested counterparty\n    ///          - return deposit to caller\n    ///          - close escrow\n    /// @dev Access Control: seller OR buyer OR operator\n    ///      State Machine: before depositStake() OR before depositPayment()\n    function cancel() public {\n        // restrict access control\n        require(isSeller(msg.sender) || isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only seller or buyer or operator\");\n        // restrict state machine\n        require(isOpen() || onlyStakeDeposited() || onlyPaymentDeposited(), \"only before deposits are completed\");\n\n        // cancel escrow and return deposits\n        _cancel();\n    }\n\n    /// @notice Cancel escrow if seller does not finalize\n    ///          - return stake to seller\n    ///          - return payment to buyer\n    ///          - close escrow\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: after depositStake() AND after depositPayment() AND after Countdown.isOver()\n    function timeout() public {\n        // restrict access control\n        require(isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only buyer or operator\");\n        // restrict state machine\n        require(isDeposited() && Countdown.isOver(), \"only after countdown ended\");\n\n        // cancel escrow and return deposits\n        _cancel();\n    }\n\n    function _cancel() private {\n        // declare storage variables in memory\n        address seller = _data.seller;\n        address buyer = _data.buyer;\n\n        // return stake to seller\n        if (Staking.getStake(seller) != 0) {\n            Staking._takeFullStake(seller, seller);\n        }\n\n        // return payment to buyer\n        if (Staking.getStake(buyer) != 0) {\n            Staking._takeFullStake(buyer, buyer);\n        }\n\n        // update status\n        _data.status = EscrowStatus.isCancelled;\n\n        // delete storage\n        delete _data.paymentAmount;\n        delete _data.stakeAmount;\n        delete _data.agreementParams;\n\n        // emit event\n        emit Cancelled();\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator Address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    /// View functions\n\n    /// @notice Get the address of the buyer (if set)\n    /// @return buyer Buyer account address\n    function getBuyer() public view returns (address buyer) {\n        return _data.buyer;\n    }\n\n    /// @notice Validate if the address matches the stored buyer address\n    /// @param caller Address to validate\n    /// @return validity True if matching address\n    function isBuyer(address caller) internal view returns (bool validity) {\n        return caller == getBuyer();\n    }\n\n    /// @notice Get the address of the seller (if set)\n    /// @return seller Seller account address\n    function getSeller() public view returns (address seller) {\n        return _data.seller;\n    }\n\n    /// @notice Validate if the address matches the stored seller address\n    /// @param caller Address to validate\n    /// @return validity True if matching address\n    function isSeller(address caller) internal view returns (bool validity) {\n        return caller == getSeller();\n    }\n\n    /// @notice Get the data in storage\n    /// @return uint128 paymentAmount set in initialization\n    /// @return uint128 stakeAmount set in initialization\n    /// @return uint120 ratio used for initialization of agreement on completion\n    /// @return Griefing.RatioType ratioType used for initialization of agreement on completion\n    /// @return uint128 countdownLength used for initialization of agreement on completion\n    function getData() public view returns (\n        uint128 paymentAmount,\n        uint128 stakeAmount,\n        uint120 ratio,\n        Griefing.RatioType ratioType,\n        uint128 countdownLength\n    ) {\n        return (\n            _data.paymentAmount,\n            _data.stakeAmount,\n            _data.agreementParams.ratio,\n            _data.agreementParams.ratioType,\n            _data.agreementParams.countdownLength\n        );\n    }\n\n    enum EscrowStatus { isOpen, onlyStakeDeposited, onlyPaymentDeposited, isDeposited, isFinalized, isCancelled }\n    /// @notice Return the status of the state machine\n    /// @return EscrowStatus status from of the following states:\n    ///          - isOpen: initialized but no deposits made\n    ///          - onlyStakeDeposited: only stake deposit completed\n    ///          - onlyPaymentDeposited: only payment deposit completed\n    ///          - isDeposited: both payment and stake deposit is completed\n    ///          - isFinalized: the escrow completed successfully\n    ///          - isCancelled: the escrow was cancelled\n    function getEscrowStatus() public view returns (EscrowStatus status) {\n        return _data.status;\n    }\n\n    function isOpen() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isOpen;\n    }\n\n    function onlyStakeDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.onlyStakeDeposited;\n    }\n\n    function onlyPaymentDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.onlyPaymentDeposited;\n    }\n\n    function isDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isDeposited;\n    }\n\n    function isFinalized() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isFinalized;\n    }\n\n    function isCancelled() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isCancelled;\n    }\n}\n"
}
