{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isActiveOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isAfterDeadline",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasActiveOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOver",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isCreator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStake",
          "type": "uint256"
        }
      ],
      "name": "StakeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStake",
          "type": "uint256"
        }
      ],
      "name": "StakeTaken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStake",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retrieveStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validity",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "isCounterparty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validity",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506121c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806373f500af11610104578063b4bd9e27116100a2578063e3cfef6011610071578063e3cfef6014610613578063e7f43c681461061b578063ee57e36f14610623578063efd46065146106c9576101cf565b8063b4bd9e2714610503578063b6ef42841461050b578063be1c766b146105e8578063bec10cde146105f0576101cf565b80637a766460116100de5780637a766460146104aa57806388cc58e4146104d0578063923b1762146104d8578063a4fa8d57146104e0576101cf565b806373f500af1461042b578063754b2707146104515780637878f257146104a2576101cf565b8063465b414e116101715780635e5365c11161014b5780635e5365c1146103cf5780635f8d96de146103d75780636d70f7ae146103df5780636f1e853314610405576101cf565b8063465b414e146103545780634a66db95146103805780635baeb806146103a3576101cf565b806329605e77116101ad57806329605e77146102c45780632ab6f8db146102ec5780633367cca5146102f457806341ce28781461032e576101cf565b80630ee2cb10146101d45780630fc15f20146101f857806321df0da7146102bc575b600080fd5b6101dc6106ef565b604080516001600160a01b039092168252519081900360200190f35b6102aa6004803603606081101561020e57600080fd5b81359160208101359181019060608101604082013564010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184600183028401116401000000008311171561026957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061076b945050505050565b60408051918252519081900360200190f35b6101dc61082e565b6102ea600480360360208110156102da57600080fd5b50356001600160a01b0316610846565b005b6102ea6108a3565b61031a6004803603602081101561030a57600080fd5b50356001600160a01b03166108fe565b604080519115158252519081900360200190f35b6102aa6004803603602081101561034457600080fd5b50356001600160a01b031661091e565b6102aa6004803603606081101561036a57600080fd5b508035906020810135906040013560ff166109dc565b6102ea6004803603604081101561039657600080fd5b5080359060200135610a8b565b6102aa600480360360608110156103b957600080fd5b508035906020810135906040013560ff16610afa565b6102aa610b77565b6102aa610c2e565b61031a600480360360208110156103f557600080fd5b50356001600160a01b0316610c34565b61031a6004803603602081101561041b57600080fd5b50356001600160a01b0316610c59565b61031a6004803603602081101561044157600080fd5b50356001600160a01b0316610c6d565b6104776004803603602081101561046757600080fd5b50356001600160a01b0316610c81565b6040518083815260200182600281111561048d57fe5b60ff1681526020019250505060405180910390f35b61031a610caa565b6102aa600480360360208110156104c057600080fd5b50356001600160a01b0316610cc5565b6101dc610ce0565b61031a610cef565b6102ea600480360360408110156104f657600080fd5b5080359060200135610cff565b61031a610db6565b6102ea600480360360e081101561052157600080fd5b6001600160a01b038235811692602081013582169260408201359092169160608201359160ff6080820135169160a0820135919081019060e0810160c082013564010000000081111561057357600080fd5b82018360208201111561058557600080fd5b803590602001918460018302840111640100000000831117156105a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dd4945050505050565b6102aa610fac565b6102ea6004803603604081101561060657600080fd5b5080359060200135610fb2565b6102aa611009565b6101dc611039565b6102ea6004803603602081101561063957600080fd5b81019060208101813564010000000081111561065457600080fd5b82018360208201111561066657600080fd5b8035906020019184600183028401116401000000008311171561068857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611048945050505050565b61031a600480360360208110156106df57600080fd5b50356001600160a01b03166110a8565b600554604080516335fb8cc160e11b815230600482015290516000926001600160a01b031691636bf71982916024808301926020929190829003018186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d602081101561076457600080fd5b5051919050565b600061077633610c6d565b806107855750610785336108fe565b6107c05760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b6107c8610db6565b1561080c576040805162461bcd60e51b815260206004820152600f60248201526e1859dc99595b595b9d08195b991959608a1b604482015290519081900360640190fd5b6006546108269033906001600160a01b03168686866110b2565b949350505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667190565b61084f336108fe565b610897576040805162461bcd60e51b815260206004820152601460248201527337b7363c9030b1ba34bb329037b832b930ba37b960611b604482015290519081900360640190fd5b6108a081611294565b50565b6108ac336108fe565b6108f4576040805162461bcd60e51b815260206004820152601460248201527337b7363c9030b1ba34bb329037b832b930ba37b960611b604482015290519081900360640190fd5b6108fc6112ed565b565b600061090982610c34565b80156109185750610918610cef565b92915050565b600061092933610c59565b806109385750610938336108fe565b610977576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b61097f610caa565b6109c6576040805162461bcd60e51b8152602060048201526013602482015272191958591b1a5b99481b9bdd081c185cdcd959606a1b604482015290519081900360640190fd5b600654610918906001600160a01b031683611393565b600060028260028111156109ec57fe5b1415610a1d57670de0b6b3a7640000610a0e610a0885836113b8565b86611411565b81610a1557fe5b049050610a84565b6001826002811115610a2b57fe5b1415610a3957506000610a84565b6000826002811115610a4757fe5b1415610a845760405162461bcd60e51b81526004018080602001828103825260218152602001806121286021913960400191505060405180910390fd5b9392505050565b610a9433610c6d565b80610aa35750610aa3336108fe565b610ade5760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b600654610af6906001600160a01b031680848461144a565b5050565b60006002826002811115610b0a57fe5b1415610b2c57670de0b6b3a7640000610a0e610b2685836113b8565b8661169a565b6001826002811115610b3a57fe5b1415610a395760405162461bcd60e51b81526004018080602001828103825260218152602001806120546021913960400191505060405180910390fd5b6000610b8233610c59565b80610b915750610b91336108fe565b610bd0576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b610bd8610c2e565b15610c21576040805162461bcd60e51b8152602060048201526014602482015273191958591b1a5b9948185b1c9958591e481cd95d60621b604482015290519081900360640190fd5b610c296116ba565b905090565b60005490565b6000610c3e611039565b6001600160a01b0316826001600160a01b0316149050919050565b6006546001600160a01b0391821691161490565b6007546001600160a01b0391821691161490565b6001600160a01b031660009081526003602052604090208054600190910154909160ff90911690565b60008054610cba57506000610cc2565b506000544210155b90565b6001600160a01b031660009081526002602052604090205490565b6005546001600160a01b031690565b600454600160a01b900460ff1690565b610d0833610c6d565b80610d175750610d17336108fe565b610d525760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b610d5a610db6565b15610d9e576040805162461bcd60e51b815260206004820152600f60248201526e1859dc99595b595b9d08195b991959608a1b604482015290519081900360640190fd5b600654610af6906001600160a01b03163384846116db565b6000610dc0610c2e565b610dcc57506000610cc2565b610c29610caa565b600580546001600160a01b03191633179055303b63ffffffff811615610e2b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806120fe602a913960400191505060405180910390fd5b600680546001600160a01b03808a166001600160a01b031992831617909255600780548984169216919091179055881615610e7157610e69886118e6565b610e716119b3565b610e7c878686611a68565b610e8583611b77565b815115610e9557610e9582611bb2565b7f664ded22802a39a33ce123e5d663871dacea1984cc7ec83e5b8b850118649f648888888888888860405180886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001846002811115610f1b57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f62578181015183820152602001610f4a565b50505050905090810190601f168015610f8f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b60015490565b610fbb33610c59565b80610fca5750610fca336108fe565b610d52576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b6000611013610c2e565b421061102157506000610cc2565b610c294261102d610c2e565b9063ffffffff611c4e16565b6004546001600160a01b031690565b61105133610c59565b806110605750611060336108fe565b61109f576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b6108a081611bb2565b6000610c3e6106ef565b60006110bd85610cc5565b84111561110b576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b6001600160a01b03851660009081526003602052604081208054600190910154909160ff9091169081600281111561113f57fe5b141561118a576040805162461bcd60e51b81526020600482015260156024820152741b9bc81c1d5b9a5cda1b595b9d08185b1b1bddd959605a1b604482015290519081900360640190fd5b6111958286836109dc565b92506111a18884611cab565b6111ac878787611d81565b7fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb1888887868860405180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561124b578181015183820152602001611233565b50505050905090810190601f1680156112785780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505095945050505050565b6004546001600160a01b03166112e4576040805162461bcd60e51b815260206004820152601060248201526f1bdc195c985d1bdc881b9bdd081cd95d60821b604482015290519081900360640190fd5b6108a0816118e6565b6112f5610cef565b611346576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c79207768656e206f70657261746f722061637469766500000000000000604482015290519081900360640190fd5b600480546001600160a81b0319169055604080516000808252602082015281517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d929181900390910190a1565b6001600160a01b0382166000908152600260205260409020546109188383838061144a565b6000826113c757506000610918565b828202828482816113d457fe5b0414610a845760405162461bcd60e51b81526004018080602001828103825260218152602001806120bb6021913960400191505060405180910390fd5b6000670de0b6b3a764000061143b61142985856113b8565b6002670de0b6b3a76400005b04611ef5565b8161144257fe5b049392505050565b6001600160a01b03841660009081526002602052604090205482146114b0576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b600081116114f8576040805162461bcd60e51b815260206004820152601060248201526f6e6f207374616b6520746f2074616b6560801b604482015290519081900360640190fd5b818111156115375760405162461bcd60e51b81526004018080602001828103825260228152602001806120756022913960400191505060405180910390fd5b6000611549838363ffffffff611c4e16565b6001600160a01b0386166000908152600260205260409020819055905061156e61082e565b6001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156115cd57600080fd5b505af11580156115e1573d6000803e3d6000fd5b505050506040513d60208110156115f757600080fd5b5051611642576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b604080516001600160a01b038088168252861660208201528082018490526060810183905290517f79cb01d8e263c1d344176f9a596b5a6aa14a7df350a227e2e7df836a087b56619181900360800190a15050505050565b60008161143b6116b285670de0b6b3a76400006113b8565b600285611435565b6001546000906116d0904263ffffffff611ef516565b9050610cc281611f4f565b6001600160a01b0384166000908152600260205260409020548214611741576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b60008111611788576040805162461bcd60e51b815260206004820152600f60248201526e1b9bc81cdd185ad9481d1bc8185919608a1b604482015290519081900360640190fd5b600061179a838363ffffffff611ef516565b6001600160a01b038616600090815260026020526040902081905590506117bf61082e565b604080516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201869052915192909116916323b872dd916064808201926020929091908290030181600087803b15801561181957600080fd5b505af115801561182d573d6000803e3d6000fd5b505050506040513d602081101561184357600080fd5b505161188e576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b604080516001600160a01b038088168252861660208201528082018490526060810183905290517fef7c8dfef14cbefdf829b8f066b068b677992411137321d64b3ed4538c2b36379181900360800190a15050505050565b6004546001600160a01b0382811691161415611949576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f74207365742073616d65206f70657261746f720000000000000000604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0383161790557f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d8161198e610cef565b604080516001600160a01b03909316835290151560208301528051918290030190a150565b6119bb610cef565b15611a0d576040805162461bcd60e51b815260206004820152601d60248201527f6f6e6c79207768656e206f70657261746f72206e6f7420616374697665000000604482015290519081900360640190fd5b6004805460ff60a01b1916600160a01b1790819055604080516001600160a01b0390921682526001602083015280517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9281900390910190a1565b6000816002811115611a7657fe5b1480611a8d57506001816002811115611a8b57fe5b145b15611acf578115611acf5760405162461bcd60e51b815260040180806020018281038252602c815260200180612149602c913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902082815560019081018054839260ff1990911690836002811115611b0657fe5b02179055507fc964ed8af672f908dc7ba57f61d45a87a7e179cecf5198e7b7d53c920d898f0683838360405180846001600160a01b03166001600160a01b03168152602001838152602001826002811115611b5d57fe5b60ff168152602001935050505060405180910390a1505050565b60018190556040805182815290517f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c9181900360200190a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015611c11578181015183820152602001611bf9565b50505050905090810190601f168015611c3e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600082821115611ca5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60408051630f91aad760e31b81526001600160a01b0384166004820152602481018390529051731776e1f26f98b1a5df9cd347953a26dd3cb4667191637c8d56b89160448083019260209291908290030181600087803b158015611d0e57600080fd5b505af1158015611d22573d6000803e3d6000fd5b505050506040513d6020811015611d3857600080fd5b5051610af6576040805162461bcd60e51b81526020600482015260136024820152721b9b5c88189d5c9b919c9bdb4819985a5b1959606a1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260205260409020548214611de7576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b60008111611e2f576040805162461bcd60e51b815260206004820152601060248201526f37379039ba30b5b2903a3790313ab93760811b604482015290519081900360640190fd5b81811115611e6e5760405162461bcd60e51b81526004018080602001828103825260228152602001806120dc6022913960400191505060405180910390fd5b6000611e80838363ffffffff611c4e16565b6001600160a01b03851660009081526002602052604090208190559050611ea682611f8a565b604080516001600160a01b03861681526020810184905280820183905290517ff470d7f6c239014b63db190652ebe51433a828b65e06d9972143c34c2e2ca3bc9181900360600190a150505050565b600082820183811015610a84576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008190556040805182815290517f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae130399181900360200190a150565b731776e1f26f98b1a5df9cd347953a26dd3cb466716001600160a01b031663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015611fe457600080fd5b505af1158015611ff8573d6000803e3d6000fd5b505050506040513d602081101561200e57600080fd5b50516108a0576040805162461bcd60e51b815260206004820152600f60248201526e1b9b5c88189d5c9b8819985a5b1959608a1b604482015290519081900360640190fdfe726174696f547970652063616e6e6f7420626520526174696f547970652e496e6663616e6e6f742074616b65206d6f7265207468616e2063757272656e745374616b656f6e6c7920636f756e7465727061727479206f7220616374697665206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7763616e6e6f74206275726e206d6f7265207468616e2063757272656e745374616b656d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e666f6e6c79207374616b6572206f7220616374697665206f70657261746f720000a265627a7a72315820719cb229780c3f413566b92a6bcadc8976f18de0df07e9b4738e2f52e22c5b4164736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806373f500af11610104578063b4bd9e27116100a2578063e3cfef6011610071578063e3cfef6014610613578063e7f43c681461061b578063ee57e36f14610623578063efd46065146106c9576101cf565b8063b4bd9e2714610503578063b6ef42841461050b578063be1c766b146105e8578063bec10cde146105f0576101cf565b80637a766460116100de5780637a766460146104aa57806388cc58e4146104d0578063923b1762146104d8578063a4fa8d57146104e0576101cf565b806373f500af1461042b578063754b2707146104515780637878f257146104a2576101cf565b8063465b414e116101715780635e5365c11161014b5780635e5365c1146103cf5780635f8d96de146103d75780636d70f7ae146103df5780636f1e853314610405576101cf565b8063465b414e146103545780634a66db95146103805780635baeb806146103a3576101cf565b806329605e77116101ad57806329605e77146102c45780632ab6f8db146102ec5780633367cca5146102f457806341ce28781461032e576101cf565b80630ee2cb10146101d45780630fc15f20146101f857806321df0da7146102bc575b600080fd5b6101dc6106ef565b604080516001600160a01b039092168252519081900360200190f35b6102aa6004803603606081101561020e57600080fd5b81359160208101359181019060608101604082013564010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184600183028401116401000000008311171561026957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061076b945050505050565b60408051918252519081900360200190f35b6101dc61082e565b6102ea600480360360208110156102da57600080fd5b50356001600160a01b0316610846565b005b6102ea6108a3565b61031a6004803603602081101561030a57600080fd5b50356001600160a01b03166108fe565b604080519115158252519081900360200190f35b6102aa6004803603602081101561034457600080fd5b50356001600160a01b031661091e565b6102aa6004803603606081101561036a57600080fd5b508035906020810135906040013560ff166109dc565b6102ea6004803603604081101561039657600080fd5b5080359060200135610a8b565b6102aa600480360360608110156103b957600080fd5b508035906020810135906040013560ff16610afa565b6102aa610b77565b6102aa610c2e565b61031a600480360360208110156103f557600080fd5b50356001600160a01b0316610c34565b61031a6004803603602081101561041b57600080fd5b50356001600160a01b0316610c59565b61031a6004803603602081101561044157600080fd5b50356001600160a01b0316610c6d565b6104776004803603602081101561046757600080fd5b50356001600160a01b0316610c81565b6040518083815260200182600281111561048d57fe5b60ff1681526020019250505060405180910390f35b61031a610caa565b6102aa600480360360208110156104c057600080fd5b50356001600160a01b0316610cc5565b6101dc610ce0565b61031a610cef565b6102ea600480360360408110156104f657600080fd5b5080359060200135610cff565b61031a610db6565b6102ea600480360360e081101561052157600080fd5b6001600160a01b038235811692602081013582169260408201359092169160608201359160ff6080820135169160a0820135919081019060e0810160c082013564010000000081111561057357600080fd5b82018360208201111561058557600080fd5b803590602001918460018302840111640100000000831117156105a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dd4945050505050565b6102aa610fac565b6102ea6004803603604081101561060657600080fd5b5080359060200135610fb2565b6102aa611009565b6101dc611039565b6102ea6004803603602081101561063957600080fd5b81019060208101813564010000000081111561065457600080fd5b82018360208201111561066657600080fd5b8035906020019184600183028401116401000000008311171561068857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611048945050505050565b61031a600480360360208110156106df57600080fd5b50356001600160a01b03166110a8565b600554604080516335fb8cc160e11b815230600482015290516000926001600160a01b031691636bf71982916024808301926020929190829003018186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d602081101561076457600080fd5b5051919050565b600061077633610c6d565b806107855750610785336108fe565b6107c05760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b6107c8610db6565b1561080c576040805162461bcd60e51b815260206004820152600f60248201526e1859dc99595b595b9d08195b991959608a1b604482015290519081900360640190fd5b6006546108269033906001600160a01b03168686866110b2565b949350505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667190565b61084f336108fe565b610897576040805162461bcd60e51b815260206004820152601460248201527337b7363c9030b1ba34bb329037b832b930ba37b960611b604482015290519081900360640190fd5b6108a081611294565b50565b6108ac336108fe565b6108f4576040805162461bcd60e51b815260206004820152601460248201527337b7363c9030b1ba34bb329037b832b930ba37b960611b604482015290519081900360640190fd5b6108fc6112ed565b565b600061090982610c34565b80156109185750610918610cef565b92915050565b600061092933610c59565b806109385750610938336108fe565b610977576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b61097f610caa565b6109c6576040805162461bcd60e51b8152602060048201526013602482015272191958591b1a5b99481b9bdd081c185cdcd959606a1b604482015290519081900360640190fd5b600654610918906001600160a01b031683611393565b600060028260028111156109ec57fe5b1415610a1d57670de0b6b3a7640000610a0e610a0885836113b8565b86611411565b81610a1557fe5b049050610a84565b6001826002811115610a2b57fe5b1415610a3957506000610a84565b6000826002811115610a4757fe5b1415610a845760405162461bcd60e51b81526004018080602001828103825260218152602001806121286021913960400191505060405180910390fd5b9392505050565b610a9433610c6d565b80610aa35750610aa3336108fe565b610ade5760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b600654610af6906001600160a01b031680848461144a565b5050565b60006002826002811115610b0a57fe5b1415610b2c57670de0b6b3a7640000610a0e610b2685836113b8565b8661169a565b6001826002811115610b3a57fe5b1415610a395760405162461bcd60e51b81526004018080602001828103825260218152602001806120546021913960400191505060405180910390fd5b6000610b8233610c59565b80610b915750610b91336108fe565b610bd0576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b610bd8610c2e565b15610c21576040805162461bcd60e51b8152602060048201526014602482015273191958591b1a5b9948185b1c9958591e481cd95d60621b604482015290519081900360640190fd5b610c296116ba565b905090565b60005490565b6000610c3e611039565b6001600160a01b0316826001600160a01b0316149050919050565b6006546001600160a01b0391821691161490565b6007546001600160a01b0391821691161490565b6001600160a01b031660009081526003602052604090208054600190910154909160ff90911690565b60008054610cba57506000610cc2565b506000544210155b90565b6001600160a01b031660009081526002602052604090205490565b6005546001600160a01b031690565b600454600160a01b900460ff1690565b610d0833610c6d565b80610d175750610d17336108fe565b610d525760405162461bcd60e51b81526004018080602001828103825260248152602001806120976024913960400191505060405180910390fd5b610d5a610db6565b15610d9e576040805162461bcd60e51b815260206004820152600f60248201526e1859dc99595b595b9d08195b991959608a1b604482015290519081900360640190fd5b600654610af6906001600160a01b03163384846116db565b6000610dc0610c2e565b610dcc57506000610cc2565b610c29610caa565b600580546001600160a01b03191633179055303b63ffffffff811615610e2b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806120fe602a913960400191505060405180910390fd5b600680546001600160a01b03808a166001600160a01b031992831617909255600780548984169216919091179055881615610e7157610e69886118e6565b610e716119b3565b610e7c878686611a68565b610e8583611b77565b815115610e9557610e9582611bb2565b7f664ded22802a39a33ce123e5d663871dacea1984cc7ec83e5b8b850118649f648888888888888860405180886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001846002811115610f1b57fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f62578181015183820152602001610f4a565b50505050905090810190601f168015610f8f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b60015490565b610fbb33610c59565b80610fca5750610fca336108fe565b610d52576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b6000611013610c2e565b421061102157506000610cc2565b610c294261102d610c2e565b9063ffffffff611c4e16565b6004546001600160a01b031690565b61105133610c59565b806110605750611060336108fe565b61109f576040805162461bcd60e51b815260206004820152601e6024820152600080516020612175833981519152604482015290519081900360640190fd5b6108a081611bb2565b6000610c3e6106ef565b60006110bd85610cc5565b84111561110b576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b6001600160a01b03851660009081526003602052604081208054600190910154909160ff9091169081600281111561113f57fe5b141561118a576040805162461bcd60e51b81526020600482015260156024820152741b9bc81c1d5b9a5cda1b595b9d08185b1b1bddd959605a1b604482015290519081900360640190fd5b6111958286836109dc565b92506111a18884611cab565b6111ac878787611d81565b7fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb1888887868860405180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561124b578181015183820152602001611233565b50505050905090810190601f1680156112785780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1505095945050505050565b6004546001600160a01b03166112e4576040805162461bcd60e51b815260206004820152601060248201526f1bdc195c985d1bdc881b9bdd081cd95d60821b604482015290519081900360640190fd5b6108a0816118e6565b6112f5610cef565b611346576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c79207768656e206f70657261746f722061637469766500000000000000604482015290519081900360640190fd5b600480546001600160a81b0319169055604080516000808252602082015281517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d929181900390910190a1565b6001600160a01b0382166000908152600260205260409020546109188383838061144a565b6000826113c757506000610918565b828202828482816113d457fe5b0414610a845760405162461bcd60e51b81526004018080602001828103825260218152602001806120bb6021913960400191505060405180910390fd5b6000670de0b6b3a764000061143b61142985856113b8565b6002670de0b6b3a76400005b04611ef5565b8161144257fe5b049392505050565b6001600160a01b03841660009081526002602052604090205482146114b0576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b600081116114f8576040805162461bcd60e51b815260206004820152601060248201526f6e6f207374616b6520746f2074616b6560801b604482015290519081900360640190fd5b818111156115375760405162461bcd60e51b81526004018080602001828103825260228152602001806120756022913960400191505060405180910390fd5b6000611549838363ffffffff611c4e16565b6001600160a01b0386166000908152600260205260409020819055905061156e61082e565b6001600160a01b031663a9059cbb85846040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156115cd57600080fd5b505af11580156115e1573d6000803e3d6000fd5b505050506040513d60208110156115f757600080fd5b5051611642576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b604080516001600160a01b038088168252861660208201528082018490526060810183905290517f79cb01d8e263c1d344176f9a596b5a6aa14a7df350a227e2e7df836a087b56619181900360800190a15050505050565b60008161143b6116b285670de0b6b3a76400006113b8565b600285611435565b6001546000906116d0904263ffffffff611ef516565b9050610cc281611f4f565b6001600160a01b0384166000908152600260205260409020548214611741576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b60008111611788576040805162461bcd60e51b815260206004820152600f60248201526e1b9bc81cdd185ad9481d1bc8185919608a1b604482015290519081900360640190fd5b600061179a838363ffffffff611ef516565b6001600160a01b038616600090815260026020526040902081905590506117bf61082e565b604080516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201869052915192909116916323b872dd916064808201926020929091908290030181600087803b15801561181957600080fd5b505af115801561182d573d6000803e3d6000fd5b505050506040513d602081101561184357600080fd5b505161188e576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b604080516001600160a01b038088168252861660208201528082018490526060810183905290517fef7c8dfef14cbefdf829b8f066b068b677992411137321d64b3ed4538c2b36379181900360800190a15050505050565b6004546001600160a01b0382811691161415611949576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f74207365742073616d65206f70657261746f720000000000000000604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0383161790557f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d8161198e610cef565b604080516001600160a01b03909316835290151560208301528051918290030190a150565b6119bb610cef565b15611a0d576040805162461bcd60e51b815260206004820152601d60248201527f6f6e6c79207768656e206f70657261746f72206e6f7420616374697665000000604482015290519081900360640190fd5b6004805460ff60a01b1916600160a01b1790819055604080516001600160a01b0390921682526001602083015280517f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9281900390910190a1565b6000816002811115611a7657fe5b1480611a8d57506001816002811115611a8b57fe5b145b15611acf578115611acf5760405162461bcd60e51b815260040180806020018281038252602c815260200180612149602c913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902082815560019081018054839260ff1990911690836002811115611b0657fe5b02179055507fc964ed8af672f908dc7ba57f61d45a87a7e179cecf5198e7b7d53c920d898f0683838360405180846001600160a01b03166001600160a01b03168152602001838152602001826002811115611b5d57fe5b60ff168152602001935050505060405180910390a1505050565b60018190556040805182815290517f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c9181900360200190a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015611c11578181015183820152602001611bf9565b50505050905090810190601f168015611c3e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600082821115611ca5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60408051630f91aad760e31b81526001600160a01b0384166004820152602481018390529051731776e1f26f98b1a5df9cd347953a26dd3cb4667191637c8d56b89160448083019260209291908290030181600087803b158015611d0e57600080fd5b505af1158015611d22573d6000803e3d6000fd5b505050506040513d6020811015611d3857600080fd5b5051610af6576040805162461bcd60e51b81526020600482015260136024820152721b9b5c88189d5c9b919c9bdb4819985a5b1959606a1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260205260409020548214611de7576040805162461bcd60e51b815260206004820152601760248201527618dd5c9c995b9d081cdd185ad9481a5b98dbdc9c9958dd604a1b604482015290519081900360640190fd5b60008111611e2f576040805162461bcd60e51b815260206004820152601060248201526f37379039ba30b5b2903a3790313ab93760811b604482015290519081900360640190fd5b81811115611e6e5760405162461bcd60e51b81526004018080602001828103825260228152602001806120dc6022913960400191505060405180910390fd5b6000611e80838363ffffffff611c4e16565b6001600160a01b03851660009081526002602052604090208190559050611ea682611f8a565b604080516001600160a01b03861681526020810184905280820183905290517ff470d7f6c239014b63db190652ebe51433a828b65e06d9972143c34c2e2ca3bc9181900360600190a150505050565b600082820183811015610a84576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008190556040805182815290517f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae130399181900360200190a150565b731776e1f26f98b1a5df9cd347953a26dd3cb466716001600160a01b031663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015611fe457600080fd5b505af1158015611ff8573d6000803e3d6000fd5b505050506040513d602081101561200e57600080fd5b50516108a0576040805162461bcd60e51b815260206004820152600f60248201526e1b9b5c88189d5c9b8819985a5b1959608a1b604482015290519081900360640190fdfe726174696f547970652063616e6e6f7420626520526174696f547970652e496e6663616e6e6f742074616b65206d6f7265207468616e2063757272656e745374616b656f6e6c7920636f756e7465727061727479206f7220616374697665206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7763616e6e6f74206275726e206d6f7265207468616e2063757272656e745374616b656d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e666f6e6c79207374616b6572206f7220616374697665206f70657261746f720000a265627a7a72315820719cb229780c3f413566b92a6bcadc8976f18de0df07e9b4738e2f52e22c5b4164736f6c634300050b0032",
  "sourceMap": "663:4975:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;663:4975:0;;;;;;;",
  "deployedSourceMap": "663:4975:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;663:4975:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;494:232:30;;;:::i;:::-;;;;-1:-1:-1;;;;;494:232:30;;;;;;;;;;;;;;3186:492:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3186:492:0;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3186:492:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3186:492:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3186:492:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3186:492:0;;-1:-1:-1;3186:492:0;;-1:-1:-1;;;;;3186:492:0:i;:::-;;;;;;;;;;;;;;;;980:87:16;;;:::i;4881:241:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4881:241:0;-1:-1:-1;;;;;4881:241:0;;:::i;:::-;;5128:217;;;:::i;1614:139:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1614:139:24;-1:-1:-1;;;;;1614:139:24;;:::i;:::-;;;;;;;;;;;;;;;;;;4454:421:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4454:421:0;-1:-1:-1;;;;;4454:421:0;;:::i;2384:588:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2384:588:21;;;;;;;;;;;;;;:::i;3684:368:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3684:368:0;;;;;;;:::i;2978:575:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2978:575:21;;;;;;;;;;;;;;:::i;4058:390:0:-;;;:::i;319:99:18:-;;;:::i;1397:115:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1397:115:24;-1:-1:-1;;;;;1397:115:24;;:::i;5374:122:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5374:122:0;-1:-1:-1;;;;;5374:122:0;;:::i;5502:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5502:134:0;-1:-1:-1;;;;;5502:134:0;;:::i;2124:231:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2124:231:21;-1:-1:-1;;;;;2124:231:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:194:18;;;:::i;3532:109:29:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3532:109:29;-1:-1:-1;;;;;3532:109:29;;:::i;849:95:30:-;;;:::i;1518:90:24:-;;;:::i;2752:428:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2752:428:0;;;;;;;:::i;782:295:17:-;;;:::i;1057:957:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1057:957:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1057:957:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1057:957:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1057:957:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1057:957:0;;-1:-1:-1;1057:957:0;;-1:-1:-1;;;;;1057:957:0:i;583:91:17:-;;;:::i;2323:423:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2323:423:0;;;;;;;:::i;1223:213:17:-;;;:::i;1292:99:24:-;;;:::i;2044:273:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2044:273:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2044:273:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2044:273:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2044:273:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2044:273:0;;-1:-1:-1;2044:273:0;;-1:-1:-1;;;;;2044:273:0:i;732:111:30:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;732:111:30;-1:-1:-1;;;;;732:111:30;;:::i;494:232::-;676:8;;667:52;;;-1:-1:-1;;;667:52:30;;713:4;667:52;;;;;;537:15;;-1:-1:-1;;;;;676:8:30;;667:37;;:52;;;;;;;;;;;;;;676:8;667:52;;;5:2:-1;;;;30:1;27;20:12;5:2;667:52:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;667:52:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;667:52:30;;494:232;-1:-1:-1;494:232:30:o;3186:492:0:-;3282:12;3341:26;3356:10;3341:14;:26::i;:::-;:67;;;;3371:37;3397:10;3371:25;:37::i;:::-;3333:116;;;;-1:-1:-1;;;3333:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3511:18;:16;:18::i;:::-;3510:19;3502:47;;;;;-1:-1:-1;;;3502:47:0;;;;;;;;;;;;-1:-1:-1;;;3502:47:0;;;;;;;;;;;;;;;3623:5;:12;3595:76;;3611:10;;-1:-1:-1;;;;;3623:12:0;3637;3651:10;3663:7;3595:15;:76::i;:::-;3588:83;3186:492;-1:-1:-1;;;;3186:492:0:o;980:87:16:-;304:42;;980:87::o;4881:241:0:-;4977:37;5003:10;4977:25;:37::i;:::-;4969:70;;;;;-1:-1:-1;;;4969:70:0;;;;;;;;;;;;-1:-1:-1;;;4969:70:0;;;;;;;;;;;;;;;5079:36;5106:8;5079:26;:36::i;:::-;4881:241;:::o;5128:217::-;5208:37;5234:10;5208:25;:37::i;:::-;5200:70;;;;;-1:-1:-1;;;5200:70:0;;;;;;;;;;;;-1:-1:-1;;;5200:70:0;;;;;;;;;;;;;;;5310:28;:26;:28::i;:::-;5128:217::o;1614:139:24:-;1677:7;1704:18;1715:6;1704:10;:18::i;:::-;:41;;;;;1726:19;:17;:19::i;:::-;1696:50;1614:139;-1:-1:-1;;1614:139:24:o;4454:421:0:-;4512:14;4573:20;4582:10;4573:8;:20::i;:::-;:61;;;;4597:37;4623:10;4597:25;:37::i;:::-;4565:104;;;;;-1:-1:-1;;;4565:104:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4565:104:0;;;;;;;;;;;;;;;4726:26;:24;:26::i;:::-;4718:57;;;;;-1:-1:-1;;;4718:57:0;;;;;;;;;;;;-1:-1:-1;;;4718:57:0;;;;;;;;;;;;;;;4844:5;:12;4821:47;;-1:-1:-1;;;;;4844:12:0;4858:9;4821:22;:47::i;2384:588:21:-;2477:12;2701:13;2688:9;:26;;;;;;;;;2684:123;;;508:26;2737:53;2753:29;2766:10;508:26;2753:12;:29::i;:::-;2784:5;2737:15;:53::i;:::-;:59;;;;;;2730:66;;;;2684:123;2833:13;2820:9;:26;;;;;;;;;2816:52;;;-1:-1:-1;2867:1:21;2860:8;;2816:52;2895:13;2882:9;:26;;;;;;;;;2878:87;;;2922:43;;-1:-1:-1;;;2922:43:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2878:87;2384:588;;;;;:::o;3684:368:0:-;3805:26;3820:10;3805:14;:26::i;:::-;:67;;;;3835:37;3861:10;3835:25;:37::i;:::-;3797:116;;;;-1:-1:-1;;;3797:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3987:5;:12;3968:77;;-1:-1:-1;;;;;3987:12:0;;4015;4029:15;3968:18;:77::i;:::-;3684:368;;:::o;2978:575:21:-;3071:18;3253:13;3240:9;:26;;;;;;;;;3236:117;;;508:26;3289:47;3305:23;3318:4;508:26;3305:12;:23::i;:::-;3330:5;3289:15;:47::i;3236:117::-;3379:13;3366:9;:26;;;;;;;;;3362:87;;;3406:43;;-1:-1:-1;;;3406:43:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4058:390:0;4100:16;4163:20;4172:10;4163:8;:20::i;:::-;:61;;;;4187:37;4213:10;4187:25;:37::i;:::-;4155:104;;;;;-1:-1:-1;;;4155:104:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4155:104:0;;;;;;;;;;;;;;;4322:22;:20;:22::i;:::-;:27;4314:60;;;;;-1:-1:-1;;;4314:60:0;;;;;;;;;;;;-1:-1:-1;;;4314:60:0;;;;;;;;;;;;;;;4423:18;:16;:18::i;:::-;4412:29;;4058:390;:::o;319:99:18:-;363:16;402:9;;319:99::o;1397:115:24:-;1454:7;1491:13;:11;:13::i;:::-;-1:-1:-1;;;;;1481:23:24;:6;-1:-1:-1;;;;;1481:23:24;;1473:32;;1397:115;;;:::o;5374:122:0:-;5476:5;:12;-1:-1:-1;;;;;5466:22:0;;;5476:12;;5466:22;;5374:122::o;5502:134::-;5610:18;;-1:-1:-1;;;;;5600:28:0;;;5610:18;;5600:28;;5502:134::o;2124:231:21:-;-1:-1:-1;;;;;2272:19:21;2179:13;2272:19;;;:11;:19;;;;;:25;;2319:29;;;;;2272:25;;2319:29;;;;;2124:231::o;525:194:18:-;573:11;600:9;;596:117;;-1:-1:-1;639:5:18;596:117;;;-1:-1:-1;692:9:18;;685:3;:16;;596:117;525:194;:::o;3532:109:29:-;-1:-1:-1;;;;;3620:14:29;3587:13;3620:14;;;:6;:14;;;;;;;3532:109::o;849:95:30:-;929:8;;-1:-1:-1;;;;;929:8:30;;849:95::o;1518:90:24:-;1594:7;;-1:-1:-1;;;1594:7:24;;;;;1518:90::o;2752:428:0:-;2863:26;2878:10;2863:14;:26::i;:::-;:67;;;;2893:37;2919:10;2893:25;:37::i;:::-;2855:116;;;;-1:-1:-1;;;2855:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:18;:16;:18::i;:::-;3032:19;3024:47;;;;;-1:-1:-1;;;3024:47:0;;;;;;;;;;;;-1:-1:-1;;;3024:47:0;;;;;;;;;;;;;;;3121:5;:12;3103:70;;-1:-1:-1;;;;;3121:12:0;3135:10;3147:12;3161:11;3103:17;:70::i;782:295:17:-;821:11;937:22;:20;:22::i;:::-;933:138;;-1:-1:-1;989:5:17;933:138;;;1034:26;:24;:26::i;1057:957:0:-;189:8:30;:21;;-1:-1:-1;;;;;;189:21:30;200:10;189:21;;;360:7;348:20;387:13;;;;379:68;;;;-1:-1:-1;;;379:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:5:0;:21;;-1:-1:-1;;;;;1356:21:0;;;-1:-1:-1;;;;;;1356:21:0;;;;;;;1387:18;:33;;;;;;;;;;;;;1459:22;;;1455:126;;1497:31;1519:8;1497:21;:31::i;:::-;1542:28;:26;:28::i;:::-;1621:44;1640:6;1648:5;1655:9;1621:18;:44::i;:::-;1708:37;1729:15;1708:20;:37::i;:::-;1784:15;;:20;1780:87;;1820:36;1847:8;1820:26;:36::i;:::-;1919:88;1931:8;1941:6;1949:12;1963:5;1970:9;1981:15;1998:8;1919:88;;;;-1:-1:-1;;;;;1919:88:0;-1:-1:-1;;;;;1919:88:0;;;;;;-1:-1:-1;;;;;1919:88:0;-1:-1:-1;;;;;1919:88:0;;;;;;-1:-1:-1;;;;;1919:88:0;-1:-1:-1;;;;;1919:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1919:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:957;;;;;;;;:::o;583:91:17:-;660:7;;;583:91::o;2323:423:0:-;2441:20;2450:10;2441:8;:20::i;:::-;:61;;;;2465:37;2491:10;2465:25;:37::i;:::-;2433:104;;;;;-1:-1:-1;;;2433:104:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2433:104:0;;;;;;;;;;;;;;1223:213:17;1269:12;1304:22;:20;:22::i;:::-;1297:3;:29;1293:137;;-1:-1:-1;1349:1:17;1293:137;;;1388:31;1415:3;1388:22;:20;:22::i;:::-;:26;:31;:26;:31;:::i;1292:99:24:-;1375:9;;-1:-1:-1;;;;;1375:9:24;;1292:99::o;2044:273:0:-;2140:20;2149:10;2140:8;:20::i;:::-;:61;;;;2164:37;2190:10;2164:25;:37::i;:::-;2132:104;;;;;-1:-1:-1;;;2132:104:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2132:104:0;;;;;;;;;;;;;;;2274:36;2301:8;2274:26;:36::i;732:111:30:-;788:7;823:12;:10;:12::i;1019:1076:21:-;1197:12;1351:24;1368:6;1351:16;:24::i;:::-;1335:12;:40;;1327:76;;;;;-1:-1:-1;;;1327:76:21;;;;;;;;;;;;-1:-1:-1;;;1327:76:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;1469:19:21;;1453:13;1469:19;;;:11;:19;;;;;:25;;1526:29;;;;;1469:25;;1526:29;;;;;1574:9;:26;;;;;;;;;;1566:60;;;;;-1:-1:-1;;;1566:60:21;;;;;;;;;;;;-1:-1:-1;;;1566:60:21;;;;;;;;;;;;;;;1746:37;1754:5;1761:10;1773:9;1746:7;:37::i;:::-;1739:44;;1847:33;1865:8;1875:4;1847:17;:33::i;:::-;1946:52;1965:6;1973:12;1987:10;1946:18;:52::i;:::-;2036;2044:8;2054:6;2062:10;2074:4;2080:7;2036:52;;;;-1:-1:-1;;;;;2036:52:21;-1:-1:-1;;;;;2036:52:21;;;;;;-1:-1:-1;;;;;2036:52:21;-1:-1:-1;;;;;2036:52:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2036:52:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1076;;;;;;;;;:::o;413:239:24:-;569:9;;-1:-1:-1;;;;;569:9:24;561:52;;;;;-1:-1:-1;;;561:52:24;;;;;;;;;;;;-1:-1:-1;;;561:52:24;;;;;;;;;;;;;;;623:22;636:8;623:12;:22::i;658:218::-;714:19;:17;:19::i;:::-;706:57;;;;;-1:-1:-1;;;706:57:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:9;:22;;-1:-1:-1;;;;;;805:15:24;;;835:34;;;793:1;835:34;;;;;;;;;;;;;;;;;;;;658:218::o;2224:246:29:-;-1:-1:-1;;;;;2368:14:29;;2301:13;2368:14;;;:6;:14;;;;;;2420:43;2375:6;2439:9;2368:14;;2420:10;:43::i;232:458:12:-;290:7;530:6;526:45;;-1:-1:-1;559:1:12;552:8;;526:45;593:5;;;597:1;593;:5;:1;616:5;;;;;:10;608:56;;;;-1:-1:-1;;;608:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:140:4;576:9;289:26;601:43;614:18;627:1;630;614:12;:18::i;:::-;642:1;289:26;634:9;;601:12;:43::i;:::-;:51;;;;;;;519:140;-1:-1:-1;;;519:140:4:o;1313:905:29:-;-1:-1:-1;;;;;1519:14:29;;;;;;:6;:14;;;;;;1503:30;;1495:66;;;;;-1:-1:-1;;;1495:66:29;;;;;;;;;;;;-1:-1:-1;;;1495:66:29;;;;;;;;;;;;;;;1637:1;1622:12;:16;1614:45;;;;;-1:-1:-1;;;1614:45:29;;;;;;;;;;;;-1:-1:-1;;;1614:45:29;;;;;;;;;;;;;;;1757:12;1741;:28;;1733:75;;;;-1:-1:-1;;;1733:75:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:16;1876:30;:12;1893;1876:30;:16;:30;:::i;:::-;-1:-1:-1;;;;;1953:14:29;;;;;;:6;:14;;;;;:25;;;1857:49;-1:-1:-1;2041:18:29;:16;:18::i;:::-;-1:-1:-1;;;;;2034:35:29;;2070:9;2081:12;2034:60;;;;;;;;;;;;;-1:-1:-1;;;;;2034:60:29;-1:-1:-1;;;;;2034:60:29;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2034:60:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2034:60:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2034:60:29;2026:94;;;;;-1:-1:-1;;;2026:94:29;;;;;;;;;;;;-1:-1:-1;;;2026:94:29;;;;;;;;;;;;;;;2158:53;;;-1:-1:-1;;;;;2158:53:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:905;;;;;:::o;853:136:4:-;910:9;981:1;935:43;948:22;961:1;289:26;948:12;:22::i;:::-;976:1;972;:5;;415:139:17;490:7;;451:16;;490;;502:3;490:16;:11;:16;:::i;:::-;479:27;;516:31;538:8;516:21;:31::i;549:758:29:-;-1:-1:-1;;;;;750:14:29;;;;;;:6;:14;;;;;;734:30;;726:66;;;;;-1:-1:-1;;;726:66:29;;;;;;;;;;;;-1:-1:-1;;;726:66:29;;;;;;;;;;;;;;;866:1;852:11;:15;844:43;;;;;-1:-1:-1;;;844:43:29;;;;;;;;;;;;-1:-1:-1;;;844:43:29;;;;;;;;;;;;;;;936:16;955:29;:12;972:11;955:29;:16;:29;:::i;:::-;-1:-1:-1;;;;;1031:14:29;;;;;;:6;:14;;;;;:25;;;936:48;-1:-1:-1;1119:18:29;:16;:18::i;:::-;1112:75;;;-1:-1:-1;;;1112:75:29;;-1:-1:-1;;;;;1112:75:29;;;;;;;1168:4;1112:75;;;;;;;;;;;;:39;;;;;;;:75;;;;;;;;;;;;;;;-1:-1:-1;1112:39:29;:75;;;5:2:-1;;;;30:1;27;20:12;5:2;1112:75:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1112:75:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1112:75:29;1104:109;;;;;-1:-1:-1;;;1104:109:29;;;;;;;;;;;;-1:-1:-1;;;1104:109:29;;;;;;;;;;;;;;;1251:49;;;-1:-1:-1;;;;;1251:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;549:758;;;;;:::o;192:215:24:-;259:9;;-1:-1:-1;;;;;259:21:24;;;:9;;:21;;251:58;;;;;-1:-1:-1;;;251:58:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:9;:20;;-1:-1:-1;;;;;;319:20:24;-1:-1:-1;;;;;319:20:24;;;;;354:46;319:20;380:19;:17;:19::i;:::-;354:46;;;-1:-1:-1;;;;;354:46:24;;;;;;;;;;;;;;;;;;;;;192:215;:::o;882:188::-;939:19;:17;:19::i;:::-;938:20;930:62;;;;;-1:-1:-1;;;930:62:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:7;:14;;-1:-1:-1;;;;1002:14:24;-1:-1:-1;;;1002:14:24;;;;;1031:32;;;-1:-1:-1;;;;;1047:9:24;;;1031:32;;1012:4;1031:32;;;;;;;;;;;;;;;;882:188::o;565:448:21:-;672:13;659:9;:26;;;;;;;;;:56;;;-1:-1:-1;702:13:21;689:9;:26;;;;;;;;;659:56;655:154;;;739:10;;731:67;;;;-1:-1:-1;;;731:67:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;850:19:21;;;;;;:11;:19;;;;;:33;;;893:29;;;;:41;;925:9;;-1:-1:-1;;893:41:21;;;;925:9;893:41;;;;;;;;;;;;;972:34;981:6;989:5;996:9;972:34;;;;-1:-1:-1;;;;;972:34:21;-1:-1:-1;;;;;972:34:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:448;;;:::o;299:110:17:-;354:7;:16;;;385:17;;;;;;;;;;;;;;;;;299:110;:::o;120:97:19:-;189:21;201:8;189:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;189:21:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:97;:::o;1279:179:12:-;1337:7;1369:1;1364;:6;;1356:49;;;;;-1:-1:-1;;;1356:49:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1427:5:12;;;1279:179::o;827:147:16:-;902:41;;;-1:-1:-1;;;902:41:16;;-1:-1:-1;;;;;902:41:16;;;;;;;;;;;;;;304:42;;902:28;;:41;;;;;;;;;;;;;;-1:-1:-1;304:42:16;902:41;;;5:2:-1;;;;30:1;27;20:12;5:2;902:41:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;902:41:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;902:41:16;894:73;;;;;-1:-1:-1;;;894:73:16;;;;;;;;;;;;-1:-1:-1;;;894:73:16;;;;;;;;;;;;;;2476:805:29;-1:-1:-1;;;;;2663:14:29;;;;;;:6;:14;;;;;;2647:30;;2639:66;;;;;-1:-1:-1;;;2639:66:29;;;;;;;;;;;;-1:-1:-1;;;2639:66:29;;;;;;;;;;;;;;;2781:1;2766:12;:16;2758:45;;;;;-1:-1:-1;;;2758:45:29;;;;;;;;;;;;-1:-1:-1;;;2758:45:29;;;;;;;;;;;;;;;2901:12;2885;:28;;2877:75;;;;-1:-1:-1;;;2877:75:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3001:16;3020:30;:12;3037;3020:30;:16;:30;:::i;:::-;-1:-1:-1;;;;;3097:14:29;;;;;;:6;:14;;;;;:25;;;3001:49;-1:-1:-1;3166:27:29;3180:12;3166:13;:27::i;:::-;3231:43;;;-1:-1:-1;;;;;3231:43:29;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:805;;;;:::o;1541:176:12:-;1599:7;1630:5;;;1653:6;;;;1645:46;;;;;-1:-1:-1;;;1645:46:12;;;;;;;;;;;;;;;;;;;;;;;;;;;168:122:18;227:9;:20;;;262:21;;;;;;;;;;;;;;;;;168:122;:::o;471:108:16:-;304:42;-1:-1:-1;;;;;528:17:16;;546:5;528:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;528:24:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;528:24:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;528:24:16;520:52;;;;;-1:-1:-1;;;520:52:16;;;;;;;;;;;;-1:-1:-1;;;520:52:16;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../helpers/openzeppelin-solidity/math/SafeMath.sol\";\nimport \"../helpers/openzeppelin-solidity/token/ERC20/IERC20.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/* Immediately engage with specific buyer\n * - Stake can be increased at any time.\n * - Request to end agreement and recover stake requires cooldown period to complete.\n * - Counterparty can greif the staker at predefined ratio.\n *\n * NOTE:\n * - This top level contract should only perform access control and state transitions\n *\n */\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(address operator, address staker, address counterparty, uint256 ratio, Griefing.RatioType ratioType, uint256 countdownLength, bytes metadata);\n\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    function increaseStake(uint256 currentStake, uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // require agreement is not ended\n        require(!Countdown.isOver(), \"agreement ended\");\n\n        // add stake\n        Staking._addStake(_data.staker, msg.sender, currentStake, amountToAdd);\n    }\n\n    function reward(uint256 currentStake, uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isActiveOperator(msg.sender), \"only counterparty or active operator\");\n\n        // require agreement is not ended\n        require(!Countdown.isOver(), \"agreement ended\");\n\n        // add stake\n        Staking._addStake(_data.staker, msg.sender, currentStake, amountToAdd);\n    }\n\n    function punish(uint256 currentStake, uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isActiveOperator(msg.sender), \"only counterparty or active operator\");\n\n        // require agreement is not ended\n        require(!Countdown.isOver(), \"agreement ended\");\n\n        // execute griefing\n        cost = Griefing._grief(msg.sender, _data.staker, currentStake, punishment, message);\n    }\n\n    function releaseStake(uint256 currentStake, uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isActiveOperator(msg.sender), \"only counterparty or active operator\");\n\n        // release stake back to the staker\n        Staking._takeStake(_data.staker, _data.staker, currentStake, amountToRelease);\n    }\n\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // require countdown is not started\n        require(Deadline.getDeadline() == 0, \"deadline already set\");\n\n        // start countdown\n        deadline = Countdown._start();\n    }\n\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // require deadline is passed\n        require(Deadline.isAfterDeadline(),\"deadline not passed\");\n\n        // retrieve stake\n        amount = Staking._takeFullStake(_data.staker, recipient);\n    }\n\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isActiveOperator(msg.sender), \"only active operator\");\n\n        // transfer operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    function isStaker(address caller) public view returns (bool validity) {\n        validity = (caller == _data.staker);\n    }\n\n    function isCounterparty(address caller) public view returns (bool validity) {\n        validity = (caller == _data.counterparty);\n    }\n}\n"
}
