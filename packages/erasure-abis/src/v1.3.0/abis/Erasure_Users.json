{
  "contractName": "Erasure_Users",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getPaginatedUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610f9b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c8062ce8e3e146100665780630a38178c146100c5578063b5cb15f714610180578063cf5caa121461019e578063f944f4c71461022b578063ffc9896b14610235575b600080fd5b61006e6102f2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100b1578082015181840152602081019050610096565b505050509050019250505060405180910390f35b61017e600480360360208110156100db57600080fd5b81019080803590602001906401000000008111156100f857600080fd5b82018360208201111561010a57600080fd5b8035906020019184600183028401116401000000008311171561012c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610383565b005b610188610528565b6040518082815260200191505060405180910390f35b6101d4600480360360408110156101b457600080fd5b810190808035906020019092919080359060200190929190505050610539565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102175780820151818401526020810190506101fc565b505050509050019250505060405180910390f35b6102336106ca565b005b6102776004803603602081101561024b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b757808201518184015260208101905061029c565b50505050905090810190601f1680156102e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060600060010180548060200260200160405190810160405280929190818152602001828054801561037957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161032f575b5050505050905090565b6103973360006108d590919063ffffffff16565b1561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7573657220616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b61041e3360006109a190919063ffffffff16565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610471929190610d7e565b503373ffffffffffffffffffffffffffffffffffffffff167fb4e474a799db1c21852b730a8ac43394df2133bba1b219242c78954109a980a1826040518080602001828103825283818151815260200191508051906020019080838360005b838110156104eb5780820151818401526020810190506104d0565b50505050905090810190601f1680156105185780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b60006105346000610b3a565b905090565b6060818310610593576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610ec06025913960400191505060405180910390fd5b61059d6000610b3a565b821115610612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f656e6420696e646578206f7574206f662072616e67650000000000000000000081525060200191505060405180910390fd5b60608383036040519080825280602002602001820160405280156106455781602001602082028038833980820191505090505b50905060008490505b838110156106bf5761066a816000610b4b90919063ffffffff16565b828683038151811061067857fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061064e565b508091505092915050565b6106de3360006108d590919063ffffffff16565b610750576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7573657220646f6573206e6f742065786973740000000000000000000000000081525060200191505060405180910390fd5b610764336000610b8f90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107af9190610dfe565b3373ffffffffffffffffffffffffffffffffffffffff167fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d60405160405180910390a2565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b50505050509050919050565b600080836001018054905014156108ef576000905061099b565b8173ffffffffffffffffffffffffffffffffffffffff16836001018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061095657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e986028913960400191505060405180910390fd5b610a3182826108d5565b15610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526043815260200180610ee56043913960600191505060405180910390fd5b6001826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550038260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081600101805490509050919050565b6000826001018281548110610b5c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b610b9982826108d5565b610bee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610f28603f913960400191505060405180910390fd5b6000826001016001610bff85610b3a565b0381548110610c0a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846001018281548110610cd357fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905583600101805480919060019003610d779190610e46565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dbf57805160ff1916838001178555610ded565b82800160010185558215610ded579182015b82811115610dec578251825591602001919060010190610dd1565b5b509050610dfa9190610e72565b5090565b50805460018160011615610100020316600290046000825580601f10610e245750610e43565b601f016020900490600052602060002090810190610e429190610e72565b5b50565b815481835581811115610e6d57818360005260206000209182019101610e6c9190610e72565b5b505050565b610e9491905b80821115610e90576000816000905550600101610e78565b5090565b9056fe556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f74206265203078307374617274496e646578206d757374206265206c657373207468616e20656e64496e646578556e6f726465726564416464726573735365742831303129202d204164647265737320286b65792920616c72656164792065786973747320696e20746865207365742e556e6f7264657265644b65795365742831303229202d204164647265737320286b65792920646f6573206e6f7420657869737420696e20746865207365742ea265627a7a7231582069a9054984b466ba16b995da8f641725b04c64e57b561b6ca791beb49bc0901a64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100615760003560e01c8062ce8e3e146100665780630a38178c146100c5578063b5cb15f714610180578063cf5caa121461019e578063f944f4c71461022b578063ffc9896b14610235575b600080fd5b61006e6102f2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100b1578082015181840152602081019050610096565b505050509050019250505060405180910390f35b61017e600480360360208110156100db57600080fd5b81019080803590602001906401000000008111156100f857600080fd5b82018360208201111561010a57600080fd5b8035906020019184600183028401116401000000008311171561012c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610383565b005b610188610528565b6040518082815260200191505060405180910390f35b6101d4600480360360408110156101b457600080fd5b810190808035906020019092919080359060200190929190505050610539565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102175780820151818401526020810190506101fc565b505050509050019250505060405180910390f35b6102336106ca565b005b6102776004803603602081101561024b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102b757808201518184015260208101905061029c565b50505050905090810190601f1680156102e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060600060010180548060200260200160405190810160405280929190818152602001828054801561037957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161032f575b5050505050905090565b6103973360006108d590919063ffffffff16565b1561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7573657220616c7265616479206578697374730000000000000000000000000081525060200191505060405180910390fd5b61041e3360006109a190919063ffffffff16565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610471929190610d7e565b503373ffffffffffffffffffffffffffffffffffffffff167fb4e474a799db1c21852b730a8ac43394df2133bba1b219242c78954109a980a1826040518080602001828103825283818151815260200191508051906020019080838360005b838110156104eb5780820151818401526020810190506104d0565b50505050905090810190601f1680156105185780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b60006105346000610b3a565b905090565b6060818310610593576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610ec06025913960400191505060405180910390fd5b61059d6000610b3a565b821115610612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f656e6420696e646578206f7574206f662072616e67650000000000000000000081525060200191505060405180910390fd5b60608383036040519080825280602002602001820160405280156106455781602001602082028038833980820191505090505b50905060008490505b838110156106bf5761066a816000610b4b90919063ffffffff16565b828683038151811061067857fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808060010191505061064e565b508091505092915050565b6106de3360006108d590919063ffffffff16565b610750576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f7573657220646f6573206e6f742065786973740000000000000000000000000081525060200191505060405180910390fd5b610764336000610b8f90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107af9190610dfe565b3373ffffffffffffffffffffffffffffffffffffffff167fe9dce8c992623ce791725b21e857e33248d1f190a25b5168313420eebdaae99d60405160405180910390a2565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b50505050509050919050565b600080836001018054905014156108ef576000905061099b565b8173ffffffffffffffffffffffffffffffffffffffff16836001018460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061095657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e986028913960400191505060405180910390fd5b610a3182826108d5565b15610a87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526043815260200180610ee56043913960600191505060405180910390fd5b6001826001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550038260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081600101805490509050919050565b6000826001018281548110610b5c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b610b9982826108d5565b610bee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610f28603f913960400191505060405180910390fd5b6000826001016001610bff85610b3a565b0381548110610c0a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808460000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081846001018281548110610cd357fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905583600101805480919060019003610d779190610e46565b5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dbf57805160ff1916838001178555610ded565b82800160010185558215610ded579182015b82811115610dec578251825591602001919060010190610dd1565b5b509050610dfa9190610e72565b5090565b50805460018160011615610100020316600290046000825580601f10610e245750610e43565b601f016020900490600052602060002090810190610e429190610e72565b5b50565b815481835581811115610e6d57818360005260206000209182019101610e6c9190610e72565b5b505050565b610e9491905b80821115610e90576000816000905550600101610e78565b5090565b9056fe556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f74206265203078307374617274496e646578206d757374206265206c657373207468616e20656e64496e646578556e6f726465726564416464726573735365742831303129202d204164647265737320286b65792920616c72656164792065786973747320696e20746865207365742e556e6f7264657265644b65795365742831303229202d204164647265737320286b65792920646f6573206e6f7420657869737420696e20746865207365742ea265627a7a7231582069a9054984b466ba16b995da8f641725b04c64e57b561b6ca791beb49bc0901a64736f6c634300050d0032",
  "sourceMap": "237:2041:34:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:2041:34;;;;;;;",
  "deployedSourceMap": "237:2041:34:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:2041:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1379:104:34;;;;;;;;;;;;;;;;;585:312;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;585:312:34;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;585:312:34;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;585:312:34;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;585:312:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;585:312:34;;;;;;;;;;;;;;;:::i;:::-;;1489:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1651:625;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1651:625:34;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1651:625:34;;;;;;;;;;;;;;;;;903:327;;;:::i;:::-;;1259:114;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1259:114:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1259:114:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:104;1420:22;1462:6;:14;;1454:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:104;:::o;585:312::-;652:25;666:10;652:6;:13;;:25;;;;:::i;:::-;651:26;643:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:25;746:10;732:6;:13;;:25;;;;:::i;:::-;816:4;792:9;:21;802:10;792:21;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;;873:10;858:32;;;885:4;858:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;858:32:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;585:312;:::o;1489:99::-;1534:13;1567:14;:6;:12;:14::i;:::-;1559:22;;1489:99;:::o;1651:625::-;1737:22;1792:8;1779:10;:21;1771:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:14;:6;:12;:14::i;:::-;1860:8;:26;;1852:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:22;2020:10;2009:8;:21;1995:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1995:36:34;;;;1970:61;;2097:9;2109:10;2097:22;;2092:117;2125:8;2121:1;:12;2092:117;;;2178:20;2196:1;2178:6;:17;;:20;;;;:::i;:::-;2154:5;2164:10;2160:1;:14;2154:21;;;;;;;;;;;;;:44;;;;;;;;;;;2135:3;;;;;;;2092:117;;;;2264:5;2256:13;;1651:625;;;;;:::o;903:327::-;988:25;1002:10;988:6;:13;;:25;;;;:::i;:::-;980:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1071:25;1085:10;1071:6;:13;;:25;;;;:::i;:::-;1141:9;:21;1151:10;1141:21;;;;;;;;;;;;;;;;1134:28;;;;:::i;:::-;1212:10;1200:23;;;;;;;;;;;;903:327::o;1259:114::-;1315:17;1351:9;:15;1361:4;1351:15;;;;;;;;;;;;;;;1344:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:114;;;:::o;1044:192:7:-;1113:4;1155:1;1132:4;:12;;:19;;;;:24;1129:41;;;1165:5;1158:12;;;;1129:41;1226:3;1187:42;;:4;:12;;1200:4;:16;;:21;1217:3;1200:21;;;;;;;;;;;;;;;;1187:35;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;1180:49;;1044:192;;;;;:::o;169:309::-;258:1;243:17;;:3;:17;;;;235:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:17;331:4;337:3;324:6;:17::i;:::-;323:18;315:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:1;447:4;:12;;465:3;447:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;447:22:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;423:4;:16;;:21;440:3;423:21;;;;;;;;;;;;;;;:48;;;;169:309;;:::o;933:105::-;988:4;1011;:12;;:19;;;;1004:27;;933:105;;;:::o;1242:124::-;1314:7;1340:4;:12;;1353:5;1340:19;;;;;;;;;;;;;;;;;;;;;;;;;1333:26;;1242:124;;;;:::o;484:443::-;558:17;565:4;571:3;558:6;:17::i;:::-;550:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:17;673:4;:12;;698:1;686:11;692:4;686:5;:11::i;:::-;:13;673:27;;;;;;;;;;;;;;;;;;;;;;;;;653:47;;710:17;730:4;:16;;:21;747:3;730:21;;;;;;;;;;;;;;;;710:41;;791:12;761:4;:16;;:27;778:9;761:27;;;;;;;;;;;;;;;:42;;;;842:9;813:4;:12;;826;813:26;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;868:4;:16;;:21;885:3;868:21;;;;;;;;;;;;;;;861:28;;;899:4;:12;;:21;;;;;;;;;;;;:::i;:::-;;484:443;;;;:::o;237:2041:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../helpers/HitchensUnorderedAddressSetLib.sol\";\n\n\n/// @title Erasure_Users\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\ncontract Erasure_Users {\n\n    using HitchensUnorderedAddressSetLib for HitchensUnorderedAddressSetLib.Set;\n    HitchensUnorderedAddressSetLib.Set private _users;\n\n    mapping (address => bytes) private _metadata;\n\n    event UserRegistered(address indexed user, bytes data);\n    event UserRemoved(address indexed user);\n\n    // state functions\n\n    function registerUser(bytes memory data) public {\n        require(!_users.exists(msg.sender), \"user already exists\");\n\n        // add user\n        _users.insert(msg.sender);\n\n        // set metadata\n        _metadata[msg.sender] = data;\n\n        // emit event\n        emit UserRegistered(msg.sender, data);\n    }\n\n    function removeUser() public {\n        // require user is registered\n        require(_users.exists(msg.sender), \"user does not exist\");\n\n        // remove user\n        _users.remove(msg.sender);\n\n        // delete metadata\n        delete _metadata[msg.sender];\n\n        // emit event\n        emit UserRemoved(msg.sender);\n    }\n\n    // view functions\n\n    function getUserData(address user) public view returns (bytes memory data) {\n        data = _metadata[user];\n    }\n\n    function getUsers() public view returns (address[] memory users) {\n        users = _users.keyList;\n    }\n\n    function getUserCount() public view returns (uint256 count) {\n        count = _users.count();\n    }\n\n    // Note: startIndex is inclusive, endIndex exclusive\n    function getPaginatedUsers(uint256 startIndex, uint256 endIndex) public view returns (address[] memory users) {\n        require(startIndex < endIndex, \"startIndex must be less than endIndex\");\n        require(endIndex <= _users.count(), \"end index out of range\");\n\n        // initialize fixed size memory array\n        address[] memory range = new address[](endIndex - startIndex);\n\n        // Populate array with addresses in range\n        for (uint256 i = startIndex; i < endIndex; i++) {\n            range[i - startIndex] = _users.keyAtIndex(i);\n        }\n\n        // return array of addresses\n        users = range;\n    }\n}\n"
  }