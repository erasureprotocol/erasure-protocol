{
  "contractName": "Feed",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "HashSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "proofHash",
          "type": "bytes32"
        }
      ],
      "name": "submitHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "depositStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amountToRemove",
          "type": "uint256"
        }
      ],
      "name": "withdrawStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80637bbe0db7116100715780637bbe0db71461023f57806388cc58e414610284578063c1159d5c146102ce578063d1f578941461031d578063e7f43c68146103f8578063ee57e36f14610442576100b4565b806308891a32146100b95780630b78c7b4146100e75780630ee2cb101461013657806329605e77146101805780632ab6f8db146101c45780635ad3f918146101ce575b600080fd5b6100e5600480360360208110156100cf57600080fd5b81019080803590602001909291905050506104fd565b005b610120600480360360408110156100fd57600080fd5b81019080803560ff16906020019092919080359060200190929190505050610594565b6040518082815260200191505060405180910390f35b61013e610643565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c26004803603602081101561019657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610724565b005b6101cc6107ab565b005b6101fd600480360360208110156101e457600080fd5b81019080803560ff169060200190929190505050610830565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026e6004803603602081101561025557600080fd5b81019080803560ff169060200190929190505050610897565b6040518082815260200191505060405180910390f35b61028c6108b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610307600480360360408110156102e457600080fd5b81019080803560ff169060200190929190803590602001909291905050506108db565b6040518082815260200191505060405180910390f35b6103f66004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561037057600080fd5b82018360208201111561038257600080fd5b803590602001918460018302840111640100000000831117156103a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610983565b005b610400610b4f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104fb6004803603602081101561045857600080fd5b810190808035906020019064010000000081111561047557600080fd5b82018360208201111561048757600080fd5b803590602001918460018302840111640100000000831117156104a957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b79565b005b61050633610c10565b80610516575061051533610c4f565b5b610588576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6f6e6c79206f70657261746f72206f722063726561746f72000000000000000081525060200191505060405180910390fd5b61059181610ca9565b50565b600061059f33610c10565b806105af57506105ae33610c4f565b5b610621576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6f6e6c79206f70657261746f72206f722063726561746f72000000000000000081525060200191505060405180910390fd5b61063b8361062d610643565b610635610643565b85610ce3565b905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d602081101561070e57600080fd5b8101908080519060200190929190505050905090565b61072d33610c4f565b61079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b6107a881610d08565b50565b6107b433610c4f565b610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61082e610f17565b565b600060028081111561083e57fe5b82600281111561084a57fe5b141561085f57610858611084565b9050610892565b6001600281111561086c57fe5b82600281111561087857fe5b141561088d576108866110a0565b9050610892565b600090505b919050565b60006108aa826108a5610643565b6110bc565b9050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006108e633610c10565b806108f657506108f533610c4f565b5b610968576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6f6e6c79206f70657261746f72206f722063726561746f72000000000000000081525060200191505060405180910390fd5b61097b83610974610643565b3385611121565b905092915050565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610a29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611cbc602a913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a6757610a6683611147565b5b6000825114610a7a57610a7982611355565b5b7f3cb5fe4064ec54325ad5ab0ee054344095de51ed278a56b0e593a75679013b8a8383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b0f578082015181840152602081019050610af4565b50505050905090810190601f168015610b3c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b8233610c10565b80610b925750610b9133610c4f565b5b610c04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6f6e6c79206f70657261746f72206f722063726561746f72000000000000000081525060200191505060405180910390fd5b610c0d81611355565b50565b6000610c1a610643565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b7f2f4d8d4a9e5c5541ce76256105ce4674c5f34e1cef22baf7e97eefb648943853816040518082815260200191505060405180910390a150565b6000610cf08585846113f4565b9050610cfd8584846115d2565b809050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dcd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610fdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b60008060008460028111156110cd57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061112e858584611790565b905061113c858430856118f3565b809050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461120b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b838110156113b757808201518184015260208101905061139c565b50505050905090810190601f1680156113e45780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b60008060008086600281111561140657fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156114ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6114dd8382611ae690919063ffffffff16565b9150816000808760028111156114ef57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f357858585856040518085600281111561157357fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b826115dc81611b30565b61164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61165784610830565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156116dd57600080fd5b505af11580156116f1573d6000803e3d6000fd5b505050506040513d602081101561170757600080fd5b810190808051906020019092919050505061178a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b60006117ff826000808760028111156117a557fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b7390919063ffffffff16565b90508060008086600281111561181157fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561189557fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b836118fd81611b30565b61196f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61197885610830565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611a3257600080fd5b505af1158015611a46573d6000803e3d6000fd5b505050506040513d6020811015611a5c57600080fd5b8101908080519060200190929190505050611adf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000611b2883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611bfb565b905092915050565b600060016002811115611b3f57fe5b826002811115611b4b57fe5b1480611b6c5750600280811115611b5e57fe5b826002811115611b6a57fe5b145b9050919050565b600080828401905083811015611bf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000838311158290611ca8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c6d578082015181840152602081019050611c52565b50505050905090810190601f168015611c9a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe6d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72a265627a7a723158200e637c575b8814b4694ca0f232ed1c4d87c1a3f829cb0e2abdbb800642af123364736f6c634300050d0032",
  "sourceMap": "484:4577:29:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:4577:29;;;;;;;",
  "deployedSourceMap": "484:4577:29:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:4577:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1567:274:29;;;;;;;;;;;;;;;;;:::i;:::-;;3019:421;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3019:421:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1135:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4110:228:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4110:228:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;4477:204;;;:::i;:::-;;555:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;555:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4901:157:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4901:157:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1771:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2323:397:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2323:397:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;886:440;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;886:440:29;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;886:440:29;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;886:440:29;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;886:440:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;886:440:29;;;;;;;;;;;;;;;:::i;:::-;;1455:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3626:277:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3626:277:29;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3626:277:29;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3626:277:29;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3626:277:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3626:277:29;;;;;;;;;;;;;;;:::i;:::-;;1567:274;1667:30;1686:10;1667:18;:30::i;:::-;:65;;;;1701:31;1721:10;1701:19;:31::i;:::-;1667:65;1659:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:34;1824:9;1800:23;:34::i;:::-;1567:274;:::o;3019:421::-;3111:16;3183:30;3202:10;3183:18;:30::i;:::-;:65;;;;3217:31;3237:10;3217:19;:31::i;:::-;3183:65;3175:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3344:89;3363:7;3372:21;:19;:21::i;:::-;3395;:19;:21::i;:::-;3418:14;3344:18;:89::i;:::-;3337:96;;3019:421;;;;:::o;1135:229:24:-;1178:15;1314:8;;;;;;;;;;;1305:37;;;1351:4;1305:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1305:52:24;;;;;;;;;;;;;;;;1298:59;;1135:229;:::o;4110:228:29:-;4206:31;4226:10;4206:19;:31::i;:::-;4198:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4295:36;4322:8;4295:26;:36::i;:::-;4110:228;:::o;4477:204::-;4557:31;4577:10;4557:19;:31::i;:::-;4549:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4646:28;:26;:28::i;:::-;4477:204::o;555:280:25:-;617:20;664:10;653:21;;;;;;;;:7;:21;;;;;;;;;649:71;;;695:25;:23;:25::i;:::-;688:32;;;;649:71;745:10;734:21;;;;;;;;:7;:21;;;;;;;;;730:71;;;776:25;:23;:25::i;:::-;769:32;;;;730:71;826:1;811:17;;555:280;;;;:::o;4901:157:29:-;4969:13;5001:50;5020:7;5029:21;:19;:21::i;:::-;5001:18;:50::i;:::-;4994:57;;4901:157;;;:::o;1771:92:24:-;1814:15;1848:8;;;;;;;;;;;1841:15;;1771:92;:::o;2323:397:29:-;2411:16;2483:30;2502:10;2483:18;:30::i;:::-;:65;;;;2517:31;2537:10;2517:19;:31::i;:::-;2483:65;2475:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:74;2657:7;2666:21;:19;:21::i;:::-;2689:10;2701:11;2639:17;:74::i;:::-;2632:81;;2323:397;;;;:::o;886:440::-;601:10:24;590:8;;:21;;;;;;;;;;;;;;;;;;703:15;763:7;751:20;739:32;;802:1;790:8;:13;;;782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:1:29;1035:22;;:8;:22;;;1031:84;;1073:31;1095:8;1073:21;:31::i;:::-;1031:84;1172:1;1153:8;:15;:20;1149:87;;1189:36;1216:8;1189:26;:36::i;:::-;1149:87;1288:31;1300:8;1310;1288:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1288:31:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:440;;;:::o;1455:95:18:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;3626:277:29:-;3731:30;3750:10;3731:18;:30::i;:::-;:65;;;;3765:31;3785:10;3765:19;:31::i;:::-;3731:65;3723:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:36;3887:8;3860:26;:36::i;:::-;3626:277;:::o;1533:121:24:-;1591:13;1634:12;:10;:12::i;:::-;1624:22;;:6;:22;;;1616:31;;1533:121;;;:::o;1556:111:18:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;270:107:19:-;351:19;365:4;351:19;;;;;;;;;;;;;;;;;;270:107;:::o;2153:408:23:-;2277:16;2342:55;2367:7;2376:6;2384:12;2342:24;:55::i;:::-;2331:66;;2445:56;2468:7;2477:9;2488:12;2445:22;:56::i;:::-;2546:8;2539:15;;2153:408;;;;;;:::o;725:410:18:-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;2880:99:9:-;2930:13;526:42;2955:17;;2880:99;:::o;1501::10:-;1551:13;565:42;1576:17;;1501:99;:::o;3708:159:13:-;3794:15;3828:8;:26;3845:7;3837:16;;;;;;;;3828:26;;;;;;;;;;;:32;3855:4;3828:32;;;;;;;;;;;;;;;;3821:39;;3708:159;;;;:::o;1210:417:23:-;1329:16;1394:54;1419:7;1428:6;1436:11;1394:24;:54::i;:::-;1383:65;;1496:71;1523:7;1532:6;1548:4;1555:11;1496:26;:71::i;:::-;1612:8;1605:15;;1210:417;;;;;;:::o;302::18:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;418:97:14:-;487:21;499:8;487:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;487:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:97;:::o;2071:694:13:-;2182:18;2243:22;2268:8;:26;2285:7;2277:16;;;;;;;;2268:26;;;;;;;;;;;:32;2295:4;2268:32;;;;;;;;;;;;;;;;2243:57;;2376:14;2358;:32;;2350:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:34;2508:14;2489;:18;;:34;;;;:::i;:::-;2476:47;;2605:10;2570:8;:26;2587:7;2579:16;;;;;;;;2570:26;;;;;;;;;;;:32;2597:4;2570:32;;;;;;;;;;;;;;;:45;;;;2653:59;2670:7;2679:4;2685:14;2701:10;2653:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:10;2741:17;;;2071:694;;;;;:::o;1498:200:25:-;1586:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:24;1636:7;1620:15;:24::i;:::-;1613:41;;;1655:2;1659:5;1613:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1613:52:25;;;;;;;;;;;;;;;;1605:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:200;;;;:::o;1228:479:13:-;1336:18;1419:49;1456:11;1419:8;:26;1436:7;1428:16;;;;;;;;1419:26;;;;;;;;;;;:32;1446:4;1419:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1406:62;;1550:10;1515:8;:26;1532:7;1524:16;;;;;;;;1515:26;;;;;;;;;;;:32;1542:4;1515:32;;;;;;;;;;;;;;;:45;;;;1598:56;1615:7;1624:4;1630:11;1643:10;1598:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:10;1683:17;;1228:479;;;;;:::o;1939:228:25:-;2045:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:24;2095:7;2079:15;:24::i;:::-;2072:45;;;2118:4;2124:2;2128:5;2072:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2072:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:62:25;;;;;;;;;;;;;;;;2064:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:228;;;;;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1156:148:25:-;1219:13;1262:10;1251:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1287:10;1276:21;;;;;;;;:7;:21;;;;;;;;;1251:46;1244:53;;1156:148;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\nimport \"../modules/Staking.sol\";\nimport \"../modules/ProofHashes.sol\";\n\n\n/// @title Feed\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @notice A Feed allows for the creator to build a track record of timestamped submissions and deposit a stake to signal legitimacy.\ncontract Feed is Staking, ProofHashes, Operated, EventMetadata, Template {\n\n    event Initialized(address operator, bytes metadata);\n\n    /// @notice Constructor\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator Address of the operator that overrides access control\n    /// @param metadata Data (any format) to emit as event on initialization\n    function initialize(\n        address operator,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, metadata);\n    }\n\n    // state functions\n\n    /// @notice Submit proofhash to add to feed\n    /// @dev Access Control: creator OR operator\n    ///      State Machine: anytime\n    /// @param proofHash Proofhash (bytes32) sha256 hash of timestampled data\n    function submitHash(bytes32 proofHash) public {\n        // only operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isOperator(msg.sender), \"only operator or creator\");\n\n        // submit proofHash\n        ProofHashes._submitHash(proofHash);\n    }\n\n    /// @notice Deposit one of the supported ERC20 token.\n    ///         - This deposit can be withdrawn at any time by the owner of the feed.\n    ///         - This requires the caller to do ERC20 approval for this contract for `amountToAdd`.\n    /// @dev Access Control: creator OR operator\n    ///      State Machine: anytime\n    /// @param tokenID TokenManager.Tokens id of the ERC20 token.\n    /// @param amountToAdd uint256 amount of ERC20 tokens (18 decimals) to add.\n    function depositStake(TokenManager.Tokens tokenID, uint256 amountToAdd) public returns (uint256 newStake) {\n        // only operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isOperator(msg.sender), \"only operator or creator\");\n\n        // transfer and add tokens to stake\n        return Staking._addStake(tokenID, Template.getCreator(), msg.sender, amountToAdd);\n    }\n\n    /// @notice Withdraw one of the supported ERC20 token.\n    /// @dev Access Control: creator OR operator\n    ///      State Machine: anytime\n    /// @param tokenID TokenManager.Tokens id of the ERC20 token.\n    /// @param amountToRemove uint256 amount of ERC20 tokens (18 decimals) to add.\n    function withdrawStake(TokenManager.Tokens tokenID, uint256 amountToRemove) public returns (uint256 newStake) {\n        // only operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isOperator(msg.sender), \"only operator or creator\");\n\n        // transfer and remove tokens from stake\n        return Staking._takeStake(tokenID, Template.getCreator(), Template.getCreator(), amountToRemove);\n    }\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: creator OR operator\n    ///      State Machine: anytime\n    /// @param metadata Data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // only operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isOperator(msg.sender), \"only operator or creator\");\n\n        // set metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator Address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    /// @notice Get the current stake for a given ERC20 token.\n    /// @dev Access Control: creator OR operator\n    ///      State Machine: anytime\n    /// @param tokenID TokenManager.Tokens id of the ERC20 token.\n    function getStake(TokenManager.Tokens tokenID) public view returns (uint256 stake) {\n        return Deposit.getDeposit(tokenID, Template.getCreator());\n    }\n\n}\n"
  }