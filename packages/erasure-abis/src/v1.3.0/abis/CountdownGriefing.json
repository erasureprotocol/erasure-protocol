{
  "contractName": "CountdownGriefing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "punisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Griefed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "RatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "name": "getPunishment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToAdd",
          "type": "uint256"
        }
      ],
      "name": "reward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punishment",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "punish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToRelease",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "startCountdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retrieveStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCounterparty",
      "outputs": [
        {
          "internalType": "address",
          "name": "counterparty",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "validity",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAgreementStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefing.AgreementStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50613fcf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063728fa494116100f9578063dac6270d11610097578063e7f43c6811610071578063e7f43c6814610923578063ee57e36f1461096d578063eedad66b14610a28578063fc0e3d9014610a56576101c4565b8063dac6270d146108b7578063de2229fe146108d5578063e3323aba14610901576101c4565b806388cc58e4116100d357806388cc58e41461074857806390bfe0bf14610792578063a9fb763c1461086b578063be1c766b14610899576101c4565b8063728fa4941461064757806372b45a5514610691578063754b2707146106db576101c4565b806341ce2878116101665780635ad3f918116101405780635ad3f918146105415780635baeb806146105b25780635e5365c11461060b5780635f8d96de14610629576101c4565b806341ce28781461046257806345f54485146104ba578063465b414e146104e8576101c4565b806319fbb48e116101a257806319fbb48e1461038957806321df0da7146103b557806329605e77146104145780632ab6f8db14610458576101c4565b80630778217a146101c95780630ee2cb10146103135780631723537d1461035d575b600080fd5b61031160048036036101008110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460018302840111640100000000831117156102bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a74565b005b61031b610d87565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610365610e68565b6040518082600281111561037557fe5b60ff16815260200191505060405180910390f35b610391610e9e565b604051808260038111156103a157fe5b60ff16815260200191505060405180910390f35b6103bd610f17565b604051808360028111156103cd57fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6104566004803603602081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f5c565b005b610460610fe3565b005b6104a46004803603602081101561047857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611068565b6040518082815260200191505060405180910390f35b6104e6600480360360208110156104d057600080fd5b81019080803590602001909291905050506111b4565b005b61052b600480360360608110156104fe57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611282565b6040518082815260200191505060405180910390f35b6105706004803603602081101561055757600080fd5b81019080803560ff16906020019092919050505061136d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105f5600480360360608110156105c857600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506113d4565b6040518082815260200191505060405180910390f35b610613611507565b6040518082815260200191505060405180910390f35b61063161161b565b6040518082815260200191505060405180910390f35b61064f611624565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610699611651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071d600480360360208110156106f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061167e565b6040518083815260200182600281111561073357fe5b60ff1681526020019250505060405180910390f35b61075061171d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610855600480360360408110156107a857600080fd5b8101908080359060200190929190803590602001906401000000008111156107cf57600080fd5b8201836020820111156107e157600080fd5b8035906020019184600183028401116401000000008311171561080357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611747565b6040518082815260200191505060405180910390f35b6108976004803603602081101561088157600080fd5b8101908080359060200190929190505050611888565b005b6108a16119d1565b6040518082815260200191505060405180910390f35b6108bf6119db565b6040518082815260200191505060405180910390f35b6108dd611a0b565b604051808260028111156108ed57fe5b60ff16815260200191505060405180910390f35b610909611a3b565b604051808215151515815260200191505060405180910390f35b61092b611a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a266004803603602081101561098357600080fd5b81019080803590602001906401000000008111156109a057600080fd5b8201836020820111156109b257600080fd5b803590602001918460018302840111640100000000831117156109d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a7c565b005b610a5460048036036020811015610a3e57600080fd5b8101908080359060200190929190505050611b03565b005b610a5e611c4c565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613f24602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610be057610bdf89611caf565b5b610bec88878787611ebd565b610bf58361217c565b6000825114610c0857610c07826121bd565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610cd757fe5b60ff168152602001858152602001846002811115610cf157fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610d3b578082015181840152602081019050610d20565b50505050905090810190601f168015610d685780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e2857600080fd5b505afa158015610e3c573d6000803e3d6000fd5b505050506040513d6020811015610e5257600080fd5b8101908080519060200190929190505050905090565b6000610e7261225c565b15610e805760029050610e9b565b610e88612283565b15610e965760019050610e9b565b600090505b90565b6000806001541415610eb35760009050610f14565b60006002811115610ec057fe5b610ec8611a0b565b6002811115610ed357fe5b1415610ee25760019050610f14565b600280811115610eee57fe5b610ef6611a0b565b6002811115610f0157fe5b14610f0f5760029050610f14565b600390505b90565b600080610f48600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166122ab565b915081610f548361136d565b915091509091565b610f6533612304565b610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610fe08161235e565b50565b610fec33612304565b61105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61106661256d565b565b6000611073336126da565b80611083575061108233612304565b5b6110f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6110fd612719565b61116f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111ac6111a5826122ab565b8285612740565b915050919050565b6111bd33612767565b806111cd57506111cc33612304565b5b61123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061127d611275826122ab565b8283856127a6565b505050565b600060028081111561129057fe5b82600281111561129c57fe5b14156112cd576012600a0a6112be6112b8856012600a0a6127cb565b86612851565b816112c557fe5b049050611366565b600160028111156112da57fe5b8260028111156112e657fe5b14156112f55760009050611366565b6000600281111561130257fe5b82600281111561130e57fe5b1415611365576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f4e6021913960400191505060405180910390fd5b5b9392505050565b600060028081111561137b57fe5b82600281111561138757fe5b141561139c57611395612889565b90506113cf565b600160028111156113a957fe5b8260028111156113b557fe5b14156113ca576113c36128a5565b90506113cf565b600090505b919050565b60006002808111156113e257fe5b8260028111156113ee57fe5b141561141f576012600a0a61141061140a856012600a0a6127cb565b866128c1565b8161141757fe5b049050611500565b6001600281111561142c57fe5b82600281111561143857fe5b141561148f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613ee26021913960400191505060405180910390fd5b6000600281111561149c57fe5b8260028111156114a857fe5b14156114ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f4e6021913960400191505060405180910390fd5b5b9392505050565b6000611512336126da565b80611522575061152133612304565b5b611594576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b61159c6128f5565b61160e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b61161661291c565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061175233612767565b80611762575061176133612304565b5b6117d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6117dc612719565b1561184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61188033600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612944565b905092915050565b61189133612767565b806118a157506118a033612304565b5b611913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61191b612719565b1561198e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506119cc6119c4826122ab565b823385612c07565b505050565b6000600154905090565b6000426000541115611a03576119fc42600054612c2d90919063ffffffff16565b9050611a08565b600090505b90565b6000806000541415611a205760009050611a38565b426000541115611a335760019050611a38565b600290505b90565b600080611a46611c4c565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8533612304565b611af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611b00816121bd565b50565b611b0c336126da565b80611b1c5750611b1b33612304565b5b611b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611b96612719565b15611c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611c47611c3f826122ab565b823385612c07565b505050565b6000611caa611c7f600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166122ab565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612c77565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611eca57fe5b816002811115611ed657fe5b1480611ef8575060016002811115611eea57fe5b816002811115611ef657fe5b145b15611f575760008214611f56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613f6f602c913960400191505060405180910390fd5b5b611f6083612cdd565b611fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561203057fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156120da57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561214657fe5b60ff16815260200183815260200182600281111561216057fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561221f578082015181840152602081019050612204565b50505050905090810190601f16801561224c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561226a57fe5b612272610e9e565b600381111561227d57fe5b14905090565b60006002600381111561229257fe5b61229a610e9e565b60038111156122a557fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612423576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126e4611651565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561272757fe5b61272f610e68565b600281111561273a57fe5b14905090565b60008061274d8585612c77565b905061275b858585846127a6565b50809150509392505050565b6000612771611624565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006127b3858584612d20565b90506127c0858484612f00565b809050949350505050565b6000808314156127de576000905061284b565b60008284029050828482816127ef57fe5b0414612846576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f036021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61287961286585856127cb565b60026012600a0a8161287357fe5b046130be565b8161288057fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000816128e56128d5856012600a0a6127cb565b600285816128df57fe5b046130be565b816128ec57fe5b04905092915050565b600080600281111561290357fe5b61290b610e68565b600281111561291657fe5b14905090565b6000612933426001546130be90919063ffffffff16565b905061293e81613146565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612a4157fe5b826002811115612a4d57fe5b1415612ac1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612acc838784611282565b9350612ad9818986613187565b612ae4818888613261565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bbb578082015181840152602081019050612ba0565b50505050905090810190601f168015612be85780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612c14858584613307565b9050612c228584308561346c565b809050949350505050565b6000612c6f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061365f565b905092915050565b600060026000846002811115612c8957fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612cec57fe5b826002811115612cf857fe5b1480612d195750600280811115612d0b57fe5b826002811115612d1757fe5b145b9050919050565b60008060026000866002811115612d3357fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612e0a8382612c2d90919063ffffffff16565b91508160026000876002811115612e1d57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ea157fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b82612f0a81612cdd565b612f7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612f858461136d565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561300b57600080fd5b505af115801561301f573d6000803e3d6000fd5b505050506040513d602081101561303557600080fd5b81019080805190602001909291905050506130b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b60008082840190508381101561313c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261319181612cdd565b613203576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561320f57fe5b84600281111561321b57fe5b14156132305761322b838361371f565b61325b565b6001600281111561323d57fe5b84600281111561324957fe5b141561325a576132598383613837565b5b5b50505050565b60008061326f858585612d20565b905061327b8584613983565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156132af57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000613377826002600087600281111561331d57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130be90919063ffffffff16565b9050806002600086600281111561338a57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561340e57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361347681612cdd565b6134e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6134f18561136d565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156135ab57600080fd5b505af11580156135bf573d6000803e3d6000fd5b505050506040513d60208110156135d557600080fd5b8101908080519060200190929190505050613658576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600083831115829061370c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136d15780820151818401526020810190506136b6565b50505050905090810190601f1680156136fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156137ee57600080fd5b505af1158015613802573d6000803e3d6000fd5b505050506040513d602081101561381857600080fd5b81019080805190602001909291905050505061383381613a5a565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156138d257600080fd5b505af11580156138e6573d6000803e3d6000fd5b505050506040513d60208110156138fc57600080fd5b810190808051906020019092919050505061397f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161398d81612cdd565b6139ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613a0b57fe5b836002811115613a1757fe5b1415613a2b57613a2682613a5a565b613a55565b60016002811115613a3857fe5b836002811115613a4457fe5b1415613a5457613a5382613c69565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613b0957600080fd5b505af1158015613b1d573d6000803e3d6000fd5b505050506040513d6020811015613b3357600080fd5b8101908080519060200190929190505050506000819050600080613b5683613d80565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613b9d6128a5565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613c1b57600080fd5b505af1158015613c2f573d6000803e3d6000fd5b505050506040513d6020811015613c4557600080fd5b81019080805190602001909291905050509050613c6181613c69565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613cd057600080fd5b505af1158015613ce4573d6000803e3d6000fd5b505050506040513d6020811015613cfa57600080fd5b8101908080519060200190929190505050613d7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613de857600080fd5b505afa158015613dfc573d6000803e3d6000fd5b505050506040513d6020811015613e1257600080fd5b81019080805190602001909291905050509050613e2d613ec5565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613e7d57600080fd5b505afa158015613e91573d6000803e3d6000fd5b505050506040513d6020811015613ea757600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158207043d8d7946fb85e21c348a21f97d835ed1416b1d8c25e6dd2743a22d1d0e9e264736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063728fa494116100f9578063dac6270d11610097578063e7f43c6811610071578063e7f43c6814610923578063ee57e36f1461096d578063eedad66b14610a28578063fc0e3d9014610a56576101c4565b8063dac6270d146108b7578063de2229fe146108d5578063e3323aba14610901576101c4565b806388cc58e4116100d357806388cc58e41461074857806390bfe0bf14610792578063a9fb763c1461086b578063be1c766b14610899576101c4565b8063728fa4941461064757806372b45a5514610691578063754b2707146106db576101c4565b806341ce2878116101665780635ad3f918116101405780635ad3f918146105415780635baeb806146105b25780635e5365c11461060b5780635f8d96de14610629576101c4565b806341ce28781461046257806345f54485146104ba578063465b414e146104e8576101c4565b806319fbb48e116101a257806319fbb48e1461038957806321df0da7146103b557806329605e77146104145780632ab6f8db14610458576101c4565b80630778217a146101c95780630ee2cb10146103135780631723537d1461035d575b600080fd5b61031160048036036101008110156101e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019064010000000081111561028b57600080fd5b82018360208201111561029d57600080fd5b803590602001918460018302840111640100000000831117156102bf57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a74565b005b61031b610d87565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610365610e68565b6040518082600281111561037557fe5b60ff16815260200191505060405180910390f35b610391610e9e565b604051808260038111156103a157fe5b60ff16815260200191505060405180910390f35b6103bd610f17565b604051808360028111156103cd57fe5b60ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6104566004803603602081101561042a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f5c565b005b610460610fe3565b005b6104a46004803603602081101561047857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611068565b6040518082815260200191505060405180910390f35b6104e6600480360360208110156104d057600080fd5b81019080803590602001909291905050506111b4565b005b61052b600480360360608110156104fe57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190505050611282565b6040518082815260200191505060405180910390f35b6105706004803603602081101561055757600080fd5b81019080803560ff16906020019092919050505061136d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105f5600480360360608110156105c857600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506113d4565b6040518082815260200191505060405180910390f35b610613611507565b6040518082815260200191505060405180910390f35b61063161161b565b6040518082815260200191505060405180910390f35b61064f611624565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610699611651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61071d600480360360208110156106f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061167e565b6040518083815260200182600281111561073357fe5b60ff1681526020019250505060405180910390f35b61075061171d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610855600480360360408110156107a857600080fd5b8101908080359060200190929190803590602001906401000000008111156107cf57600080fd5b8201836020820111156107e157600080fd5b8035906020019184600183028401116401000000008311171561080357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611747565b6040518082815260200191505060405180910390f35b6108976004803603602081101561088157600080fd5b8101908080359060200190929190505050611888565b005b6108a16119d1565b6040518082815260200191505060405180910390f35b6108bf6119db565b6040518082815260200191505060405180910390f35b6108dd611a0b565b604051808260028111156108ed57fe5b60ff16815260200191505060405180910390f35b610909611a3b565b604051808215151515815260200191505060405180910390f35b61092b611a52565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a266004803603602081101561098357600080fd5b81019080803590602001906401000000008111156109a057600080fd5b8201836020820111156109b257600080fd5b803590602001918460018302840111640100000000831117156109d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a7c565b005b610a5460048036036020811015610a3e57600080fd5b8101908080359060200190929190505050611b03565b005b610a5e611c4c565b6040518082815260200191505060405180910390f35b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff1614610b1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613f24602a913960400191505060405180910390fd5b87600660000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600660010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614610be057610bdf89611caf565b5b610bec88878787611ebd565b610bf58361217c565b6000825114610c0857610c07826121bd565b5b7f878674c93796807586e02f6cd04199c2f583519ae7050b1e98d002b620a870d98989898989898989604051808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866002811115610cd757fe5b60ff168152602001858152602001846002811115610cf157fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610d3b578082015181840152602081019050610d20565b50505050905090810190601f168015610d685780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390a1505050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e2857600080fd5b505afa158015610e3c573d6000803e3d6000fd5b505050506040513d6020811015610e5257600080fd5b8101908080519060200190929190505050905090565b6000610e7261225c565b15610e805760029050610e9b565b610e88612283565b15610e965760019050610e9b565b600090505b90565b6000806001541415610eb35760009050610f14565b60006002811115610ec057fe5b610ec8611a0b565b6002811115610ed357fe5b1415610ee25760019050610f14565b600280811115610eee57fe5b610ef6611a0b565b6002811115610f0157fe5b14610f0f5760029050610f14565b600390505b90565b600080610f48600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166122ab565b915081610f548361136d565b915091509091565b610f6533612304565b610fd7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610fe08161235e565b50565b610fec33612304565b61105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b61106661256d565b565b6000611073336126da565b80611083575061108233612304565b5b6110f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b6110fd612719565b61116f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f646561646c696e65206e6f74207061737365640000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506111ac6111a5826122ab565b8285612740565b915050919050565b6111bd33612767565b806111cd57506111cc33612304565b5b61123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061127d611275826122ab565b8283856127a6565b505050565b600060028081111561129057fe5b82600281111561129c57fe5b14156112cd576012600a0a6112be6112b8856012600a0a6127cb565b86612851565b816112c557fe5b049050611366565b600160028111156112da57fe5b8260028111156112e657fe5b14156112f55760009050611366565b6000600281111561130257fe5b82600281111561130e57fe5b1415611365576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f4e6021913960400191505060405180910390fd5b5b9392505050565b600060028081111561137b57fe5b82600281111561138757fe5b141561139c57611395612889565b90506113cf565b600160028111156113a957fe5b8260028111156113b557fe5b14156113ca576113c36128a5565b90506113cf565b600090505b919050565b60006002808111156113e257fe5b8260028111156113ee57fe5b141561141f576012600a0a61141061140a856012600a0a6127cb565b866128c1565b8161141757fe5b049050611500565b6001600281111561142c57fe5b82600281111561143857fe5b141561148f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613ee26021913960400191505060405180910390fd5b6000600281111561149c57fe5b8260028111156114a857fe5b14156114ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f4e6021913960400191505060405180910390fd5b5b9392505050565b6000611512336126da565b80611522575061152133612304565b5b611594576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b61159c6128f5565b61160e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f646561646c696e6520616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b61161661291c565b905090565b60008054905090565b6000600660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1691509150915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061175233612767565b80611762575061176133612304565b5b6117d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b6117dc612719565b1561184f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b61188033600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585612944565b905092915050565b61189133612767565b806118a157506118a033612304565b5b611913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f6e6c7920636f756e7465727061727479206f72206f70657261746f7200000081525060200191505060405180910390fd5b61191b612719565b1561198e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506119cc6119c4826122ab565b823385612c07565b505050565b6000600154905090565b6000426000541115611a03576119fc42600054612c2d90919063ffffffff16565b9050611a08565b600090505b90565b6000806000541415611a205760009050611a38565b426000541115611a335760019050611a38565b600290505b90565b600080611a46611c4c565b90506000811191505090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8533612304565b611af7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b611b00816121bd565b50565b611b0c336126da565b80611b1c5750611b1b33612304565b5b611b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79207374616b6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b611b96612719565b15611c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f61677265656d656e7420656e646564000000000000000000000000000000000081525060200191505060405180910390fd5b6000600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611c47611c3f826122ab565b823385612c07565b505050565b6000611caa611c7f600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166122ab565b600660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612c77565b905090565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60006002811115611eca57fe5b816002811115611ed657fe5b1480611ef8575060016002811115611eea57fe5b816002811115611ef657fe5b145b15611f575760008214611f56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613f6f602c913960400191505060405180910390fd5b5b611f6083612cdd565b611fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff0219169083600281111561203057fe5b021790555081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908360028111156120da57fe5b02179055507f678cee39e611e507ca0ae7d4e7c0e52c9858566e71c430de3ea311893e66554784848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184600281111561214657fe5b60ff16815260200183815260200182600281111561216057fe5b60ff16815260200194505050505060405180910390a150505050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561221f578082015181840152602081019050612204565b50505050905090810190601f16801561224c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b600060038081111561226a57fe5b612272610e9e565b600381111561227d57fe5b14905090565b60006002600381111561229257fe5b61229a610e9e565b60038111156122a557fe5b14905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff169050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612423576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126e4611651565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060028081111561272757fe5b61272f610e68565b600281111561273a57fe5b14905090565b60008061274d8585612c77565b905061275b858585846127a6565b50809150509392505050565b6000612771611624565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006127b3858584612d20565b90506127c0858484612f00565b809050949350505050565b6000808314156127de576000905061284b565b60008284029050828482816127ef57fe5b0414612846576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613f036021913960400191505060405180910390fd5b809150505b92915050565b60006012600a0a61287961286585856127cb565b60026012600a0a8161287357fe5b046130be565b8161288057fe5b04905092915050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b6000816128e56128d5856012600a0a6127cb565b600285816128df57fe5b046130be565b816128ec57fe5b04905092915050565b600080600281111561290357fe5b61290b610e68565b600281111561291657fe5b14905090565b6000612933426001546130be90919063ffffffff16565b905061293e81613146565b80905090565b600080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1690506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900460ff16905060006002811115612a4157fe5b826002811115612a4d57fe5b1415612ac1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f2070756e6973686d656e7420616c6c6f776564000000000000000000000081525060200191505060405180910390fd5b612acc838784611282565b9350612ad9818986613187565b612ae4818888613261565b507fca93c648a4546f2ae486b9140f0082ced75a2664a663c8882b8b3545cddfeeb18888888789604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bbb578082015181840152602081019050612ba0565b50505050905090810190601f168015612be85780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a1839350505050949350505050565b6000612c14858584613307565b9050612c228584308561346c565b809050949350505050565b6000612c6f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061365f565b905092915050565b600060026000846002811115612c8957fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060016002811115612cec57fe5b826002811115612cf857fe5b1480612d195750600280811115612d0b57fe5b826002811115612d1757fe5b145b9050919050565b60008060026000866002811115612d3357fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015612df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b612e0a8382612c2d90919063ffffffff16565b91508160026000876002811115612e1d57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f3578585858560405180856002811115612ea157fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b82612f0a81612cdd565b612f7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b612f858461136d565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561300b57600080fd5b505af115801561301f573d6000803e3d6000fd5b505050506040513d602081101561303557600080fd5b81019080805190602001909291905050506130b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505050565b60008082840190508381101561313c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261319181612cdd565b613203576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b60028081111561320f57fe5b84600281111561321b57fe5b14156132305761322b838361371f565b61325b565b6001600281111561323d57fe5b84600281111561324957fe5b141561325a576132598383613837565b5b5b50505050565b60008061326f858585612d20565b905061327b8584613983565b7fdb3ea61f51d905963ea248d3208f32d619158d110030556d90aed12c46735c6b858585604051808460028111156132af57fe5b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1809150509392505050565b6000613377826002600087600281111561331d57fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546130be90919063ffffffff16565b9050806002600086600281111561338a57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561340e57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b8361347681612cdd565b6134e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6134f18561136d565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156135ab57600080fd5b505af11580156135bf573d6000803e3d6000fd5b505050506040513d60208110156135d557600080fd5b8101908080519060200190929190505050613658576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b600083831115829061370c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136d15780820151818401526020810190506136b6565b50505050905090810190601f1680156136fe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166323b872dd8330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156137ee57600080fd5b505af1158015613802573d6000803e3d6000fd5b505050506040513d602081101561381857600080fd5b81019080805190602001909291905050505061383381613a5a565b5050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff16637c8d56b883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156138d257600080fd5b505af11580156138e6573d6000803e3d6000fd5b505050506040513d60208110156138fc57600080fd5b810190808051906020019092919050505061397f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6d72206275726e46726f6d206661696c65640000000000000000000000000081525060200191505060405180910390fd5b5050565b8161398d81612cdd565b6139ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b600280811115613a0b57fe5b836002811115613a1757fe5b1415613a2b57613a2682613a5a565b613a55565b60016002811115613a3857fe5b836002811115613a4457fe5b1415613a5457613a5382613c69565b5b5b505050565b736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3732a1530c4c41db0b0b2bb646cb5eb1a67b7158667836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613b0957600080fd5b505af1158015613b1d573d6000803e3d6000fd5b505050506040513d6020811015613b3357600080fd5b8101908080519060200190929190505050506000819050600080613b5683613d80565b9150915060004290506000732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff1663ddf7e1a786868686613b9d6128a5565b6040518663ffffffff1660e01b8152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050602060405180830381600087803b158015613c1b57600080fd5b505af1158015613c2f573d6000803e3d6000fd5b505050506040513d6020811015613c4557600080fd5b81019080805190602001909291905050509050613c6181613c69565b505050505050565b731776e1f26f98b1a5df9cd347953a26dd3cb4667173ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015613cd057600080fd5b505af1158015613ce4573d6000803e3d6000fd5b505050506040513d6020811015613cfa57600080fd5b8101908080519060200190929190505050613d7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6d72206275726e206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50565b600080732a1530c4c41db0b0b2bb646cb5eb1a67b715866773ffffffffffffffffffffffffffffffffffffffff166395b68fe7846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613de857600080fd5b505afa158015613dfc573d6000803e3d6000fd5b505050506040513d6020811015613e1257600080fd5b81019080805190602001909291905050509050613e2d613ec5565b73ffffffffffffffffffffffffffffffffffffffff1663cd7724c3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613e7d57600080fd5b505afa158015613e91573d6000803e3d6000fd5b505050506040513d6020811015613ea757600080fd5b81019080805190602001909291905050509150818191509150915091565b6000732bf5a5ba29e60682fc56b2fcf9ce07bef4f6196f90509056fe726174696f547970652063616e6e6f7420626520526174696f547970652e496e66536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f72726174696f547970652063616e6e6f7420626520526174696f547970652e4e614e726174696f206d7573742062652030207768656e20726174696f54797065206973204e614e206f7220496e66a265627a7a723158207043d8d7946fb85e21c348a21f97d835ed1416b1d8c25e6dd2743a22d1d0e9e264736f6c634300050d0032",
  "sourceMap": "1594:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:12972:0;;;;;;;",
  "deployedSourceMap": "1594:12972:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:12972:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:970;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3573:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3573:970:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3573:970:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3573:970:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3573:970:0;;;;;;;;;;;;;;;:::i;:::-;;1135:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13362:335:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:428:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12183:210:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10353:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10353:228:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;10720:204;;;:::i;:::-;;9650:496;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9650:496:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8235:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8235:414:0;;;;;;;;;;;;;;;;;:::i;:::-;;5449:393:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5449:393:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;555:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;555:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6478:428:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6478:428:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8940:361:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1035:95:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11569:112:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11053:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4338:212:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4338:212:16;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7522:439:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7522:439:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7522:439:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7522:439:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7522:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7522:439:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6220:476;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6220:476:0;;;;;;;;;;;;;;;;;:::i;:::-;;1441:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1480:173:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1997:275;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12793:139:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1455:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4747:226:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4747:226:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4747:226:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4747:226:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4747:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4747:226:0;;;;;;;;;;;;;;;:::i;:::-;;5355:471;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5355:471:0;;;;;;;;;;;;;;;;;:::i;:::-;;12523:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3573:970;601:10:24;590:8;;:21;;;;;;;;;;;;;;;;;;703:15;763:7;751:20;739:32;;802:1;790:8;:13;;;782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:6:0;3909:5;:12;;;:21;;;;;;;;;;;;;;;;;;3961:12;3940:5;:18;;;:33;;;;;;;;;;;;;;;;;;4032:1;4012:22;;:8;:22;;;4008:84;;4050:31;4072:8;4050:21;:31::i;:::-;4008:84;4132:53;4151:6;4159:7;4168:5;4175:9;4132:18;:53::i;:::-;4228:37;4249:15;4228:20;:37::i;:::-;4323:1;4304:8;:15;:20;4300:87;;4340:36;4367:8;4340:26;:36::i;:::-;4300:87;4439:97;4451:8;4461:6;4469:12;4483:7;4492:5;4499:9;4510:15;4527:8;4439:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4439:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3573:970;;;;;;;;;:::o;1135:229:24:-;1178:15;1314:8;;;;;;;;;;;1305:37;;;1351:4;1305:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1305:52:24;;;;;;;;;;;;;;;;1298:59;;1135:229;:::o;13362:335:0:-;13413:22;13451:18;:16;:18::i;:::-;13447:244;;;13492:28;13485:35;;;;13447:244;13541:20;:18;:20::i;:::-;13537:154;;;13584:29;13577:36;;;;13537:154;13651:29;13644:36;;13362:335;;:::o;1972:428:11:-;2023:22;2072:1;2061:7;;:12;2057:59;;;2094:22;2087:29;;;;2057:59;2162:21;2130:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2126:99;;;2204:21;2197:28;;;;2126:99;2271:21;2239:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2235:158;;2313:24;2306:31;;;;2235:158;2371:22;2364:29;;1972:428;;:::o;12183:210:0:-;12224:27;12253:13;12288:33;12308:5;:12;;;;;;;;;;;;12288:19;:33::i;:::-;12278:43;;12339:7;12348:37;12377:7;12348:28;:37::i;:::-;12331:55;;;;12183:210;;:::o;10353:228::-;10449:31;10469:10;10449:19;:31::i;:::-;10441:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10538:36;10565:8;10538:26;:36::i;:::-;10353:228;:::o;10720:204::-;10800:31;10820:10;10800:19;:31::i;:::-;10792:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10889:28;:26;:28::i;:::-;10720:204::o;9650:496::-;9708:14;9769:20;9778:10;9769:8;:20::i;:::-;:55;;;;9793:31;9813:10;9793:19;:31::i;:::-;9769:55;9761:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9909:14;:12;:14::i;:::-;9901:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9996:14;10013:5;:12;;;;;;;;;;;;9996:29;;10069:70;10092:27;10112:6;10092:19;:27::i;:::-;10121:6;10129:9;10069:22;:70::i;:::-;10062:77;;;9650:496;;;:::o;8235:414::-;8334:26;8349:10;8334:14;:26::i;:::-;:61;;;;8364:31;8384:10;8364:19;:31::i;:::-;8334:61;8326:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8478:14;8495:5;:12;;;;;;;;;;;;8478:29;;8562:80;8581:27;8601:6;8581:19;:27::i;:::-;8610:6;8618;8626:15;8562:18;:80::i;:::-;;8235:414;;:::o;5449:393:16:-;5542:12;5583:13;5570:26;;;;;;;;:9;:26;;;;;;;;;5566:110;;;956:2;941;933:26;5617:53;5633:29;5646:10;956:2;941;933:26;5633:12;:29::i;:::-;5664:5;5617:15;:53::i;:::-;:59;;;;;;5610:66;;;;5566:110;5703:13;5690:26;;;;;;;;:9;:26;;;;;;;;;5686:52;;;5737:1;5730:8;;;;5686:52;5765:13;5752:26;;;;;;;;:9;:26;;;;;;;;;5748:87;;;5792:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5748:87;5449:393;;;;;;:::o;555:280:25:-;617:20;664:10;653:21;;;;;;;;:7;:21;;;;;;;;;649:71;;;695:25;:23;:25::i;:::-;688:32;;;;649:71;745:10;734:21;;;;;;;;:7;:21;;;;;;;;;730:71;;;776:25;:23;:25::i;:::-;769:32;;;;730:71;826:1;811:17;;555:280;;;;:::o;6478:428:16:-;6571:18;6618:13;6605:26;;;;;;;;:9;:26;;;;;;;;;6601:104;;;956:2;941;933:26;6652:47;6668:23;6681:4;956:2;941;933:26;6668:12;:23::i;:::-;6693:5;6652:15;:47::i;:::-;:53;;;;;;6645:60;;;;6601:104;6732:13;6719:26;;;;;;;;:9;:26;;;;;;;;;6715:87;;;6759:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6715:87;6829:13;6816:26;;;;;;;;:9;:26;;;;;;;;;6812:87;;;6856:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6812:87;6478:428;;;;;;:::o;8940:361:0:-;8982:16;9045:20;9054:10;9045:8;:20::i;:::-;:55;;;;9069:31;9089:10;9069:19;:31::i;:::-;9045:55;9037:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9191:15;:13;:15::i;:::-;9183:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9276:18;:16;:18::i;:::-;9269:25;;8940:361;:::o;1035:95:12:-;1079:16;1114:9;;1107:16;;1035:95;:::o;11569:112:0:-;11617:20;11656:5;:18;;;;;;;;;;;;11649:25;;11569:112;:::o;11053:94::-;11095:14;11128:5;:12;;;;;;;;;;;;11121:19;;11053:94;:::o;4338:212:16:-;4393:13;4408:19;4486:11;:19;4498:6;4486:19;;;;;;;;;;;;;;;:25;;;4513:11;:19;4525:6;4513:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;4478:65;;;;4338:212;;;:::o;1771:92:24:-;1814:15;1848:8;;;;;;;;;;;1841:15;;1771:92;:::o;7522:439:0:-;7596:12;7655:26;7670:10;7655:14;:26::i;:::-;:61;;;;7685:31;7705:10;7685:19;:31::i;:::-;7655:61;7647:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7812:14;:12;:14::i;:::-;7811:15;7803:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7892:62;7908:10;7920:5;:12;;;;;;;;;;;;7934:10;7946:7;7892:15;:62::i;:::-;7885:69;;7522:439;;;;:::o;6220:476::-;6309:26;6324:10;6309:14;:26::i;:::-;:61;;;;6339:31;6359:10;6339:19;:31::i;:::-;6309:61;6301:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6466:14;:12;:14::i;:::-;6465:15;6457:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6549:14;6566:5;:12;;;;;;;;;;;;6549:29;;6610:79;6628:27;6648:6;6628:19;:27::i;:::-;6657:6;6665:10;6677:11;6610:17;:79::i;:::-;;6220:476;;:::o;1441:89:11:-;1483:14;1516:7;;1509:14;;1441:89;:::o;1480:173:12:-;1529:12;1569:3;1557:9;;:15;1553:93;;;1593:18;1607:3;1593:9;;:13;;:18;;;;:::i;:::-;1586:25;;;;1553:93;1645:1;1638:8;;1480:173;;:::o;1997:275::-;2047:21;2097:1;2084:9;;:14;2080:60;;;2119:21;2112:28;;;;2080:60;2166:3;2154:9;;:15;2150:115;;;2190:20;2183:27;;;;2150:115;2244:21;2237:28;;1997:275;;:::o;12793:139:0:-;12834:13;12859:20;12882:10;:8;:10::i;:::-;12859:33;;12924:1;12909:12;:16;12902:23;;;12793:139;:::o;1455:95:18:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;4747:226:0:-;4843:31;4863:10;4843:19;:31::i;:::-;4835:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:36;4957:8;4930:26;:36::i;:::-;4747:226;:::o;5355:471::-;5451:20;5460:10;5451:8;:20::i;:::-;:55;;;;5475:31;5495:10;5475:19;:31::i;:::-;5451:55;5443:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5596:14;:12;:14::i;:::-;5595:15;5587:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5679:14;5696:5;:12;;;;;;;;;;;;5679:29;;5740:79;5758:27;5778:6;5758:19;:27::i;:::-;5787:6;5795:10;5807:11;5740:17;:79::i;:::-;;5355:471;;:::o;12523:147::-;12564:13;12596:67;12615:33;12635:5;:12;;;;;;;;;;;;12615:19;:33::i;:::-;12650:5;:12;;;;;;;;;;;;12596:18;:67::i;:::-;12589:74;;12523:147;:::o;302:417:18:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;1712:640:16:-;1848:13;1835:26;;;;;;;;:9;:26;;;;;;;;;:56;;;;1878:13;1865:26;;;;;;;;:9;:26;;;;;;;;;1835:56;1831:154;;;1924:1;1915:5;:10;1907:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:154;2035:36;2063:7;2035:27;:36::i;:::-;2027:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2131:7;2101:11;:19;2113:6;2101:19;;;;;;;;;;;;;;;:27;;;:37;;;;;;;;;;;;;;;;;;;;;;;;2208:5;2180:11;:19;2192:6;2180:19;;;;;;;;;;;;;;;:25;;:33;;;;2255:9;2223:11;:19;2235:6;2223:19;;;;;;;;;;;;;;;:29;;;:41;;;;;;;;;;;;;;;;;;;;;;;;2302:43;2311:6;2319:7;2328:5;2335:9;2302:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:640;;;;:::o;822:110:11:-;887:6;877:7;:16;;;;908:17;918:6;908:17;;;;;;;;;;;;;;;;;;822:110;:::o;418:97:14:-;487:21;499:8;487:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;487:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:97;:::o;3353:126:11:-;3394:13;3450:22;3426:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;3419:53;;3353:126;:::o;3080:130::-;3123:13;3179:24;3155:48;;;;;;;;:20;:18;:20::i;:::-;:48;;;;;;;;;3148:55;;3080:130;:::o;4716:180:16:-;4775:27;4861:11;:19;4873:6;4861:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;4853:36;;4716:180;;;:::o;1556:111:18:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;725:410::-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;11324:117:0:-;11381:13;11423:11;:9;:11::i;:::-;11413:21;;:6;:21;;;11406:28;;11324:117;;;:::o;14426:138::-;14473:13;14529:28;14505:52;;;;;;;;:20;:18;:20::i;:::-;:52;;;;;;;;;14498:59;;14426:138;:::o;2991:369:23:-;3097:19;3151:22;3176:35;3195:7;3204:6;3176:18;:35::i;:::-;3151:60;;3249:54;3260:7;3269:6;3277:9;3288:14;3249:10;:54::i;:::-;;3339:14;3332:21;;;2991:369;;;;;:::o;11864:129:0:-;11927:13;11969:17;:15;:17::i;:::-;11959:27;;:6;:27;;;11952:34;;11864:129;;;:::o;2153:408:23:-;2277:16;2342:55;2367:7;2376:6;2384:12;2342:24;:55::i;:::-;2331:66;;2445:56;2468:7;2477:9;2488:12;2445:22;:56::i;:::-;2546:8;2539:15;;2153:408;;;;;;:::o;2159:459:52:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;520:140:6:-;577:9;313:2;298;290:26;602:43;615:18;628:1;631;615:12;:18::i;:::-;643:1;313:2;298;290:26;635:9;;;;;;602:12;:43::i;:::-;:51;;;;;;598:55;;520:140;;;;:::o;2880:99:9:-;2930:13;526:42;2955:17;;2880:99;:::o;1501::10:-;1551:13;565:42;1576:17;;1501:99;:::o;854:136:6:-;911:9;982:1;936:43;949:22;962:1;313:2;298;290:26;949:12;:22::i;:::-;977:1;973;:5;;;;;;936:12;:43::i;:::-;:47;;;;;;932:51;;854:136;;;;:::o;13847:140:0:-;13895:13;13951:29;13927:53;;;;;;;;:20;:18;:20::i;:::-;:53;;;;;;;;;13920:60;;13847:140;:::o;1127:164:11:-;1163:16;1202;1214:3;1202:7;;:11;;:16;;;;:::i;:::-;1191:27;;1228:31;1250:8;1228:21;:31::i;:::-;1276:8;1269:15;;1127:164;:::o;2918:969:16:-;3066:12;3129:13;3145:11;:19;3157:6;3145:19;;;;;;;;;;;;;;;:25;;;3129:41;;3180:19;3202:11;:19;3214:6;3202:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3180:51;;3241:27;3271:11;:19;3283:6;3271:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3241:57;;3330:13;3317:26;;;;;;;;:9;:26;;;;;;;;;;3309:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:37;3497:5;3504:10;3516:9;3489:7;:37::i;:::-;3482:44;;3590:47;3613:7;3622:8;3632:4;3590:22;:47::i;:::-;3703;3722:7;3731:6;3739:10;3703:18;:47::i;:::-;;3788:52;3796:8;3806:6;3814:10;3826:4;3832:7;3788:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3788:52:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3876:4;3869:11;;;;;2918:969;;;;;;:::o;1210:417:23:-;1329:16;1394:54;1419:7;1428:6;1436:11;1394:24;:54::i;:::-;1383:65;;1496:71;1523:7;1532:6;1548:4;1555:11;1496:26;:71::i;:::-;1612:8;1605:15;;1210:417;;;;;;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3708:159:13:-;3794:15;3828:8;:26;3845:7;3837:16;;;;;;;;3828:26;;;;;;;;;;;:32;3855:4;3828:32;;;;;;;;;;;;;;;;3821:39;;3708:159;;;;:::o;1156:148:25:-;1219:13;1262:10;1251:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1287:10;1276:21;;;;;;;;:7;:21;;;;;;;;;1251:46;1244:53;;1156:148;;;:::o;2071:694:13:-;2182:18;2243:22;2268:8;:26;2285:7;2277:16;;;;;;;;2268:26;;;;;;;;;;;:32;2295:4;2268:32;;;;;;;;;;;;;;;;2243:57;;2376:14;2358;:32;;2350:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:34;2508:14;2489;:18;;:34;;;;:::i;:::-;2476:47;;2605:10;2570:8;:26;2587:7;2579:16;;;;;;;;2570:26;;;;;;;;;;;:32;2597:4;2570:32;;;;;;;;;;;;;;;:45;;;;2653:59;2670:7;2679:4;2685:14;2701:10;2653:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:10;2741:17;;;2071:694;;;;;:::o;1498:200:25:-;1586:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:24;1636:7;1620:15;:24::i;:::-;1613:41;;;1655:2;1659:5;1613:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1613:52:25;;;;;;;;;;;;;;;;1605:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:200;;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;769:122:12:-;840:8;828:9;:20;;;;863:21;875:8;863:21;;;;;;;;;;;;;;;;;;769:122;:::o;2752:285:25:-;2842:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2876:10;2865:21;;;;;;;;:7;:21;;;;;;;;;2861:170;;;2902:30;2920:4;2926:5;2902:17;:30::i;:::-;2861:170;;;2964:10;2953:21;;;;;;;;:7;:21;;;;;;;;;2949:82;;;2990:30;3008:4;3014:5;2990:17;:30::i;:::-;2949:82;2861:170;2752:285;;;;:::o;3779:453:23:-;3884:16;3938:18;3959:55;3984:7;3993:6;4001:12;3959:24;:55::i;:::-;3938:76;;4058:41;4077:7;4086:12;4058:18;:41::i;:::-;4137:42;4149:7;4158:6;4166:12;4137:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:10;4208:17;;;3779:453;;;;;:::o;1228:479:13:-;1336:18;1419:49;1456:11;1419:8;:26;1436:7;1428:16;;;;;;;;1419:26;;;;;;;;;;;:32;1446:4;1419:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1406:62;;1550:10;1515:8;:26;1532:7;1524:16;;;;;;;;1515:26;;;;;;;;;;;:32;1542:4;1515:32;;;;;;;;;;;;;;;:45;;;;1598:56;1615:7;1624:4;1630:11;1643:10;1598:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:10;1683:17;;1228:479;;;;;:::o;1939:228:25:-;2045:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:24;2095:7;2079:15;:24::i;:::-;2072:45;;;2118:4;2124:2;2128:5;2072:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2072:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:62:25;;;;;;;;;;;;;;;;2064:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:228;;;;;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1016:217:9:-;526:42;1125:30;;;1156:4;1170;1177:5;1125:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1125:58:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1125:58:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1125:58:9;;;;;;;;;;;;;;;;;1214:12;1220:5;1214;:12::i;:::-;1016:217;;:::o;1249:150:10:-;565:42;1324:31;;;1356:4;1362:5;1324:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1324:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1324:44:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1324:44:10;;;;;;;;;;;;;;;;1316:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:150;;:::o;2313:247:25:-;2385:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:10;2408:21;;;;;;;;:7;:21;;;;;;;;;2404:150;;;2445:20;2459:5;2445:13;:20::i;:::-;2404:150;;;2497:10;2486:21;;;;;;;;:7;:21;;;;;;;;;2482:72;;;2523:20;2537:5;2523:13;:20::i;:::-;2482:72;2404:150;2313:247;;;:::o;1446:653:9:-;526:42;1542:25;;;660:42;1582:5;1542:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:46:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1542:46:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1542:46:9;;;;;;;;;;;;;;;;;1627:19;1649:5;1627:27;;1665:25;1692:22;1718:34;1740:11;1718:21;:34::i;:::-;1664:88;;;;1762:16;1781:3;1762:22;;1794:21;660:42;1818:60;;;1892:11;1917:17;1948:14;1976:8;1998:25;:23;:25::i;:::-;1818:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1818:215:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1818:215:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1818:215:9;;;;;;;;;;;;;;;;1794:239;;2064:28;2078:13;2064;:28::i;:::-;1446:653;;;;;;:::o;891:111:10:-;565:42;948:20;;;969:5;948:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:27:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;948:27:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:27:10;;;;;;;;;;;;;;;;940:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:111;:::o;2415:363:9:-;2488:17;2507;660:42;2548:62;;;2611:9;2548:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2548:73:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2548:73:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2548:73:9;;;;;;;;;;;;;;;;2536:85;;2668:28;:26;:28::i;:::-;2643:78;;;2722:9;2643:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2643:89:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2643:89:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2643:89:9;;;;;;;;;;;;;;;;2631:101;;2750:9;2761;2742:29;;;;2415:363;;;:::o;1724:111:10:-;1777:16;699:42;1805:23;;1724:111;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Griefing.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefing\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/agreements/CountdownGriefing.png\n/// @notice This agreement template allows a staker to grant permission to a counterparty to punish, reward, or release their stake until the countdown is completed.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details on initialization parameters.\n///         Notable features:\n///             - The staker can increase the stake at any time before the end of the countdown.\n///             - The counterparty can increase, release, or punish the stake at any time before the end of the countdown.\n///             - The agreement can be terminated by the staker by starting the countdown. Once the countdown completes the staker can retrieve their remaining stake.\n///             - Punishments use griefing which requires the counterparty to pay an appropriate amount based on the desired punishment and a predetermined ratio.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract.\ncontract CountdownGriefing is Countdown, Griefing, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address staker;\n        address counterparty;\n    }\n\n    event Initialized(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes metadata\n    );\n\n    /// @notice Constructor used to initialize the agreement parameters.\n    ///         All parameters are passed as ABI-encoded calldata to the factory. This calldata must include the function selector.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param staker address of the staker who owns the stake. Required parameter. This address is the only one able to retrieve the stake and cannot be changed.\n    /// @param counterparty address of the counterparty who has the right to reward, release, and punish the stake. Required parameter. This address cannot be changed.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param ratio uint256 number (18 decimals) used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param ratioType Griefing.RatioType number used to determine punishment cost. Required parameter. See Griefing module for details on valid input.\n    /// @param countdownLength uint256 amount of time (in seconds) the counterparty has to punish or reward before the agreement ends. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    function initialize(\n        address operator,\n        address staker,\n        address counterparty,\n        TokenManager.Tokens tokenID,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory metadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set griefing ratio\n        Griefing._setRatio(staker, tokenID, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set metadata\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // log initialization params\n        emit Initialized(operator, staker, counterparty, tokenID, ratio, ratioType, countdownLength, metadata);\n    }\n\n    // state functions\n\n    /// @notice Emit metadata event\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata bytes data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Called by the staker to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function increaseStake(uint256 amountToAdd) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to increase the stake\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param amountToAdd uint256 amount of tokens (18 decimals) to be added to the stake\n    function reward(uint256 amountToAdd) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // add stake\n        Staking._addStake(Griefing.getTokenID(staker), staker, msg.sender, amountToAdd);\n    }\n\n    /// @notice Called by the counterparty to punish the stake\n    ///          - burns the punishment from the stake and a proportional amount from the counterparty balance\n    ///          - the cost of the punishment is calculated with the `Griefing.getCost()` function using the predetermined griefing ratio\n    ///          - tokens (ERC-20) are burned from the caller and requires approval of this contract for appropriate amount\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: before isTerminated()\n    /// @param punishment uint256 amount of tokens (18 decimals) to be burned from the stake\n    /// @param message bytes data (any format) to emit as event giving reason for the punishment\n    /// @return cost uint256 amount of tokens (18 decimals) it cost to perform punishment\n    function punish(uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // require agreement is not ended\n        require(!isTerminated(), \"agreement ended\");\n\n        // execute griefing\n        return Griefing._grief(msg.sender, _data.staker, punishment, message);\n    }\n\n    /// @notice Called by the counterparty to release the stake to the staker\n    /// @dev Access Control: counterparty OR operator\n    ///      State Machine: anytime\n    /// @param amountToRelease uint256 amount of tokens (18 decimals) to be released from the stake\n    function releaseStake(uint256 amountToRelease) public {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isOperator(msg.sender), \"only counterparty or operator\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // release stake back to the staker\n        Staking._takeStake(Griefing.getTokenID(staker), staker, staker, amountToRelease);\n    }\n\n    /// @notice Called by the staker to begin countdown to finalize the agreement\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: before Countdown.isActive()\n    /// @return deadline uint256 timestamp (Unix seconds) at which the agreement will be finalized\n    function startCountdown() public returns (uint256 deadline) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require countdown is not started\n        require(isInitialized(), \"deadline already set\");\n\n        // start countdown\n        return Countdown._start();\n    }\n\n    /// @notice Called by the staker to retrieve the remaining stake once the agreement has ended\n    /// @dev Access Control: staker OR operator\n    ///      State Machine: after Countdown.isOver()\n    /// @param recipient address of the account where to send the stake\n    /// @return amount uint256 amount of tokens (18 decimals) retrieved\n    function retrieveStake(address recipient) public returns (uint256 amount) {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isOperator(msg.sender), \"only staker or operator\");\n\n        // require deadline is passed\n        require(isTerminated(), \"deadline not passed\");\n\n        // declare variable in memory\n        address staker = _data.staker;\n\n        // retrieve stake\n        return Staking._takeFullStake(Griefing.getTokenID(staker), staker, recipient);\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    // view functions\n\n    /// @notice Get the address of the staker (if set)\n    /// @return staker address of the staker\n    function getStaker() public view returns (address staker) {\n        return _data.staker;\n    }\n\n    /// @notice Validate if the address matches the stored staker address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isStaker(address caller) internal view returns (bool validity) {\n        return caller == getStaker();\n    }\n\n    /// @notice Get the address of the counterparty (if set)\n    /// @return counterparty address of counterparty account\n    function getCounterparty() public view returns (address counterparty) {\n        return _data.counterparty;\n    }\n\n    /// @notice Validate if the address matches the stored counterparty address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isCounterparty(address caller) internal view returns (bool validity) {\n        return caller == getCounterparty();\n    }\n\n    /// @notice Get the token ID and address used by the agreement\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return token address of the ERC20 token.\n    function getToken() public view returns (TokenManager.Tokens tokenID, address token) {\n        tokenID = Griefing.getTokenID(_data.staker);\n        return (tokenID, TokenManager.getTokenAddress(tokenID));\n    }\n\n    /// @notice Get the current stake of the agreement\n    /// @return stake uint256 amount of tokens (18 decimals) staked.\n    function getStake() public view returns (uint256 stake) {\n        return Deposit.getDeposit(Griefing.getTokenID(_data.staker), _data.staker);\n    }\n\n    /// @notice Validate if the current stake is greater than 0\n    /// @return validity bool true if non-zero stake\n    function isStaked() public view returns (bool validity) {\n        uint256 currentStake = getStake();\n        return currentStake > 0;\n    }\n\n    enum AgreementStatus { isInitialized, isInCountdown, isTerminated }\n    /// @notice Get the status of the state machine\n    /// @return status AgreementStatus from the following states:\n    ///          - isInitialized: initialized but no deposits made\n    ///          - isInCountdown: staker has triggered countdown to termination\n    ///          - isTerminated: griefing agreement is over, staker can retrieve stake\n    function getAgreementStatus() public view returns (AgreementStatus status) {\n        if (Countdown.isOver()) {\n            return AgreementStatus.isTerminated;\n        } else if (Countdown.isActive()) {\n            return AgreementStatus.isInCountdown;\n        } else {\n            return AgreementStatus.isInitialized;\n        }\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInitialized state\n    /// @return validity bool true if correct state\n    function isInitialized() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInitialized;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isInCountdown state\n    /// @return validity bool true if correct state\n    function isInCountdown() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isInCountdown;\n    }\n\n    /// @notice Validate if the state machine is in the AgreementStatus.isTerminated state\n    /// @return validity bool true if correct state\n    function isTerminated() internal view returns (bool validity) {\n        return getAgreementStatus() == AgreementStatus.isTerminated;\n    }\n}\n"
}