{
  "contractName": "CountdownGriefingEscrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "DataSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "DeadlineSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeposit",
          "type": "uint256"
        }
      ],
      "name": "DepositIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "agreement",
          "type": "address"
        }
      ],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "countdownLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "agreementParams",
          "type": "bytes"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "LengthSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "OperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeDeposited",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCountdownStatus",
      "outputs": [
        {
          "internalType": "enum Countdown.CountdownStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDeadlineStatus",
      "outputs": [
        {
          "internalType": "enum Deadline.DeadlineStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "paymentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowCountdown",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "agreementParams",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "setMetadata",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "depositAndSetSeller",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "depositAndSetBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "transferOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBuyer",
      "outputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSeller",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getData",
      "outputs": [
        {
          "internalType": "enum TokenManager.Tokens",
          "name": "tokenID",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "paymentAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "stakeAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint120",
          "name": "ratio",
          "type": "uint120"
        },
        {
          "internalType": "enum Griefing.RatioType",
          "name": "ratioType",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "countdownLength",
          "type": "uint128"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEscrowStatus",
      "outputs": [
        {
          "internalType": "enum CountdownGriefingEscrow.EscrowStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50614968806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80637fe07abf116100de578063dac6270d11610097578063e1254fba11610071578063e1254fba1461088c578063e7f43c68146108e4578063ea8a1af01461092e578063ee57e36f146109385761018e565b8063dac6270d146107f8578063dbd0e1b614610816578063de2229fe146108605761018e565b80637fe07abf146104a957806388cc58e4146104ed578063aa5e215314610537578063b7ac763f14610541578063be1c766b146105fc578063d53000041461061a5761018e565b80634bb278f31161014b578063603daf9a11610125578063603daf9a146103e55780636234216d1461042f578063665b0a191461045b57806370dea79a1461049f5761018e565b80634bb278f31461034c5780635ad3f918146103565780635f8d96de146103c75761018e565b80630d2d76a2146101935780630ee2cb101461019d57806319fbb48e146101e757806329605e77146102135780632ab6f8db146102575780633bc5de3014610261575b600080fd5b61019b6109f3565b005b6101a5610b50565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ef610c31565b604051808260038111156101ff57fe5b60ff16815260200191505060405180910390f35b6102556004803603602081101561022957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610caa565b005b61025f610d31565b005b610269610db6565b6040518087600281111561027957fe5b60ff168152602001866fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001846effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff16815260200183600281111561030957fe5b60ff168152602001826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b610354610e89565b005b6103856004803603602081101561036c57600080fd5b81019080803560ff169060200190929190505050611a14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103cf611a7b565b6040518082815260200191505060405180910390f35b6103ed611a84565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610437611ab1565b6040518082600581111561044757fe5b60ff16815260200191505060405180910390f35b61049d6004803603602081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611acb565b005b6104a7611be1565b005b6104eb600480360360208110156104bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d00565b005b6104f5611e16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61053f611e40565b005b6105fa6004803603602081101561055757600080fd5b810190808035906020019064010000000081111561057457600080fd5b82018360208201111561058657600080fd5b803590602001918460018302840111640100000000831117156105a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f9d565b005b610604612141565b6040518082815260200191505060405180910390f35b6107f6600480360361012081101561063157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156106d957600080fd5b8201836020820111156106eb57600080fd5b8035906020019184600183028401116401000000008311171561070d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061214b565b005b6108006129ab565b6040518082815260200191505060405180910390f35b61081e6129db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610868612a08565b6040518082600281111561087857fe5b60ff16815260200191505060405180910390f35b6108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a38565b6040518082815260200191505060405180910390f35b6108ec612a5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610936612a87565b005b6109f16004803603602081101561094e57600080fd5b810190808035906020019064010000000081111561096b57600080fd5b82018360208201111561097d57600080fd5b8035906020019184600183028401116401000000008311171561099f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ba7565b005b6109fc33612c2e565b80610a0c5750610a0b33612c6d565b5b610a7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f73656c6c6572206e6f742079657420736574000000000000000000000000000081525060200191505060405180910390fd5b610b4e612cc7565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d6020811015610c1b57600080fd5b8101908080519060200190929190505050905090565b6000806001541415610c465760009050610ca7565b60006002811115610c5357fe5b610c5b612a08565b6002811115610c6657fe5b1415610c755760019050610ca7565b600280811115610c8157fe5b610c89612a08565b6002811115610c9457fe5b14610ca25760029050610ca7565b600390505b90565b610cb333612c6d565b610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610d2e81612eb2565b50565b610d3a33612c6d565b610dac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610db46130c1565b565b600080600080600080600560010160149054906101000a900460ff16600560020160009054906101000a90046fffffffffffffffffffffffffffffffff16600560020160109054906101000a90046fffffffffffffffffffffffffffffffff16600560040160000160009054906101000a90046effffffffffffffffffffffffffffff166005600401600001600f9054906101000a900460ff16600560040160000160109054906101000a90046fffffffffffffffffffffffffffffffff16955095509550955095509550909192939495565b610e9233612c2e565b80610ea25750610ea133612c6d565b5b610f14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b610f1c61322e565b610f8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206166746572206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b600080610f99611e16565b905060008173ffffffffffffffffffffffffffffffffffffffff1663a5e139046040518163ffffffff1660e01b815260040160206040518083038186803b158015610fe357600080fd5b505afa158015610ff7573d6000803e3d6000fd5b505050506040513d602081101561100d57600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166345bdfb1e846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110dd57600080fd5b81019080805160405193929190846401000000008211156110fd57600080fd5b8382019150602082018581111561111357600080fd5b825186600182028301116401000000008211171561113057600080fd5b8083526020830192505050908051906020019080838360005b83811015611164578082015181840152602081019050611149565b50505050905090810190601f1680156111915780820380516001836020036101000a031916815260200191505b5060405250505080602001905160208110156111ac57600080fd5b8101908080519060200190929190505050905060608173ffffffffffffffffffffffffffffffffffffffff166354ed633b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561120757600080fd5b505afa15801561121b573d6000803e3d6000fd5b505050506040513d602081101561123157600080fd5b810190808051906020019092919050505030600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560010160149054906101000a900460ff16600560040160000160009054906101000a90046effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff166005600401600001600f9054906101000a900460ff16600560040160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660405180602001604052806000815250604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660028111156113dd57fe5b60ff1681526020018581526020018460028111156113f757fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611441578082015181840152602081019050611426565b50505050905090810190601f16801561146e5780820380516001836020036101000a031916815260200191505b509950505050505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508173ffffffffffffffffffffffffffffffffffffffff1663cf5ba53f826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561154557808201518184015260208101905061152a565b50505050905090810190601f1680156115725780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561159157600080fd5b505af11580156115a5573d6000803e3d6000fd5b505050506040513d60208110156115bb57600080fd5b8101908080519060200190929190505050945050505050600080611616600560010160149054906101000a900460ff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613256565b9050600061165b600560010160149054906101000a900460ff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613256565b905061167081836132cd90919063ffffffff16565b9250505060008111156117065761169a600560010160149054906101000a900460ff168383613355565b8173ffffffffffffffffffffffffffffffffffffffff1663eedad66b826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156116ed57600080fd5b505af1158015611701573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff16635e5365c16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561174e57600080fd5b505af1158015611762573d6000803e3d6000fd5b505050506040513d602081101561177857600080fd5b8101908080519060200190929190505050506000611794612a5d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611866578273ffffffffffffffffffffffffffffffffffffffff166329605e77826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561184957600080fd5b505af115801561185d573d6000803e3d6000fd5b505050506118c7565b8273ffffffffffffffffffffffffffffffffffffffff16632ab6f8db6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156118ae57600080fd5b505af11580156118c2573d6000803e3d6000fd5b505050505b6004600560030160006101000a81548160ff021916908360058111156118e957fe5b0217905550600560010160146101000a81549060ff0219169055600560020160006101000a8154906fffffffffffffffffffffffffffffffff0219169055600560020160106101000a8154906fffffffffffffffffffffffffffffffff02191690556005600401600080820160006101000a8154906effffffffffffffffffffffffffffff021916905560008201600f6101000a81549060ff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550507f8e500951de09bcc6854e88c0810bafb819503505895751e657a92df6578d3d9983604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000600280811115611a2257fe5b826002811115611a2e57fe5b1415611a4357611a3c613790565b9050611a76565b60016002811115611a5057fe5b826002811115611a5c57fe5b1415611a7157611a6a6137ac565b9050611a76565b600090505b919050565b60008054905090565b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560030160009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f73656c6c657220616c726561647920736574000000000000000000000000000081525060200191505060405180910390fd5b80600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bde612cc7565b50565b611bea336137c8565b80611bfa5750611bf933612c6d565b5b611c6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79206275796572206f72206f70657261746f720000000000000000000081525060200191505060405180910390fd5b611c7461322e565b8015611c845750611c83613807565b5b611cf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6f6e6c7920616674657220636f756e74646f776e20656e64656400000000000081525060200191505060405180910390fd5b611cfe61382e565b565b600073ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f627579657220616c72656164792073657400000000000000000000000000000081525060200191505060405180910390fd5b80600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e136139ea565b50565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611e49336137c8565b80611e595750611e5833612c6d565b5b611ecb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79206275796572206f72206f70657261746f720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6275796572206e6f74207965742073657400000000000000000000000000000081525060200191505060405180910390fd5b611f9b6139ea565b565b611fa633612c2e565b80611fb65750611fb533612c6d565b5b612028576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b612030613bd6565b6120a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f6e6c792061667465722066696e616c697a656400000000000000000000000081525060200191505060405180910390fd5b7ffdf4f8571e6f770be30bc9e95e66f21bc368a871788c0b61c32628b1a8af1157816040518080602001828103825283818151815260200191508051906020019080838360005b838110156121045780820151818401526020810190506120e9565b50505050905090810190601f1680156121315780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000600154905090565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff16146121f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806148e8602a913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461226a5788600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146122e35787600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614612321576123208a613bfe565b5b61232a87613e0c565b61239c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b86600560010160146101000a81548160ff021916908360028111156123bd57fe5b02179055506000861461248f57856fffffffffffffffffffffffffffffffff16861115612452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7061796d656e74416d6f756e7420697320746f6f206c6172676500000000000081525060200191505060405180910390fd5b85600560020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b6000851461255b57846fffffffffffffffffffffffffffffffff16851461251e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7374616b65416d6f756e7420697320746f6f206c61726765000000000000000081525060200191505060405180910390fd5b84600560020160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b61256484613e4f565b60008351146125775761257683613e90565b5b60008251146127cc57600080600084806020019051606081101561259a57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050925092509250826effffffffffffffffffffffffffffff16831461264b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f726174696f206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b806fffffffffffffffffffffffffffffffff1681146126d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f61677265656d656e74436f756e74646f776e206f7574206f6620626f756e647381525060200191505060405180910390fd5b6040518060600160405280846effffffffffffffffffffffffffffff16815260200183600281111561270057fe5b8152602001826fffffffffffffffffffffffffffffffff16815250600560040160008201518160000160006101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff160217905550602082015181600001600f6101000a81548160ff0219169083600281111561278157fe5b021790555060408201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050505050505b7f99880b4349a7b82fe6896e4e8328b90e92d300c30e31cbe61acddf287c77fdb48a8a8a8a8a8a8a8a8a604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200187600281111561289c57fe5b60ff1681526020018681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156128f65780820151818401526020810190506128db565b50505050905090810190601f1680156129235780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561295c578082015181840152602081019050612941565b50505050905090810190601f1680156129895780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a150505050505050505050565b60004260005411156129d3576129cc42600054613f2f90919063ffffffff16565b90506129d8565b600090505b90565b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000541415612a1d5760009050612a35565b426000541115612a305760019050612a35565b600290505b90565b6000612a56600560010160149054906101000a900460ff1683613f79565b9050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612a9033612c2e565b80612aa05750612a9f336137c8565b5b80612ab05750612aaf33612c6d565b5b612b22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6f6e6c792073656c6c6572206f72206275796572206f72206f70657261746f7281525060200191505060405180910390fd5b612b2a613fdf565b80612b395750612b38614006565b5b80612b485750612b4761402e565b5b612b9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149126022913960400191505060405180910390fd5b612ba561382e565b565b612bb033612c6d565b612c22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b612c2b81613e90565b50565b6000612c386129db565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b612ccf613fdf565b80612cde5750612cdd61402e565b5b612d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e206f6e6c79206465706f736974207374616b65206f6e6365000000000081525060200191505060405180910390fd5b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905060008114612dda57612dd8600560010160149054906101000a900460ff16833384614056565b505b7f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc28282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1612e4d61402e565b15612e86576003600560030160006101000a81548160ff02191690836005811115612e7457fe5b0217905550612e81610e89565b612eae565b6001600560030160006101000a81548160ff02191690836005811115612ea857fe5b02179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612f77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561301a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613186576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006003600581111561323d57fe5b613245611ab1565b600581111561325057fe5b14905090565b6000806002600085600281111561326957fe5b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506132c284848361407c565b508091505092915050565b60008082840190508381101561334b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b8261335f81613e0c565b6133d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156133dd57fe5b8460028111156133e957fe5b141561352f576133f7613790565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b384846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561347d57600080fd5b505af1158015613491573d6000803e3d6000fd5b505050506040513d60208110156134a757600080fd5b810190808051906020019092919050505061352a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e20617070726f76616c206661696c6564000000000000000000000081525060200191505060405180910390fd5b61378a565b6001600281111561353c57fe5b84600281111561354857fe5b14156137895760006135586137ac565b905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561360d57600080fd5b505afa158015613621573d6000803e3d6000fd5b505050506040513d602081101561363757600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff16639281cd658683876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019350505050602060405180830381600087803b1580156136d957600080fd5b505af11580156136ed573d6000803e3d6000fd5b505050506040513d602081101561370357600080fd5b8101908080519060200190929190505050613786576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e20617070726f76616c206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505b5b50505050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b60006137d2611a84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060038081111561381557fe5b61381d610c31565b600381111561382857fe5b14905090565b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560010160149054906101000a900460ff16905060006138a58285613f79565b146138b7576138b581848561425c565b505b60006138c38284613f79565b146138d5576138d381838461425c565b505b60058060030160006101000a81548160ff021916908360058111156138f657fe5b0217905550600560010160146101000a81549060ff0219169055600560020160006101000a8154906fffffffffffffffffffffffffffffffff0219169055600560020160106101000a8154906fffffffffffffffffffffffffffffffff02191690556005600401600080820160006101000a8154906effffffffffffffffffffffffffffff021916905560008201600f6101000a81549060ff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550507f63b958841f79ab97cb5456da181454b9932c0e15a3b17f1cbd27e2a8bc61043760405160405180910390a1505050565b6139f2613fdf565b80613a015750613a00614006565b5b613a73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e206f6e6c79206465706f736974207061796d656e74206f6e636500000081525060200191505060405180910390fd5b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560020160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905060008114613afd57613afb600560010160149054906101000a900460ff16833384614056565b505b7fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd458282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1613b70614006565b15613baa576003600560030160006101000a81548160ff02191690836005811115613b9757fe5b0217905550613ba4614283565b50613bd2565b6002600560030160006101000a81548160ff02191690836005811115613bcc57fe5b02179055505b5050565b600060046005811115613be557fe5b613bed611ab1565b6005811115613bf857fe5b14905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613cc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060016002811115613e1b57fe5b826002811115613e2757fe5b1480613e485750600280811115613e3a57fe5b826002811115613e4657fe5b145b9050919050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015613ef2578082015181840152602081019050613ed7565b50505050905090810190601f168015613f1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000613f7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142ab565b905092915050565b600060026000846002811115613f8b57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806005811115613fed57fe5b613ff5611ab1565b600581111561400057fe5b14905090565b60006001600581111561401557fe5b61401d611ab1565b600581111561402857fe5b14905090565b60006002600581111561403d57fe5b614045611ab1565b600581111561405057fe5b14905090565b600061406385858461436b565b9050614071858430856144d0565b809050949350505050565b6000806002600086600281111561408f57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015614153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6141668382613f2f90919063ffffffff16565b9150816002600087600281111561417957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f35785858585604051808560028111156141fd57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b6000806142698585613f79565b9050614277858585846146c3565b50809150509392505050565b600061429a426001546132cd90919063ffffffff16565b90506142a5816146e8565b80905090565b6000838311158290614358576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561431d578082015181840152602081019050614302565b50505050905090810190601f16801561434a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60006143db826002600087600281111561438157fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546132cd90919063ffffffff16565b905080600260008660028111156143ee57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561447257fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b836144da81613e0c565b61454c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61455585611a14565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561460f57600080fd5b505af1158015614623573d6000803e3d6000fd5b505050506040513d602081101561463957600080fd5b81019080805190602001909291905050506146bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b60006146d085858461407c565b90506146dd858484614729565b809050949350505050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261473381613e0c565b6147a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6147ae84611a14565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561483457600080fd5b505af1158015614848573d6000803e3d6000fd5b505050506040513d602081101561485e57600080fd5b81019080805190602001909291905050506148e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505056fe6d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f726f6e6c79206265666f7265206465706f736974732061726520636f6d706c65746564a265627a7a72315820a48dc2536ff86400e0076c41e766621c4a530add27463caf8864ae4331000b0364736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80637fe07abf116100de578063dac6270d11610097578063e1254fba11610071578063e1254fba1461088c578063e7f43c68146108e4578063ea8a1af01461092e578063ee57e36f146109385761018e565b8063dac6270d146107f8578063dbd0e1b614610816578063de2229fe146108605761018e565b80637fe07abf146104a957806388cc58e4146104ed578063aa5e215314610537578063b7ac763f14610541578063be1c766b146105fc578063d53000041461061a5761018e565b80634bb278f31161014b578063603daf9a11610125578063603daf9a146103e55780636234216d1461042f578063665b0a191461045b57806370dea79a1461049f5761018e565b80634bb278f31461034c5780635ad3f918146103565780635f8d96de146103c75761018e565b80630d2d76a2146101935780630ee2cb101461019d57806319fbb48e146101e757806329605e77146102135780632ab6f8db146102575780633bc5de3014610261575b600080fd5b61019b6109f3565b005b6101a5610b50565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ef610c31565b604051808260038111156101ff57fe5b60ff16815260200191505060405180910390f35b6102556004803603602081101561022957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610caa565b005b61025f610d31565b005b610269610db6565b6040518087600281111561027957fe5b60ff168152602001866fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001856fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001846effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff16815260200183600281111561030957fe5b60ff168152602001826fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b610354610e89565b005b6103856004803603602081101561036c57600080fd5b81019080803560ff169060200190929190505050611a14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103cf611a7b565b6040518082815260200191505060405180910390f35b6103ed611a84565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610437611ab1565b6040518082600581111561044757fe5b60ff16815260200191505060405180910390f35b61049d6004803603602081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611acb565b005b6104a7611be1565b005b6104eb600480360360208110156104bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d00565b005b6104f5611e16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61053f611e40565b005b6105fa6004803603602081101561055757600080fd5b810190808035906020019064010000000081111561057457600080fd5b82018360208201111561058657600080fd5b803590602001918460018302840111640100000000831117156105a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f9d565b005b610604612141565b6040518082815260200191505060405180910390f35b6107f6600480360361012081101561063157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156106d957600080fd5b8201836020820111156106eb57600080fd5b8035906020019184600183028401116401000000008311171561070d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061214b565b005b6108006129ab565b6040518082815260200191505060405180910390f35b61081e6129db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610868612a08565b6040518082600281111561087857fe5b60ff16815260200191505060405180910390f35b6108ce600480360360208110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a38565b6040518082815260200191505060405180910390f35b6108ec612a5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610936612a87565b005b6109f16004803603602081101561094e57600080fd5b810190808035906020019064010000000081111561096b57600080fd5b82018360208201111561097d57600080fd5b8035906020019184600183028401116401000000008311171561099f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612ba7565b005b6109fc33612c2e565b80610a0c5750610a0b33612c6d565b5b610a7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f73656c6c6572206e6f742079657420736574000000000000000000000000000081525060200191505060405180910390fd5b610b4e612cc7565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636bf71982306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d6020811015610c1b57600080fd5b8101908080519060200190929190505050905090565b6000806001541415610c465760009050610ca7565b60006002811115610c5357fe5b610c5b612a08565b6002811115610c6657fe5b1415610c755760019050610ca7565b600280811115610c8157fe5b610c89612a08565b6002811115610c9457fe5b14610ca25760029050610ca7565b600390505b90565b610cb333612c6d565b610d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610d2e81612eb2565b50565b610d3a33612c6d565b610dac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b610db46130c1565b565b600080600080600080600560010160149054906101000a900460ff16600560020160009054906101000a90046fffffffffffffffffffffffffffffffff16600560020160109054906101000a90046fffffffffffffffffffffffffffffffff16600560040160000160009054906101000a90046effffffffffffffffffffffffffffff166005600401600001600f9054906101000a900460ff16600560040160000160109054906101000a90046fffffffffffffffffffffffffffffffff16955095509550955095509550909192939495565b610e9233612c2e565b80610ea25750610ea133612c6d565b5b610f14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b610f1c61322e565b610f8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f6e6c79206166746572206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b600080610f99611e16565b905060008173ffffffffffffffffffffffffffffffffffffffff1663a5e139046040518163ffffffff1660e01b815260040160206040518083038186803b158015610fe357600080fd5b505afa158015610ff7573d6000803e3d6000fd5b505050506040513d602081101561100d57600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff166345bdfb1e846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156110dd57600080fd5b81019080805160405193929190846401000000008211156110fd57600080fd5b8382019150602082018581111561111357600080fd5b825186600182028301116401000000008211171561113057600080fd5b8083526020830192505050908051906020019080838360005b83811015611164578082015181840152602081019050611149565b50505050905090810190601f1680156111915780820380516001836020036101000a031916815260200191505b5060405250505080602001905160208110156111ac57600080fd5b8101908080519060200190929190505050905060608173ffffffffffffffffffffffffffffffffffffffff166354ed633b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561120757600080fd5b505afa15801561121b573d6000803e3d6000fd5b505050506040513d602081101561123157600080fd5b810190808051906020019092919050505030600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560010160149054906101000a900460ff16600560040160000160009054906101000a90046effffffffffffffffffffffffffffff166effffffffffffffffffffffffffffff166005600401600001600f9054906101000a900460ff16600560040160000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1660405180602001604052806000815250604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660028111156113dd57fe5b60ff1681526020018581526020018460028111156113f757fe5b60ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611441578082015181840152602081019050611426565b50505050905090810190601f16801561146e5780820380516001836020036101000a031916815260200191505b509950505050505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508173ffffffffffffffffffffffffffffffffffffffff1663cf5ba53f826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561154557808201518184015260208101905061152a565b50505050905090810190601f1680156115725780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561159157600080fd5b505af11580156115a5573d6000803e3d6000fd5b505050506040513d60208110156115bb57600080fd5b8101908080519060200190929190505050945050505050600080611616600560010160149054906101000a900460ff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613256565b9050600061165b600560010160149054906101000a900460ff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613256565b905061167081836132cd90919063ffffffff16565b9250505060008111156117065761169a600560010160149054906101000a900460ff168383613355565b8173ffffffffffffffffffffffffffffffffffffffff1663eedad66b826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156116ed57600080fd5b505af1158015611701573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff16635e5365c16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561174e57600080fd5b505af1158015611762573d6000803e3d6000fd5b505050506040513d602081101561177857600080fd5b8101908080519060200190929190505050506000611794612a5d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611866578273ffffffffffffffffffffffffffffffffffffffff166329605e77826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561184957600080fd5b505af115801561185d573d6000803e3d6000fd5b505050506118c7565b8273ffffffffffffffffffffffffffffffffffffffff16632ab6f8db6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156118ae57600080fd5b505af11580156118c2573d6000803e3d6000fd5b505050505b6004600560030160006101000a81548160ff021916908360058111156118e957fe5b0217905550600560010160146101000a81549060ff0219169055600560020160006101000a8154906fffffffffffffffffffffffffffffffff0219169055600560020160106101000a8154906fffffffffffffffffffffffffffffffff02191690556005600401600080820160006101000a8154906effffffffffffffffffffffffffffff021916905560008201600f6101000a81549060ff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550507f8e500951de09bcc6854e88c0810bafb819503505895751e657a92df6578d3d9983604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050565b6000600280811115611a2257fe5b826002811115611a2e57fe5b1415611a4357611a3c613790565b9050611a76565b60016002811115611a5057fe5b826002811115611a5c57fe5b1415611a7157611a6a6137ac565b9050611a76565b600090505b919050565b60008054905090565b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560030160009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f73656c6c657220616c726561647920736574000000000000000000000000000081525060200191505060405180910390fd5b80600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bde612cc7565b50565b611bea336137c8565b80611bfa5750611bf933612c6d565b5b611c6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79206275796572206f72206f70657261746f720000000000000000000081525060200191505060405180910390fd5b611c7461322e565b8015611c845750611c83613807565b5b611cf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f6f6e6c7920616674657220636f756e74646f776e20656e64656400000000000081525060200191505060405180910390fd5b611cfe61382e565b565b600073ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611dc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f627579657220616c72656164792073657400000000000000000000000000000081525060200191505060405180910390fd5b80600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e136139ea565b50565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611e49336137c8565b80611e595750611e5833612c6d565b5b611ecb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79206275796572206f72206f70657261746f720000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6275796572206e6f74207965742073657400000000000000000000000000000081525060200191505060405180910390fd5b611f9b6139ea565b565b611fa633612c2e565b80611fb65750611fb533612c6d565b5b612028576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c792073656c6c6572206f72206f70657261746f7200000000000000000081525060200191505060405180910390fd5b612030613bd6565b6120a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f6e6c792061667465722066696e616c697a656400000000000000000000000081525060200191505060405180910390fd5b7ffdf4f8571e6f770be30bc9e95e66f21bc368a871788c0b61c32628b1a8af1157816040518080602001828103825283818151815260200191508051906020019080838360005b838110156121045780820151818401526020810190506120e9565b50505050905090810190601f1680156121315780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000600154905090565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000303b905060008163ffffffff16146121f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806148e8602a913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461226a5788600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146122e35787600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614612321576123208a613bfe565b5b61232a87613e0c565b61239c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f696e76616c696420746f6b656e0000000000000000000000000000000000000081525060200191505060405180910390fd5b86600560010160146101000a81548160ff021916908360028111156123bd57fe5b02179055506000861461248f57856fffffffffffffffffffffffffffffffff16861115612452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f7061796d656e74416d6f756e7420697320746f6f206c6172676500000000000081525060200191505060405180910390fd5b85600560020160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b6000851461255b57846fffffffffffffffffffffffffffffffff16851461251e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f7374616b65416d6f756e7420697320746f6f206c61726765000000000000000081525060200191505060405180910390fd5b84600560020160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b61256484613e4f565b60008351146125775761257683613e90565b5b60008251146127cc57600080600084806020019051606081101561259a57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050925092509250826effffffffffffffffffffffffffffff16831461264b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f726174696f206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b806fffffffffffffffffffffffffffffffff1681146126d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f61677265656d656e74436f756e74646f776e206f7574206f6620626f756e647381525060200191505060405180910390fd5b6040518060600160405280846effffffffffffffffffffffffffffff16815260200183600281111561270057fe5b8152602001826fffffffffffffffffffffffffffffffff16815250600560040160008201518160000160006101000a8154816effffffffffffffffffffffffffffff02191690836effffffffffffffffffffffffffffff160217905550602082015181600001600f6101000a81548160ff0219169083600281111561278157fe5b021790555060408201518160000160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050505050505b7f99880b4349a7b82fe6896e4e8328b90e92d300c30e31cbe61acddf287c77fdb48a8a8a8a8a8a8a8a8a604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200187600281111561289c57fe5b60ff1681526020018681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156128f65780820151818401526020810190506128db565b50505050905090810190601f1680156129235780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561295c578082015181840152602081019050612941565b50505050905090810190601f1680156129895780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390a150505050505050505050565b60004260005411156129d3576129cc42600054613f2f90919063ffffffff16565b90506129d8565b600090505b90565b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000541415612a1d5760009050612a35565b426000541115612a305760019050612a35565b600290505b90565b6000612a56600560010160149054906101000a900460ff1683613f79565b9050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612a9033612c2e565b80612aa05750612a9f336137c8565b5b80612ab05750612aaf33612c6d565b5b612b22576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6f6e6c792073656c6c6572206f72206275796572206f72206f70657261746f7281525060200191505060405180910390fd5b612b2a613fdf565b80612b395750612b38614006565b5b80612b485750612b4761402e565b5b612b9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149126022913960400191505060405180910390fd5b612ba561382e565b565b612bb033612c6d565b612c22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6f6e6c79206f70657261746f720000000000000000000000000000000000000081525060200191505060405180910390fd5b612c2b81613e90565b50565b6000612c386129db565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b612ccf613fdf565b80612cde5750612cdd61402e565b5b612d50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e206f6e6c79206465706f736974207374616b65206f6e6365000000000081525060200191505060405180910390fd5b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560020160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905060008114612dda57612dd8600560010160149054906101000a900460ff16833384614056565b505b7f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc28282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1612e4d61402e565b15612e86576003600560030160006101000a81548160ff02191690836005811115612e7457fe5b0217905550612e81610e89565b612eae565b6001600560030160006101000a81548160ff02191690836005811115612ea857fe5b02179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612f77576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561301a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613186576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f6e6c79207768656e206f70657261746f72207365740000000000000000000081525060200191505060405180910390fd5b6000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec46000604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006003600581111561323d57fe5b613245611ab1565b600581111561325057fe5b14905090565b6000806002600085600281111561326957fe5b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506132c284848361407c565b508091505092915050565b60008082840190508381101561334b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b8261335f81613e0c565b6133d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6002808111156133dd57fe5b8460028111156133e957fe5b141561352f576133f7613790565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b384846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561347d57600080fd5b505af1158015613491573d6000803e3d6000fd5b505050506040513d60208110156134a757600080fd5b810190808051906020019092919050505061352a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e20617070726f76616c206661696c6564000000000000000000000081525060200191505060405180910390fd5b61378a565b6001600281111561353c57fe5b84600281111561354857fe5b14156137895760006135586137ac565b905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561360d57600080fd5b505afa158015613621573d6000803e3d6000fd5b505050506040513d602081101561363757600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff16639281cd658683876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019350505050602060405180830381600087803b1580156136d957600080fd5b505af11580156136ed573d6000803e3d6000fd5b505050506040513d602081101561370357600080fd5b8101908080519060200190929190505050613786576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e20617070726f76616c206661696c6564000000000000000000000081525060200191505060405180910390fd5b50505b5b50505050565b6000736b175474e89094c44da98b954eedeac495271d0f905090565b6000731776e1f26f98b1a5df9cd347953a26dd3cb46671905090565b60006137d2611a84565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600060038081111561381557fe5b61381d610c31565b600381111561382857fe5b14905090565b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560010160149054906101000a900460ff16905060006138a58285613f79565b146138b7576138b581848561425c565b505b60006138c38284613f79565b146138d5576138d381838461425c565b505b60058060030160006101000a81548160ff021916908360058111156138f657fe5b0217905550600560010160146101000a81549060ff0219169055600560020160006101000a8154906fffffffffffffffffffffffffffffffff0219169055600560020160106101000a8154906fffffffffffffffffffffffffffffffff02191690556005600401600080820160006101000a8154906effffffffffffffffffffffffffffff021916905560008201600f6101000a81549060ff02191690556000820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550507f63b958841f79ab97cb5456da181454b9932c0e15a3b17f1cbd27e2a8bc61043760405160405180910390a1505050565b6139f2613fdf565b80613a015750613a00614006565b5b613a73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e206f6e6c79206465706f736974207061796d656e74206f6e636500000081525060200191505060405180910390fd5b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600560020160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905060008114613afd57613afb600560010160149054906101000a900460ff16833384614056565b505b7fd348a8f42fae8db1d0030271b37ed6d94a5e292ff36db57b244ffe13f494dd458282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1613b70614006565b15613baa576003600560030160006101000a81548160ff02191690836005811115613b9757fe5b0217905550613ba4614283565b50613bd2565b6002600560030160006101000a81548160ff02191690836005811115613bcc57fe5b02179055505b5050565b600060046005811115613be557fe5b613bed611ab1565b6005811115613bf857fe5b14905090565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613cc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6f70657261746f7220616c72656164792073657400000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f63616e6e6f7420736574206f70657261746f7220746f2061646472657373203081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb3b3f5f64ab192e4b5fefde1f51ce9733bbdcf831951543b325aebd49cc27ec481604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060016002811115613e1b57fe5b826002811115613e2757fe5b1480613e485750600280811115613e3a57fe5b826002811115613e4657fe5b145b9050919050565b806001819055507f7caceb1091bbaa84d09ab116a1fd72387eaab8a33d70fc39168b9b75686ee32c816040518082815260200191505060405180910390a150565b7fbb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed816040518080602001828103825283818151815260200191508051906020019080838360005b83811015613ef2578082015181840152602081019050613ed7565b50505050905090810190601f168015613f1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6000613f7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142ab565b905092915050565b600060026000846002811115613f8b57fe5b815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806005811115613fed57fe5b613ff5611ab1565b600581111561400057fe5b14905090565b60006001600581111561401557fe5b61401d611ab1565b600581111561402857fe5b14905090565b60006002600581111561403d57fe5b614045611ab1565b600581111561405057fe5b14905090565b600061406385858461436b565b9050614071858430856144d0565b809050949350505050565b6000806002600086600281111561408f57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015614153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f696e73756666696369656e74206465706f73697420746f2072656d6f7665000081525060200191505060405180910390fd5b6141668382613f2f90919063ffffffff16565b9150816002600087600281111561417957fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f9060f8ffc7acd8270abf2337023e6377669ca44d5b2a23f3513a29380940f35785858585604051808560028111156141fd57fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1819150509392505050565b6000806142698585613f79565b9050614277858585846146c3565b50809150509392505050565b600061429a426001546132cd90919063ffffffff16565b90506142a5816146e8565b80905090565b6000838311158290614358576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561431d578082015181840152602081019050614302565b50505050905090810190601f16801561434a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60006143db826002600087600281111561438157fe5b815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546132cd90919063ffffffff16565b905080600260008660028111156143ee57fe5b815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ffe2caf3897ec3e02a1d458d232d7c62c17809d25dbfe65864ce842162d6c217c848484846040518085600281111561447257fe5b60ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a18090509392505050565b836144da81613e0c565b61454c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b61455585611a14565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561460f57600080fd5b505af1158015614623573d6000803e3d6000fd5b505050506040513d602081101561463957600080fd5b81019080805190602001909291905050506146bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505050565b60006146d085858461407c565b90506146dd858484614729565b809050949350505050565b806000819055507f337b880688eb06df8adb77036a6c8def1da2b520bc901c04b3a5a23f9ae13039816040518082815260200191505060405180910390a150565b8261473381613e0c565b6147a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f696e76616c696420746f6b656e4944000000000000000000000000000000000081525060200191505060405180910390fd5b6147ae84611a14565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561483457600080fd5b505af1158015614848573d6000803e3d6000fd5b505050506040513d602081101561485e57600080fd5b81019080805190602001909291905050506148e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5050505056fe6d7573742062652063616c6c65642077697468696e20636f6e747261637420636f6e7374727563746f726f6e6c79206265666f7265206465706f736974732061726520636f6d706c65746564a265627a7a72315820a48dc2536ff86400e0076c41e766621c4a530add27463caf8864ae4331000b0364736f6c634300050d0032",
  "sourceMap": "2518:21234:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2518:21234:4;;;;;;;",
  "deployedSourceMap": "2518:21234:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2518:21234:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9107:327;;;:::i;:::-;;1135:229:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1972:428:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18419:228:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18419:228:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;18786:204;;;:::i;:::-;;20823:499;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12863:2607;;;:::i;:::-;;555:280:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;555:280:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1035:95:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19117:91:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21962:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8484:265;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8484:265:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;17035:350;;;:::i;:::-;;10663:262;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10663:262:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1771:92:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11297:329:4;;;:::i;:::-;;15671:336;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15671:336:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15671:336:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15671:336:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15671:336:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15671:336:4;;;;;;;;;;;;;;;:::i;:::-;;1441:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5449:2220:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5449:2220:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5449:2220:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5449:2220:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5449:2220:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5449:2220:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5449:2220:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5449:2220:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5449:2220:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5449:2220:4;;;;;;;;;;;;;;;:::i;:::-;;1480:173:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19603:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1997:275:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20182:134:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20182:134:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1455:95:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16288:414:4;;;:::i;:::-;;7844:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7844:226:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7844:226:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7844:226:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7844:226:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7844:226:4;;;;;;;;;;;;;;;:::i;:::-;;9107:327;9191:20;9200:10;9191:8;:20::i;:::-;:55;;;;9215:31;9235:10;9215:19;:31::i;:::-;9191:55;9183:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9351:1;9327:26;;:5;:12;;;;;;;;;;;;:26;;;;9319:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9412:15;:13;:15::i;:::-;9107:327::o;1135:229:24:-;1178:15;1314:8;;;;;;;;;;;1305:37;;;1351:4;1305:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1305:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1305:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1305:52:24;;;;;;;;;;;;;;;;1298:59;;1135:229;:::o;1972:428:11:-;2023:22;2072:1;2061:7;;:12;2057:59;;;2094:22;2087:29;;;;2057:59;2162:21;2130:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2126:99;;;2204:21;2197:28;;;;2126:99;2271:21;2239:53;;;;;;;;:28;:26;:28::i;:::-;:53;;;;;;;;;2235:158;;2313:24;2306:31;;;;2235:158;2371:22;2364:29;;1972:428;;:::o;18419:228:4:-;18515:31;18535:10;18515:19;:31::i;:::-;18507:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18604:36;18631:8;18604:26;:36::i;:::-;18419:228;:::o;18786:204::-;18866:31;18886:10;18866:19;:31::i;:::-;18858:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18955:28;:26;:28::i;:::-;18786:204::o;20823:499::-;20872:27;20909:21;20940:19;20969:13;20992:28;21030:23;21091:5;:13;;;;;;;;;;;;21118:5;:19;;;;;;;;;;;;21151:5;:17;;;;;;;;;;;;21182:5;:21;;:27;;;;;;;;;;;;21223:5;:21;;:31;;;;;;;;;;;;21268:5;:21;;:37;;;;;;;;;;;;21070:245;;;;;;;;;;;;20823:499;;;;;;:::o;12863:2607::-;12943:20;12952:10;12943:8;:20::i;:::-;:55;;;;12967:31;12987:10;12967:19;:31::i;:::-;12943:55;12935:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13078:13;:11;:13::i;:::-;13070:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13158:17;13248:21;13272;:19;:21::i;:::-;13248:45;;13307:22;13341:13;13332:43;;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13332:45:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13332:45:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13332:45:4;;;;;;;;;;;;;;;;13307:70;;13391:24;13439:14;13429:40;;;13470:13;13429:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13429:55:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13429:55:4;;;;;;39:16:-1;36:1;17:17;2:54;13429:55:4;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13429:55:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;13429:55:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13429:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13418:78;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13418:78:4;;;;;;;;;;;;;;;;13391:105;;13557:25;13634:16;13625:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13625:44:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13625:44:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13625:44:4;;;;;;;;;;;;;;;;13695:4;13730:5;:12;;;;;;;;;;;;13771:5;:11;;;;;;;;;;;;13818:5;:13;;;;;;;;;;;;13868:5;:21;;:27;;;;;;;;;;;;13860:36;;13938:5;:21;;:31;;;;;;;;;;;;14023:5;:21;;:37;;;;;;;;;;;;14015:46;;14098:9;;;;;;;;;;;;13585:553;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13585:553:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13585:553:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;13585:553:4;13557:581;;14230:16;14221:33;;;14255:12;14221:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14221:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14221:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14221:47:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14221:47:4;;;;;;;;;;;;;;;;14209:59;;12863:2607;;;;14345:18;14387:21;14411:49;14433:5;:13;;;;;;;;;;;;14448:5;:11;;;;;;;;;;;;14411:21;:49::i;:::-;14387:73;;14474:19;14496:50;14518:5;:13;;;;;;;;;;;;14533:5;:12;;;;;;;;;;;;14496:21;:50::i;:::-;14474:72;;14573:30;14591:11;14573:13;:17;;:30;;;;:::i;:::-;14560:43;;12863:2607;;14641:1;14628:10;:14;14624:172;;;14658:59;14680:5;:13;;;;;;;;;;;;14695:9;14706:10;14658:21;:59::i;:::-;14749:9;14731:42;;;14774:10;14731:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14731:54:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14731:54:4;;;;14624:172;14862:9;14844:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14844:45:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14844:45:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14844:45:4;;;;;;;;;;;;;;;;;14929:16;14948:22;:20;:22::i;:::-;14929:41;;15004:1;14984:22;;:8;:22;;;14980:186;;15040:9;15022:45;;;15068:8;15022:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15022:55:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15022:55:4;;;;14980:186;;;15126:9;15108:45;;;:47;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15108:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15108:47:4;;;;14980:186;15216:24;15201:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;15284:5;:13;;;15277:20;;;;;;;;;;;15314:5;:19;;;15307:26;;;;;;;;;;;15350:5;:17;;;15343:24;;;;;;;;;;;15384:5;:21;;;15377:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15443:20;15453:9;15443:20;;;;;;;;;;;;;;;;;;;;;;12863:2607;;;:::o;555:280:25:-;617:20;664:10;653:21;;;;;;;;:7;:21;;;;;;;;;649:71;;;695:25;:23;:25::i;:::-;688:32;;;;649:71;745:10;734:21;;;;;;;;:7;:21;;;;;;;;;730:71;;;776:25;:23;:25::i;:::-;769:32;;;;730:71;826:1;811:17;;555:280;;;;:::o;1035:95:12:-;1079:16;1114:9;;1107:16;;1035:95;:::o;19117:91:4:-;19158:13;19190:5;:11;;;;;;;;;;;;19183:18;;19117:91;:::o;21962:105::-;22010:19;22048:5;:12;;;;;;;;;;;;22041:19;;21962:105;:::o;8484:265::-;8612:1;8588:26;;:5;:12;;;;;;;;;;;;:26;;;8580:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8685:6;8670:5;:12;;;:21;;;;;;;;;;;;;;;;;;8727:15;:13;:15::i;:::-;8484:265;:::o;17035:350::-;17114:19;17122:10;17114:7;:19::i;:::-;:54;;;;17137:31;17157:10;17137:19;:31::i;:::-;17114:54;17106:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17247:13;:11;:13::i;:::-;:35;;;;;17264:18;:16;:18::i;:::-;17247:35;17239:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17369:9;:7;:9::i;:::-;17035:350::o;10663:262::-;10788:1;10765:25;;:5;:11;;;;;;;;;;;;:25;;;10757:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10858:5;10844;:11;;;:19;;;;;;;;;;;;;;;;;;10901:17;:15;:17::i;:::-;10663:262;:::o;1771:92:24:-;1814:15;1848:8;;;;;;;;;;;1841:15;;1771:92;:::o;11297:329:4:-;11383:19;11391:10;11383:7;:19::i;:::-;:54;;;;11406:31;11426:10;11406:19;:31::i;:::-;11383:54;11375:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11540:1;11517:25;;:5;:11;;;;;;;;;;;;:25;;;;11509:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11602:17;:15;:17::i;:::-;11297:329::o;15671:336::-;15770:20;15779:10;15770:8;:20::i;:::-;:55;;;;15794:31;15814:10;15794:19;:31::i;:::-;15770:55;15762:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15905:13;:11;:13::i;:::-;15897:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15981:19;15995:4;15981:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15981:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15671:336;:::o;1441:89:11:-;1483:14;1516:7;;1509:14;;1441:89;:::o;5449:2220:4:-;601:10:24;590:8;;:21;;;;;;;;;;;;;;;;;;703:15;763:7;751:20;739:32;;802:1;790:8;:13;;;782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5845:1:4;5828:19;;:5;:19;;;5824:69;;5877:5;5863;:11;;;:19;;;;;;;;;;;;;;;;;;5824:69;5924:1;5906:20;;:6;:20;;;5902:72;;5957:6;5942:5;:12;;;:21;;;;;;;;;;;;;;;;;;5902:72;6043:1;6023:22;;:8;:22;;;6019:84;;6061:31;6083:8;6061:21;:31::i;:::-;6019:84;6142:36;6170:7;6142:27;:36::i;:::-;6134:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6222:7;6206:5;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;6303:1;6278:13;:27;6274:203;;6362:13;6346:31;;6329:13;:48;;6321:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6452:13;6422:5;:19;;;:44;;;;;;;;;;;;;;;;;;6274:203;6513:1;6490:11;:25;6486:191;;6570:11;6554:29;;6539:11;:44;6531:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6654:11;6626:5;:17;;;:40;;;;;;;;;;;;;;;;;;6486:191;6719:37;6740:15;6719:20;:37::i;:::-;6825:1;6806:8;:15;:20;6802:87;;6842:36;6869:8;6842:26;:36::i;:::-;6802:87;6971:1;6945:15;:22;:27;6941:567;;7006:13;7037:28;7083:26;7137:15;7126:67;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7126:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6988:205;;;;;;7240:5;7224:23;;7215:5;:32;7207:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7331:18;7315:36;;7293:18;:58;7285:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7426:71;;;;;;;;7450:5;7426:71;;;;;;7458:9;7426:71;;;;;;;;;;;;7477:18;7426:71;;;;;7402:5;:21;;:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6941:567;;;;7545:117;7557:8;7567:5;7574:6;7582:7;7591:13;7606:11;7619:15;7636:8;7646:15;7545:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7545:117:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7545:117:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5449:2220;;;;;;;;;;:::o;1480:173:12:-;1529:12;1569:3;1557:9;;:15;1553:93;;;1593:18;1607:3;1593:9;;:13;;:18;;;;:::i;:::-;1586:25;;;;1553:93;1645:1;1638:8;;1480:173;;:::o;19603:94:4:-;19645:14;19678:5;:12;;;;;;;;;;;;19671:19;;19603:94;:::o;1997:275:12:-;2047:21;2097:1;2084:9;;:14;2080:60;;;2119:21;2112:28;;;;2080:60;2166:3;2154:9;;:15;2150:115;;;2190:20;2183:27;;;;2150:115;2244:21;2237:28;;1997:275;;:::o;20182:134:4:-;20237:14;20270:39;20289:5;:13;;;;;;;;;;;;20304:4;20270:18;:39::i;:::-;20263:46;;20182:134;;;:::o;1455:95:18:-;1499:16;1534:9;;;;;;;;;;;1527:16;;1455:95;:::o;16288:414:4:-;16366:20;16375:10;16366:8;:20::i;:::-;:43;;;;16390:19;16398:10;16390:7;:19::i;:::-;16366:43;:78;;;;16413:31;16433:10;16413:19;:31::i;:::-;16366:78;16358:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16533:8;:6;:8::i;:::-;:32;;;;16545:20;:18;:20::i;:::-;16533:32;:58;;;;16569:22;:20;:22::i;:::-;16533:58;16525:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16686:9;:7;:9::i;:::-;16288:414::o;7844:226::-;7940:31;7960:10;7940:19;:31::i;:::-;7932:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8027:36;8054:8;8027:26;:36::i;:::-;7844:226;:::o;19874:117::-;19931:13;19973:11;:9;:11::i;:::-;19963:21;;:6;:21;;;19956:28;;19874:117;;;:::o;1556:111:18:-;1615:7;1651:9;;;;;;;;;;;1641:19;;:6;:19;;;1634:26;;1556:111;;;:::o;9440:798:4:-;9525:8;:6;:8::i;:::-;:34;;;;9537:22;:20;:22::i;:::-;9525:34;9517:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9649:14;9666:5;:12;;;;;;;;;;;;9649:29;;9688:19;9718:5;:17;;;;;;;;;;;;9710:26;;9688:48;;9806:1;9783:11;:25;9779:121;;9824:65;9842:5;:13;;;;;;;;;;;;9857:6;9865:10;9877:11;9824:17;:65::i;:::-;;9779:121;9937:35;9952:6;9960:11;9937:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;10043:22;:20;:22::i;:::-;10039:193;;;10096:24;10081:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;10134:10;:8;:10::i;:::-;10039:193;;;10190:31;10175:5;:12;;;:46;;;;;;;;;;;;;;;;;;;;;;;;10039:193;9440:798;;:::o;725:410:18:-;857:1;836:23;;:9;;;;;;;;;;;:23;;;;828:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:1;940:22;;:8;:22;;;;932:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:8;1045:9;;:20;;;;;;;;;;;;;;;;;;1103:25;1119:8;1103:25;;;;;;;;;;;;;;;;;;;;;;725:410;:::o;1141:285::-;1257:1;1236:23;;:9;;;;;;;;;;;:23;;;;1228:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:1;1332:9;;:22;;;;;;;;;;;;;;;;;;1392:27;1416:1;1392:27;;;;;;;;;;;;;;;;;;;;;;1141:285::o;23070:130:4:-;23116:13;23169:24;23148:45;;;;;;;;:17;:15;:17::i;:::-;:45;;;;;;;;;23141:52;;23070:130;:::o;3054:346:13:-;3138:21;3202:22;3227:8;:26;3244:7;3236:16;;;;;;;;3227:26;;;;;;;;;;;:32;3254:4;3227:32;;;;;;;;;;;;;;;;3202:57;;3296:47;3313:7;3322:4;3328:14;3296:16;:47::i;:::-;;3379:14;3372:21;;;3054:346;;;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3233:546:25:-;3325:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3359:10;3348:21;;;;;;;;:7;:21;;;;;;;;;3344:429;;;3400:25;:23;:25::i;:::-;3393:41;;;3435:7;3444:5;3393:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3393:57:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3393:57:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3393:57:25;;;;;;;;;;;;;;;;3385:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3344:429;;;3508:10;3497:21;;;;;;;;:7;:21;;;;;;;;;3493:280;;;3534:11;3548:25;:23;:25::i;:::-;3534:39;;3587:24;3621:3;3614:21;;;3636:10;3648:7;3614:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3614:42:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3614:42:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3614:42:25;;;;;;;;;;;;;;;;3587:69;;3683:3;3678:24;;;3703:7;3712:16;3730:5;3678:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3678:58:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3678:58:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3678:58:25;;;;;;;;;;;;;;;;3670:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:280;;;3344:429;3233:546;;;;:::o;2880:99:9:-;2930:13;526:42;2955:17;;2880:99;:::o;1501::10:-;1551:13;565:42;1576:17;;1501:99;:::o;19384:115:4:-;19440:13;19482:10;:8;:10::i;:::-;19472:20;;:6;:20;;;19465:27;;19384:115;;;:::o;3353:126:11:-;3394:13;3450:22;3426:46;;;;;;;;:20;:18;:20::i;:::-;:46;;;;;;;;;3419:53;;3353:126;:::o;17391:821:4:-;17475:14;17492:5;:12;;;;;;;;;;;;17475:29;;17514:13;17530:5;:11;;;;;;;;;;;;17514:27;;17551;17581:5;:13;;;;;;;;;;;;17551:43;;17682:1;17643:35;17662:7;17671:6;17643:18;:35::i;:::-;:40;17639:118;;17699:47;17722:7;17731:6;17739;17699:22;:47::i;:::-;;17639:118;17844:1;17806:34;17825:7;17834:5;17806:18;:34::i;:::-;:39;17802:115;;17861:45;17884:7;17893:5;17900;17861:22;:45::i;:::-;;17802:115;17967:24;17952:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;18035:5;:13;;;18028:20;;;;;;;;;;;18065:5;:19;;;18058:26;;;;;;;;;;;18101:5;:17;;;18094:24;;;;;;;;;;;18135:5;:21;;;18128:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18194:11;;;;;;;;;;17391:821;;;:::o;11632:839::-;11719:8;:6;:8::i;:::-;:32;;;;11731:20;:18;:20::i;:::-;11719:32;11711:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11843:13;11859:5;:11;;;;;;;;;;;;11843:27;;11880:21;11912:5;:19;;;;;;;;;;;;11904:28;;11880:52;;12010:1;11985:13;:27;11981:124;;12028:66;12046:5;:13;;;;;;;;;;;;12061:5;12068:10;12080:13;12028:17;:66::i;:::-;;11981:124;12142:38;12159:5;12166:13;12142:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;12268:20;:18;:20::i;:::-;12264:201;;;12319:24;12304:5;:12;;;:39;;;;;;;;;;;;;;;;;;;;;;;;12357:18;:16;:18::i;:::-;;12264:201;;;12421:33;12406:5;:12;;;:48;;;;;;;;;;;;;;;;;;;;;;;;12264:201;11632:839;;:::o;23345:130::-;23391:13;23444:24;23423:45;;;;;;;;:17;:15;:17::i;:::-;:45;;;;;;;;;23416:52;;23345:130;:::o;302:417:18:-;443:1;422:23;;:9;;;;;;;;;;;:23;;;414:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:1;524:22;;:8;:22;;;;516:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:8;629:9;;:20;;;;;;;;;;;;;;;;;;687:25;703:8;687:25;;;;;;;;;;;;;;;;;;;;;;302:417;:::o;1156:148:25:-;1219:13;1262:10;1251:21;;;;;;;;:7;:21;;;;;;;;;:46;;;;1287:10;1276:21;;;;;;;;:7;:21;;;;;;;;;1251:46;1244:53;;1156:148;;;:::o;822:110:11:-;887:6;877:7;:16;;;;908:17;918:6;908:17;;;;;;;;;;;;;;;;;;822:110;:::o;418:97:14:-;487:21;499:8;487:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;487:21:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:97;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3708:159:13:-;3794:15;3828:8;:26;3845:7;3837:16;;;;;;;;3828:26;;;;;;;;;;;:32;3855:4;3828:32;;;;;;;;;;;;;;;;3821:39;;3708:159;;;;:::o;22207:120:4:-;22248:13;22301:19;22280:40;;;;;;;;:17;:15;:17::i;:::-;:40;;;;;;;;;22273:47;;22207:120;:::o;22479:144::-;22532:13;22585:31;22564:52;;;;;;;;:17;:15;:17::i;:::-;:52;;;;;;;;;22557:59;;22479:144;:::o;22777:148::-;22832:13;22885:33;22864:54;;;;;;;;:17;:15;:17::i;:::-;:54;;;;;;;;;22857:61;;22777:148;:::o;1210:417:23:-;1329:16;1394:54;1419:7;1428:6;1436:11;1394:24;:54::i;:::-;1383:65;;1496:71;1523:7;1532:6;1548:4;1555:11;1496:26;:71::i;:::-;1612:8;1605:15;;1210:417;;;;;;:::o;2071:694:13:-;2182:18;2243:22;2268:8;:26;2285:7;2277:16;;;;;;;;2268:26;;;;;;;;;;;:32;2295:4;2268:32;;;;;;;;;;;;;;;;2243:57;;2376:14;2358;:32;;2350:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:34;2508:14;2489;:18;;:34;;;;:::i;:::-;2476:47;;2605:10;2570:8;:26;2587:7;2579:16;;;;;;;;2570:26;;;;;;;;;;;:32;2597:4;2570:32;;;;;;;;;;;;;;;:45;;;;2653:59;2670:7;2679:4;2685:14;2701:10;2653:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:10;2741:17;;;2071:694;;;;;:::o;2991:369:23:-;3097:19;3151:22;3176:35;3195:7;3204:6;3176:18;:35::i;:::-;3151:60;;3249:54;3260:7;3269:6;3277:9;3288:14;3249:10;:54::i;:::-;;3339:14;3332:21;;;2991:369;;;;;:::o;1127:164:11:-;1163:16;1202;1214:3;1202:7;;:11;;:16;;;;:::i;:::-;1191:27;;1228:31;1250:8;1228:21;:31::i;:::-;1276:8;1269:15;;1127:164;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1228:479:13:-;1336:18;1419:49;1456:11;1419:8;:26;1436:7;1428:16;;;;;;;;1419:26;;;;;;;;;;;:32;1446:4;1419:32;;;;;;;;;;;;;;;;:36;;:49;;;;:::i;:::-;1406:62;;1550:10;1515:8;:26;1532:7;1524:16;;;;;;;;1515:26;;;;;;;;;;;:32;1542:4;1515:32;;;;;;;;;;;;;;;:45;;;;1598:56;1615:7;1624:4;1630:11;1643:10;1598:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:10;1683:17;;1228:479;;;;;:::o;1939:228:25:-;2045:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:24;2095:7;2079:15;:24::i;:::-;2072:45;;;2118:4;2124:2;2128:5;2072:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:62:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2072:62:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:62:25;;;;;;;;;;;;;;;;2064:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:228;;;;;:::o;2153:408:23:-;2277:16;2342:55;2367:7;2376:6;2384:12;2342:24;:55::i;:::-;2331:66;;2445:56;2468:7;2477:9;2488:12;2445:22;:56::i;:::-;2546:8;2539:15;;2153:408;;;;;;:::o;769:122:12:-;840:8;828:9;:20;;;;863:21;875:8;863:21;;;;;;;;;;;;;;;;;;769:122;:::o;1498:200:25:-;1586:7;901:23;916:7;901:14;:23::i;:::-;893:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1620:24;1636:7;1620:15;:24::i;:::-;1613:41;;;1655:2;1659:5;1613:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1613:52:25;;;;;;;;;;;;;;;;1605:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:200;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../agreements/CountdownGriefing.sol\";\nimport \"../modules/iFactory.sol\";\nimport \"../modules/iRegistry.sol\";\nimport \"../modules/Countdown.sol\";\nimport \"../modules/Staking.sol\";\nimport \"../modules/EventMetadata.sol\";\nimport \"../modules/Operated.sol\";\nimport \"../modules/Template.sol\";\n\n/// @title CountdownGriefingEscrow\n/// @author Stephane Gosselin (@thegostep) for Numerai Inc\n/// @dev Security contact: security@numer.ai\n/// @dev Version: 1.3.0\n/// @dev State Machine: https://github.com/erasureprotocol/erasure-protocol/blob/release/v1.3.x/docs/state-machines/escrows/CountdownGriefingEscrow.png\n/// @notice This escrow allows for a buyer and a seller to deposit their stake and payment before sending it to a CountdownGriefing agreement.\n///         A new instance is initialized by the factory using the `initData` received. See the `initialize()` function for details.\n///         Notable features:\n///             - The deposited payment and stake become the stake of the agreement once the escrow is finalized.\n///             - If the buyer is not defined on creation, the first user to deposit the payment becomes the buyer.\n///             - If the seller is not defined on creation, the first user to deposit the stake becomes the seller.\n///             - Either party is able to cancel the escrow and retrieve their deposit if their counterparty never completes their deposit.\n///             - If the buyer deposits their payment after the stake has already been deposited by the seller, this starts a countdown for the seller to finalize the escrow.\n///             - If the seller does not finalize the escrow before the end of the countdown, the buyer can timeout the escrow and recover their stake.\n///             - An operator can optionally be defined to grant full permissions to a trusted external address or contract. This operator will be inherited by the spawned agreement.\n///         **Note**\n///             Given the nature of ethereum, it is possible that while a cancel request is pending, the counterparty finalizes the escrow and the deposits are transfered to the agreement.\n///             This contract is designed such that there is only two end states: deposits are returned to the buyer and the seller OR the agreement is successfully created.\n///             This is why a user CANNOT rely on the cancellation feature to always work.\ncontract CountdownGriefingEscrow is Countdown, Staking, EventMetadata, Operated, Template {\n\n    using SafeMath for uint256;\n\n    Data private _data;\n    struct Data {\n        address buyer;\n        address seller;\n        TokenManager.Tokens tokenID;\n        uint128 paymentAmount;\n        uint128 stakeAmount;\n        EscrowStatus status;\n        AgreementParams agreementParams;\n    }\n\n    struct AgreementParams {\n        uint120 ratio;\n        Griefing.RatioType ratioType;\n        uint128 countdownLength;\n    }\n\n    event Initialized(\n        address operator,\n        address buyer,\n        address seller,\n        TokenManager.Tokens tokenID,\n        uint256 paymentAmount,\n        uint256 stakeAmount,\n        uint256 countdownLength,\n        bytes metadata,\n        bytes agreementParams\n    );\n    event StakeDeposited(address seller, uint256 amount);\n    event PaymentDeposited(address buyer, uint256 amount);\n    event Finalized(address agreement);\n    event DataSubmitted(bytes data);\n    event Cancelled();\n\n    /// @notice Constructor used to initialize the escrow parameters.\n    /// @dev Access Control: only factory\n    ///      State Machine: before all\n    /// @param operator address of the operator that overrides access control. Optional parameter. Passing the address(0) will disable operator functionality.\n    /// @param buyer address of the buyer. Optional parameter. This address is the only one able to deposit the payment. If not set, the first to deposit the payment becomes the buyer.\n    /// @param seller address of the seller. Optional parameter. This address is the only one able to deposit the stake. If not set, the first to deposit the stake becomes the seller.\n    /// @param tokenID TokenManager.Tokens ID of the ERC20 token. Required parameter. This ID must be one of the IDs supported by TokenManager.\n    /// @param paymentAmount uint256 amount of tokens (18 decimals) to be deposited by buyer as payment. Required parameter. This number must fit in a uint128 for optimization reasons.\n    /// @param stakeAmount uint256 amount of tokens (18 decimals) to be deposited by seller as stake. Required parameter. This number must fit in a uint128 for optimization reasons.\n    /// @param escrowCountdown uint256 amount of time (in seconds) the seller has to finalize the escrow after the payment and stake is deposited. Required parameter.\n    /// @param metadata bytes data (any format) to emit as event on initialization. Optional parameter.\n    /// @param agreementParams bytes ABI-encoded parameters used by CountdownGriefing agreement on initialization. Required parameter.\n    ///                        This encoded data blob must contain the uint120 ratio, Griefing.RatioType ratioType, and uint128 agreementCountdown encoded as `abi.encode(ratio, ratioType, agreementCountdown)`.\n    ///                        See CountdownGriefing initialize function for additional details.\n    function initialize(\n        address operator,\n        address buyer,\n        address seller,\n        TokenManager.Tokens tokenID,\n        uint256 paymentAmount,\n        uint256 stakeAmount,\n        uint256 escrowCountdown,\n        bytes memory metadata,\n        bytes memory agreementParams\n    ) public initializeTemplate() {\n        // set participants if defined\n        if (buyer != address(0)) {\n            _data.buyer = buyer;\n        }\n        if (seller != address(0)) {\n            _data.seller = seller;\n        }\n\n        // set operator if defined\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n        }\n\n        // set token\n        require(TokenManager.isValidTokenID(tokenID), 'invalid token');\n        _data.tokenID = tokenID;\n\n        // set amounts if defined\n        if (paymentAmount != uint256(0)) {\n            require(paymentAmount <= uint256(uint128(paymentAmount)), \"paymentAmount is too large\");\n            _data.paymentAmount = uint128(paymentAmount);\n        }\n        if (stakeAmount != uint256(0)) {\n            require(stakeAmount == uint256(uint128(stakeAmount)), \"stakeAmount is too large\");\n            _data.stakeAmount = uint128(stakeAmount);\n        }\n\n        // set countdown length\n        Countdown._setLength(escrowCountdown);\n\n        // set metadata if defined\n        if (metadata.length != 0) {\n            EventMetadata._setMetadata(metadata);\n        }\n\n        // set agreementParams if defined\n        if (agreementParams.length != 0) {\n            (\n                uint256 ratio,\n                Griefing.RatioType ratioType,\n                uint256 agreementCountdown\n            ) = abi.decode(agreementParams, (uint256, Griefing.RatioType, uint256));\n            require(ratio == uint256(uint120(ratio)), \"ratio out of bounds\");\n            require(agreementCountdown == uint256(uint128(agreementCountdown)), \"agreementCountdown out of bounds\");\n            _data.agreementParams = AgreementParams(uint120(ratio), ratioType, uint128(agreementCountdown));\n        }\n\n        // emit event\n        emit Initialized(operator, buyer, seller, tokenID, paymentAmount, stakeAmount, escrowCountdown, metadata, agreementParams);\n    }\n\n    /// @notice Emit metadata event.\n    /// @dev Access Control: operator\n    ///      State Machine: always\n    /// @param metadata Data (any format) to emit as event\n    function setMetadata(bytes memory metadata) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // update metadata\n        EventMetadata._setMetadata(metadata);\n    }\n\n    /// @notice Deposit Stake and set seller address.\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount.\n    ///          - if buyer already deposited the payment, finalize the escrow.\n    /// @dev Access Control: anyone\n    ///      State Machine: before finalize() OR before cancel()\n    /// @param seller address of the seller\n    function depositAndSetSeller(address seller) public {\n        // restrict state machine\n        require(_data.seller == address(0), \"seller already set\");\n\n        // set seller\n        _data.seller = seller;\n\n        // deposit stake\n        _depositStake();\n    }\n\n    /// @notice Deposit Stake.\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount.\n    ///          - if buyer already deposited the payment, finalize the escrow.\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: before finalize() OR before cancel()\n    function depositStake() public {\n        // restrict access control\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n\n        // restrict state machine\n        require(_data.seller != address(0), \"seller not yet set\");\n\n        // deposit stake\n        _depositStake();\n    }\n\n    function _depositStake() private {\n        // restrict state machine\n        require(isOpen() || onlyPaymentDeposited(), \"can only deposit stake once\");\n\n        // declare storage variables in memory\n        address seller = _data.seller;\n        uint256 stakeAmount = uint256(_data.stakeAmount);\n\n        // Add the stake amount\n        if (stakeAmount != uint256(0)) {\n            Staking._addStake(_data.tokenID, seller, msg.sender, stakeAmount);\n        }\n\n        // emit event\n        emit StakeDeposited(seller, stakeAmount);\n\n        // If payment is deposited, finalize the escrow\n        if (onlyPaymentDeposited()) {\n            _data.status = EscrowStatus.isDeposited;\n            finalize();\n        } else {\n            _data.status = EscrowStatus.onlyStakeDeposited;\n        }\n    }\n\n    /// @notice Deposit Payment and set buyer address.\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount.\n    ///          - if seller already deposited the stake, start the finalization countdown.\n    /// @dev Access Control: anyone\n    ///      State Machine: before finalize() OR before cancel()\n    /// @param buyer address of the buyer\n    function depositAndSetBuyer(address buyer) public {\n        // restrict state machine\n        require(_data.buyer == address(0), \"buyer already set\");\n\n        // set buyer\n        _data.buyer = buyer;\n\n        // deposit payment\n        _depositPayment();\n    }\n\n    /// @notice Deposit Payment.\n    ///          - tokens (ERC-20) are transfered from the caller and requires approval of this contract for appropriate amount.\n    ///          - if seller already deposited the stake, start the finalization countdown.\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: before finalize() OR before cancel()\n    function depositPayment() public {\n        // restrict access control\n        require(isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only buyer or operator\");\n\n        // restrict state machine\n        require(_data.buyer != address(0), \"buyer not yet set\");\n\n        // deposit payment\n        _depositPayment();\n    }\n\n    function _depositPayment() private {\n        // restrict state machine\n        require(isOpen() || onlyStakeDeposited(), \"can only deposit payment once\");\n\n        // declare storage variables in memory\n        address buyer = _data.buyer;\n        uint256 paymentAmount = uint256(_data.paymentAmount);\n\n        // Add the payment as a stake\n        if (paymentAmount != uint256(0)) {\n            Staking._addStake(_data.tokenID, buyer, msg.sender, paymentAmount);\n        }\n\n        // emit event\n        emit PaymentDeposited(buyer, paymentAmount);\n\n        // If stake is deposited, start countdown for seller to finalize\n        if (onlyStakeDeposited()) {\n            _data.status = EscrowStatus.isDeposited;\n            Countdown._start();\n        } else {\n            _data.status = EscrowStatus.onlyPaymentDeposited;\n        }\n    }\n\n    /// @notice Finalize escrow and execute completion script\n    ///          - create the agreement\n    ///          - transfer deposited stake and payment to agreement\n    ///          - start agreement countdown\n    ///          - disable agreement operator\n    /// @dev Access Control: seller OR operator\n    ///      State Machine: after depositStake() AND after depositPayment()\n    function finalize() public {\n        // restrict access control\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n        // restrict state machine\n        require(isDeposited(), \"only after deposit\");\n\n        // create the agreement\n\n        address agreement;\n        {\n            // get the agreement factory address\n            address escrowFactory = Template.getFactory();\n            address escrowRegistry = iFactory(escrowFactory).getInstanceRegistry();\n            address agreementFactory = abi.decode(iRegistry(escrowRegistry).getFactoryData(escrowFactory), (address));\n\n            // encode initialization function\n            bytes memory initCalldata = abi.encodeWithSelector(\n                iFactory(agreementFactory).getInitSelector(),\n                address(this), // operator\n                _data.seller,  // staker\n                _data.buyer,   // counterparty\n                _data.tokenID, // tokenID\n                uint256(_data.agreementParams.ratio),           // griefRatio\n                _data.agreementParams.ratioType,                // ratioType\n                uint256(_data.agreementParams.countdownLength), // countdownLength\n                bytes(\"\")      // metadata\n            );\n\n            // deploy and initialize agreement contract\n            agreement = iFactory(agreementFactory).create(initCalldata);\n        }\n\n        // transfer stake and payment to the agreement\n\n        uint256 totalStake;\n        {\n            uint256 paymentAmount = Deposit._clearDeposit(_data.tokenID, _data.buyer);\n            uint256 stakeAmount = Deposit._clearDeposit(_data.tokenID, _data.seller);\n            totalStake = paymentAmount.add(stakeAmount);\n        }\n\n        if (totalStake > 0) {\n            TokenManager._approve(_data.tokenID, agreement, totalStake);\n            CountdownGriefing(agreement).increaseStake(totalStake);\n        }\n\n        // start agreement countdown\n\n        CountdownGriefing(agreement).startCountdown();\n\n        // transfer operator\n        address operator = Operated.getOperator();\n        if (operator != address(0)) {\n            CountdownGriefing(agreement).transferOperator(operator);\n        } else {\n            CountdownGriefing(agreement).renounceOperator();\n        }\n\n        // update status\n        _data.status = EscrowStatus.isFinalized;\n\n        // delete storage\n        delete _data.tokenID;\n        delete _data.paymentAmount;\n        delete _data.stakeAmount;\n        delete _data.agreementParams;\n\n        // emit event\n        emit Finalized(agreement);\n    }\n\n    /// @notice Submit data to the buyer\n    /// @dev Access Control: seller OR operator\n    ///      State Machine: after finalize()\n    /// @param data Data (any format) to submit to the buyer\n    function submitData(bytes memory data) public {\n        // restrict access control\n        require(isSeller(msg.sender) || Operated.isOperator(msg.sender), \"only seller or operator\");\n        // restrict state machine\n        require(isFinalized(), \"only after finalized\");\n\n        // emit event\n        emit DataSubmitted(data);\n    }\n\n    /// @notice Cancel escrow because no interested counterparty\n    ///          - return deposit to caller\n    ///          - close escrow\n    /// @dev Access Control: seller OR buyer OR operator\n    ///      State Machine: before depositStake() OR before depositPayment()\n    function cancel() public {\n        // restrict access control\n        require(isSeller(msg.sender) || isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only seller or buyer or operator\");\n        // restrict state machine\n        require(isOpen() || onlyStakeDeposited() || onlyPaymentDeposited(), \"only before deposits are completed\");\n\n        // cancel escrow and return deposits\n        _cancel();\n    }\n\n    /// @notice Cancel escrow if seller does not finalize\n    ///          - return stake to seller\n    ///          - return payment to buyer\n    ///          - close escrow\n    /// @dev Access Control: buyer OR operator\n    ///      State Machine: after depositStake() AND after depositPayment() AND after Countdown.isOver()\n    function timeout() public {\n        // restrict access control\n        require(isBuyer(msg.sender) || Operated.isOperator(msg.sender), \"only buyer or operator\");\n        // restrict state machine\n        require(isDeposited() && Countdown.isOver(), \"only after countdown ended\");\n\n        // cancel escrow and return deposits\n        _cancel();\n    }\n\n    function _cancel() private {\n        // declare storage variables in memory\n        address seller = _data.seller;\n        address buyer = _data.buyer;\n        TokenManager.Tokens tokenID = _data.tokenID;\n\n        // return stake to seller\n        if (Deposit.getDeposit(tokenID, seller) != 0) {\n            Staking._takeFullStake(tokenID, seller, seller);\n        }\n\n        // return payment to buyer\n        if (Deposit.getDeposit(tokenID, buyer) != 0) {\n            Staking._takeFullStake(tokenID, buyer, buyer);\n        }\n\n        // update status\n        _data.status = EscrowStatus.isCancelled;\n\n        // delete storage\n        delete _data.tokenID;\n        delete _data.paymentAmount;\n        delete _data.stakeAmount;\n        delete _data.agreementParams;\n\n        // emit event\n        emit Cancelled();\n    }\n\n    /// @notice Called by the operator to transfer control to new operator\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    /// @param operator Address of the new operator\n    function transferOperator(address operator) public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // transfer operator\n        Operated._transferOperator(operator);\n    }\n\n    /// @notice Called by the operator to renounce control\n    /// @dev Access Control: operator\n    ///      State Machine: anytime\n    function renounceOperator() public {\n        // restrict access\n        require(Operated.isOperator(msg.sender), \"only operator\");\n\n        // renounce operator\n        Operated._renounceOperator();\n    }\n\n    /// View functions\n\n    /// @notice Get the address of the buyer (if set)\n    /// @return buyer address of the buyer\n    function getBuyer() public view returns (address buyer) {\n        return _data.buyer;\n    }\n\n    /// @notice Validate if the address matches the stored buyer address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isBuyer(address caller) internal view returns (bool validity) {\n        return caller == getBuyer();\n    }\n\n    /// @notice Get the address of the seller (if set)\n    /// @return buyer address of the buyer\n    function getSeller() public view returns (address seller) {\n        return _data.seller;\n    }\n\n    /// @notice Validate if the address matches the stored seller address\n    /// @param caller address to validate\n    /// @return validity bool true if matching address\n    function isSeller(address caller) internal view returns (bool validity) {\n        return caller == getSeller();\n    }\n\n    /// @notice Return the amount of tokens deposited by the user\n    /// @param user address of the user to query the deposit\n    /// @return amount uint256 amount of tokens deposited\n    function getDeposit(address user) public view returns (uint256 amount) {\n        return Deposit.getDeposit(_data.tokenID, user);\n    }\n\n    /// @notice Get the data from storage.\n    /// @return tokenID TokenManager.Tokens ID of the ERC20 token.\n    /// @return uint128 paymentAmount set in initialization.\n    /// @return uint128 stakeAmount set in initialization.\n    /// @return uint120 ratio used for initialization of agreement on completion.\n    /// @return Griefing.RatioType ratioType used for initialization of agreement on completion.\n    /// @return uint128 countdownLength used for initialization of agreement on completion.\n    function getData() public view returns (\n        TokenManager.Tokens tokenID,\n        uint128 paymentAmount,\n        uint128 stakeAmount,\n        uint120 ratio,\n        Griefing.RatioType ratioType,\n        uint128 countdownLength\n    ) {\n        return (\n            _data.tokenID,\n            _data.paymentAmount,\n            _data.stakeAmount,\n            _data.agreementParams.ratio,\n            _data.agreementParams.ratioType,\n            _data.agreementParams.countdownLength\n        );\n    }\n\n    enum EscrowStatus { isOpen, onlyStakeDeposited, onlyPaymentDeposited, isDeposited, isFinalized, isCancelled }\n    /// @notice Return the status of the state machine\n    /// @return EscrowStatus status from of the following states:\n    ///          - isOpen: initialized but no deposits made\n    ///          - onlyStakeDeposited: only stake deposit completed\n    ///          - onlyPaymentDeposited: only payment deposit completed\n    ///          - isDeposited: both payment and stake deposit is completed\n    ///          - isFinalized: the escrow completed successfully\n    ///          - isCancelled: the escrow was cancelled\n    function getEscrowStatus() public view returns (EscrowStatus status) {\n        return _data.status;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.isOpen state\n    /// @return validity bool true if correct state\n    function isOpen() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isOpen;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.onlyStakeDeposited state\n    /// @return validity bool true if correct state\n    function onlyStakeDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.onlyStakeDeposited;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.onlyPaymentDeposited state\n    /// @return validity bool true if correct state\n    function onlyPaymentDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.onlyPaymentDeposited;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.isDeposited state\n    /// @return validity bool true if correct state\n    function isDeposited() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isDeposited;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.isFinalized state\n    /// @return validity bool true if correct state\n    function isFinalized() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isFinalized;\n    }\n\n    /// @notice Validate if the state machine is in the EscrowStatus.isCancelled state\n    /// @return validity bool true if correct state\n    function isCancelled() internal view returns (bool validity) {\n        return getEscrowStatus() == EscrowStatus.isCancelled;\n    }\n}\n"
}