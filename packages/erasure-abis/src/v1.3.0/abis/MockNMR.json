{
  "contractName": "MockNMR",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mintMockTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_oldValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newValue",
          "type": "uint256"
        }
      ],
      "name": "changeApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "numeraiTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040518060400160405280600981526020017f4e756d657261697265000000000000000000000000000000000000000000000081525060009080519060200190620000519291906200032f565b506040518060400160405280600381526020017f4e4d520000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f9291906200032f565b506012600255600254600a0a61271002600355348015620000bf57600080fd5b50620000d433600354620000da60201b60201c565b620003de565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200017e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200019a81600654620002a660201b620013e41790919060201c565b600681905550620001f981600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002a660201b620013e41790919060201c565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037257805160ff1916838001178555620003a3565b82800160010185558215620003a3579182015b82811115620003a257825182559160200191906001019062000385565b5b509050620003b29190620003b6565b5090565b620003db91905b80821115620003d7576000816000905550600101620003bd565b5090565b90565b61196c80620003ee6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461044c578063a0712d68146104cf578063a9059cbb14610515578063dd62ed3e1461057b576100ea565b806370a082311461031e5780637c8d56b8146103765780639281cd65146103dc576100ea565b806323b872dd116100c857806323b872dd146101f65780632ff2e9dc1461027c578063313ce5671461029a5780635b2ae25b146102b8576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b604051808215151515815260200191505060405180910390f35b6101e061082d565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610837565b604051808215151515815260200191505060405180910390f35b610284610c6f565b6040518082815260200191505060405180910390f35b6102a2610c75565b6040518082815260200191505060405180910390f35b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7b565b604051808215151515815260200191505060405180910390f35b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cda565b604051808215151515815260200191505060405180910390f35b610432600480360360608110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610e33565b604051808215151515815260200191505060405180910390f35b610454610fc4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fb600480360360208110156104e557600080fd5b8101908080359060200190929190505050611062565b604051808215151515815260200191505060405180910390f35b6105616004803603604081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611116565b604051808215151515815260200191505060405180910390f35b6105dd6004803603604081101561059157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611313565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b505050505081565b60006002600460208202016000369050146106a857fe5b600083148061073357506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61073c57600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000600654905090565b600060036004602082020160003690501461084e57fe5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561088757600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d357600080fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e73756666696369656e7420616c6c6f77616e63650000000000000000000081525060200191505060405180910390fd5b610a1783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae983600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbb83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60035481565b60025481565b6000610c87838361146c565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260046020820201600036905014610cf157fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d2f5760009150610e2c565b826006541015610d425760009150610e2c565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d925760009150610e2c565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e1f5760009150610e2c565b610e298484611629565b91505b5092915050565b6000600360046020820201600036905014610e4a57fe5b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ed257600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a360019150509392505050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110a15760009050611111565b8160065410156110b45760009050611111565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111045760009050611111565b61110e33836117a8565b90505b919050565b600060026004602082020160003690501461112d57fe5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561117957600080fd5b6111cb83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006113dc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611877565b905092915050565b600080828401905083811015611462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561150f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611524816006546113e490919063ffffffff16565b60068190555061157c81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36117a083836117a8565b905092915050565b60008160066000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000838311158290611924576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118e95780820151818401526020810190506118ce565b50505050905090810190601f1680156119165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a7231582081aea6dfc33305ca12934a3f6013f7a8d7b0bad96c3ce729d3f03251b76ffa3764736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461044c578063a0712d68146104cf578063a9059cbb14610515578063dd62ed3e1461057b576100ea565b806370a082311461031e5780637c8d56b8146103765780639281cd65146103dc576100ea565b806323b872dd116100c857806323b872dd146101f65780632ff2e9dc1461027c578063313ce5671461029a5780635b2ae25b146102b8576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b604051808215151515815260200191505060405180910390f35b6101e061082d565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610837565b604051808215151515815260200191505060405180910390f35b610284610c6f565b6040518082815260200191505060405180910390f35b6102a2610c75565b6040518082815260200191505060405180910390f35b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7b565b604051808215151515815260200191505060405180910390f35b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cda565b604051808215151515815260200191505060405180910390f35b610432600480360360608110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610e33565b604051808215151515815260200191505060405180910390f35b610454610fc4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fb600480360360208110156104e557600080fd5b8101908080359060200190929190505050611062565b604051808215151515815260200191505060405180910390f35b6105616004803603604081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611116565b604051808215151515815260200191505060405180910390f35b6105dd6004803603604081101561059157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611313565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b505050505081565b60006002600460208202016000369050146106a857fe5b600083148061073357506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61073c57600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000600654905090565b600060036004602082020160003690501461084e57fe5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561088757600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d357600080fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e73756666696369656e7420616c6c6f77616e63650000000000000000000081525060200191505060405180910390fd5b610a1783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae983600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbb83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60035481565b60025481565b6000610c87838361146c565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260046020820201600036905014610cf157fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d2f5760009150610e2c565b826006541015610d425760009150610e2c565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d925760009150610e2c565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e1f5760009150610e2c565b610e298484611629565b91505b5092915050565b6000600360046020820201600036905014610e4a57fe5b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ed257600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a360019150509392505050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110a15760009050611111565b8160065410156110b45760009050611111565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111045760009050611111565b61110e33836117a8565b90505b919050565b600060026004602082020160003690501461112d57fe5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561117957600080fd5b6111cb83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006113dc83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611877565b905092915050565b600080828401905083811015611462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561150f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611524816006546113e490919063ffffffff16565b60068190555061157c81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113e490919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36117a083836117a8565b905092915050565b60008160066000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000838311158290611924576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118e95780820151818401526020810190506118ce565b50505050905090810190601f1680156119165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a7231582081aea6dfc33305ca12934a3f6013f7a8d7b0bad96c3ce729d3f03251b76ffa3764736f6c634300050d0032",
  "sourceMap": "137:4387:37:-;;;204:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;242:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;303:2;277:28;;366:8;;352:2;:23;343:5;:33;311:65;;666:72;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:72:37;698:33;704:10;716:14;;698:5;;;:33;;:::i;:::-;137:4387;;877:298;970:1;951:21;;:7;:21;;;;943:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:23;1051:5;1034:12;;:16;;;;;;:23;;;;:::i;:::-;1019:12;:38;;;;1088:29;1111:5;1088:9;:18;1098:7;1088:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;:::i;:::-;1067:9;:18;1077:7;1067:18;;;;;;;;;;;;;;;:50;;;;1153:7;1132:36;;1149:1;1132:36;;;1162:5;1132:36;;;;;;;;;;;;;;;;;;877:298;;:::o;834:176:52:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;137:4387:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "137:4387:37:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:4387:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;204:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;204:32:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2636:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2636:304:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1195:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1959:671;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1959:671:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;311:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;277:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;744:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:127:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1290:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1290:104:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3616:406;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3616:406:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2946:328;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2946:328:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;242:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;242:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3292:302;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3292:302:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1538:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1538:415:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1400:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1400:132:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;204:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2636:304::-;2722:7;2710:1;640;635:2;624:8;:13;:17;605:8;;:15;;:36;598:44;;;;2760:1;2750:6;:11;2749:57;;;;2804:1;2767:11;:23;2779:10;2767:23;;;;;;;;;;;;;;;:33;2791:8;2767:33;;;;;;;;;;;;;;;;:38;2749:57;2741:66;;;;;;2853:6;2817:11;:23;2829:10;2817:23;;;;;;;;;;;;;;;:33;2841:8;2817:33;;;;;;;;;;;;;;;:42;;;;2895:8;2874:38;;2883:10;2874:38;;;2905:6;2874:38;;;;;;;;;;;;;;;;;;2929:4;2922:11;;2636:304;;;;;:::o;1195:89::-;1239:7;1265:12;;1258:19;;1195:89;:::o;1959:671::-;2060:7;2048:1;640;635:2;624:8;:13;:17;605:8;;:15;;:36;598:44;;;;2104:4;2087:22;;:5;:22;;;;2079:31;;;;;;2188:6;2168:9;:16;2178:5;2168:16;;;;;;;;;;;;;;;;:26;;2160:35;;;;;;2292:6;2258:11;:18;2270:5;2258:18;;;;;;;;;;;;;;;:30;2277:10;2258:30;;;;;;;;;;;;;;;;:40;;2250:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:28;2376:6;2355:9;:16;2365:5;2355:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;2336:9;:16;2346:5;2336:16;;;;;;;;;;;;;;;:47;;;;2426:42;2461:6;2426:11;:18;2438:5;2426:18;;;;;;;;;;;;;;;:30;2445:10;2426:30;;;;;;;;;;;;;;;;:34;;:42;;;;:::i;:::-;2393:11;:18;2405:5;2393:18;;;;;;;;;;;;;;;:30;2412:10;2393:30;;;;;;;;;;;;;;;:75;;;;2495:26;2514:6;2495:9;:14;2505:3;2495:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;2478:9;:14;2488:3;2478:14;;;;;;;;;;;;;;;:43;;;;2589:3;2573:28;;2582:5;2573:28;;;2594:6;2573:28;;;;;;;;;;;;;;;;;;2619:4;2612:11;;1959:671;;;;;;:::o;311:65::-;;;;:::o;277:28::-;;;;:::o;744:127::-;811:4;827:16;833:2;837:5;827;:16::i;:::-;860:4;853:11;;744:127;;;;:::o;1290:104::-;1345:7;1371:9;:16;1381:5;1371:16;;;;;;;;;;;;;;;;1364:23;;1290:104;;;:::o;3616:406::-;3705:7;3693:1;640;635:2;624:8;:13;:17;605:8;;:15;;:36;598:44;;;;3743:1;3728:17;;:3;:17;;;3724:47;;;3766:5;3759:12;;;;3724:47;3801:6;3786:12;;:21;3782:51;;;3828:5;3821:12;;;;3782:51;3865:6;3848:9;:14;3858:3;3848:14;;;;;;;;;;;;;;;;:23;3844:53;;;3892:5;3885:12;;;;3844:53;3943:6;3912:11;:16;3924:3;3912:16;;;;;;;;;;;;;;;:28;3929:10;3912:28;;;;;;;;;;;;;;;;:37;3908:67;;;3970:5;3963:12;;;;3908:67;3993:22;4003:3;4008:6;3993:9;:22::i;:::-;3986:29;;652:1;3616:406;;;;;:::o;2946:328::-;3061:7;3049:1;640;635:2;624:8;:13;:17;605:8;;:15;;:36;598:44;;;;3125:9;3088:11;:23;3100:10;3088:23;;;;;;;;;;;;;;;:33;3112:8;3088:33;;;;;;;;;;;;;;;;:46;3080:55;;;;;;3181:9;3145:11;:23;3157:10;3145:23;;;;;;;;;;;;;;;:33;3169:8;3145:33;;;;;;;;;;;;;;;:45;;;;3226:8;3205:41;;3214:10;3205:41;;;3236:9;3205:41;;;;;;;;;;;;;;;;;;3263:4;3256:11;;2946:328;;;;;;:::o;242:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3292:302::-;3338:7;3383:1;3361:24;;:10;:24;;;3357:54;;;3406:5;3399:12;;;;3357:54;3441:6;3426:12;;:21;3422:51;;;3468:5;3461:12;;;;3422:51;3512:6;3488:9;:21;3498:10;3488:21;;;;;;;;;;;;;;;;:30;3484:60;;;3539:5;3532:12;;;;3484:60;3562:25;3568:10;3580:6;3562:5;:25::i;:::-;3555:32;;3292:302;;;;:::o;1538:415::-;1620:7;1608:1;640;635:2;624:8;:13;:17;605:8;;:15;;:36;598:44;;;;1711:6;1686:9;:21;1696:10;1686:21;;;;;;;;;;;;;;;;:31;;1678:40;;;;;;1753:33;1779:6;1753:9;:21;1763:10;1753:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;1729:9;:21;1739:10;1729:21;;;;;;;;;;;;;;;:57;;;;1813:26;1832:6;1813:9;:14;1823:3;1813:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;1796:9;:14;1806:3;1796:14;;;;;;;;;;;;;;;:43;;;;1912:3;1891:33;;1900:10;1891:33;;;1917:6;1891:33;;;;;;;;;;;;;;;;;;1942:4;1935:11;;1538:415;;;;;:::o;1400:132::-;1472:7;1498:11;:18;1510:5;1498:18;;;;;;;;;;;;;;;:27;1517:7;1498:27;;;;;;;;;;;;;;;;1491:34;;1400:132;;;;:::o;1274:134:52:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;877:298:37:-;970:1;951:21;;:7;:21;;;;943:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:23;1051:5;1034:12;;:16;;:23;;;;:::i;:::-;1019:12;:38;;;;1088:29;1111:5;1088:9;:18;1098:7;1088:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;1067:9;:18;1077:7;1067:18;;;;;;;;;;;;;;;:50;;;;1153:7;1132:36;;1149:1;1132:36;;;1162:5;1132:36;;;;;;;;;;;;;;;;;;877:298;;:::o;4262:260::-;4333:7;4389:6;4352:11;:21;4364:8;4352:21;;;;;;;;;;;;;;;:33;4374:10;4352:33;;;;;;;;;;;;;;;;:43;;;;;;;;;;;4429:10;4410:65;;4419:8;4410:65;;;4441:11;:21;4453:8;4441:21;;;;;;;;;;;;;;;:33;4463:10;4441:33;;;;;;;;;;;;;;;;4410:65;;;;;;;;;;;;;;;;;;4492:23;4498:8;4508:6;4492:5;:23::i;:::-;4485:30;;4262:260;;;;:::o;4028:228::-;4095:7;4130:6;4114:12;;:22;;;;;;;;;;;4169:6;4146:9;:19;4156:8;4146:19;;;;;;;;;;;;;;;;:29;;;;;;;;;;;4217:1;4190:38;;4199:8;4190:38;;;4221:6;4190:38;;;;;;;;;;;;;;;;;;4245:4;4238:11;;4028:228;;;;:::o;1732:187:52:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\n\n\ncontract MockNMR is IERC20 {\n\n    using SafeMath for uint256;\n\n    string public name = \"Numeraire\";\n    string public symbol = \"NMR\";\n\n    uint256 public decimals = 18;\n    uint256 public INITIAL_SUPPLY = 10000 * (10 ** uint256(decimals));\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n\n    modifier onlyPayloadSize(uint256 numWords) {\n        assert(msg.data.length == numWords * 32 + 4);\n        _;\n    }\n\n    constructor () public {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    function mintMockTokens(address to, uint256 value) public returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    // ERC20\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        // Check for sufficient funds.\n        require(_balances[msg.sender] >= _value);\n\n        _balances[msg.sender] = _balances[msg.sender].sub(_value);\n        _balances[_to] = _balances[_to].add(_value);\n\n        // Notify anyone listening.\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool ok) {\n        require(_from != address(this));\n\n        // Check for sufficient funds.\n        require(_balances[_from] >= _value);\n        // Check for authorization to spend.\n        require(_allowances[_from][msg.sender] >= _value, \"insufficient allowance\");\n\n        _balances[_from] = _balances[_from].sub(_value);\n        _allowances[_from][msg.sender] = _allowances[_from][msg.sender].sub(_value);\n        _balances[_to] = _balances[_to].add(_value);\n\n        // Notify anyone listening.\n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        require((_value == 0) || (_allowances[msg.sender][_spender] == 0));\n        _allowances[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function changeApproval(address _spender, uint256 _oldValue, uint256 _newValue) public onlyPayloadSize(3) returns (bool ok) {\n        require(_allowances[msg.sender][_spender] == _oldValue);\n        _allowances[msg.sender][_spender] = _newValue;\n        emit Approval(msg.sender, _spender, _newValue);\n        return true;\n    }\n\n    // burn\n    function mint(uint256 _value) public returns (bool ok) {\n        if (msg.sender == address(0))\n            return false;\n\n        if (_totalSupply < _value)\n            return false;\n\n        if (_balances[msg.sender] < _value)\n            return false;\n\n        return _burn(msg.sender, _value);\n    }\n\n    // burnFrom\n    function numeraiTransfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        if (_to == address(0))\n            return false;\n\n        if (_totalSupply < _value)\n            return false;\n\n        if (_balances[_to] < _value)\n            return false;\n\n        if (_allowances[_to][msg.sender] < _value)\n            return false;\n\n        return _burnFrom(_to, _value);\n    }\n\n    function _burn(address _account, uint256 _value) internal returns (bool ok) {\n        _totalSupply -= _value;\n        _balances[_account] -= _value;\n        emit Transfer(_account, address(0), _value);\n        return true;\n    }\n\n    function _burnFrom(address _account, uint256 _value) internal returns (bool ok) {\n        _allowances[_account][msg.sender] -= _value;\n        emit Approval(_account, msg.sender, _allowances[_account][msg.sender]);\n        return _burn(_account, _value);\n    }\n}\n"
  }