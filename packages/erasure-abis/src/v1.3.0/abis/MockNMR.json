{
  "contractName": "MockNMR",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mintMockTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_oldValue",
          "type": "uint256"
        },
        {
          "name": "_newValue",
          "type": "uint256"
        }
      ],
      "name": "changeApproval",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "numeraiTransfer",
      "outputs": [
        {
          "name": "ok",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040518060400160405280600981526020017f4e756d657261697265000000000000000000000000000000000000000000000081525060009080519060200190620000519291906200032f565b506040518060400160405280600381526020017f4e4d520000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f9291906200032f565b506012600255600254600a0a61271002600355348015620000bf57600080fd5b50620000d433600354620000da60201b60201c565b620003de565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200017e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200019a81600654620002a660201b620014231790919060201c565b600681905550620001f981600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002a660201b620014231790919060201c565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037257805160ff1916838001178555620003a3565b82800160010185558215620003a3579182015b82811115620003a257825182559160200191906001019062000385565b5b509050620003b29190620003b6565b5090565b620003db91905b80821115620003d7576000816000905550600101620003bd565b5090565b90565b6118e280620003ee6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461044c578063a0712d68146104cf578063a9059cbb14610515578063dd62ed3e1461057b576100ea565b806370a082311461031e5780637c8d56b8146103765780639281cd65146103dc576100ea565b806323b872dd116100c857806323b872dd146101f65780632ff2e9dc1461027c578063313ce5671461029a5780635b2ae25b146102b8576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b604051808215151515815260200191505060405180910390f35b6101e061082d565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610837565b604051808215151515815260200191505060405180910390f35b610284610c6f565b6040518082815260200191505060405180910390f35b6102a2610c75565b6040518082815260200191505060405180910390f35b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7b565b604051808215151515815260200191505060405180910390f35b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cda565b604051808215151515815260200191505060405180910390f35b610432600480360360608110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610e33565b604051808215151515815260200191505060405180910390f35b610454610fc4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fb600480360360208110156104e557600080fd5b8101908080359060200190929190505050611062565b604051808215151515815260200191505060405180910390f35b6105616004803603604081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611116565b604051808215151515815260200191505060405180910390f35b6105dd6004803603604081101561059157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611313565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b505050505081565b60006002600460208202016000369050146106a857fe5b600083148061073357506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61073c57600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000600654905090565b600060036004602082020160003690501461084e57fe5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561088757600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d357600080fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e73756666696369656e7420616c6c6f77616e63650000000000000000000081525060200191505060405180910390fd5b610a1783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae983600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbb83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60035481565b60025481565b6000610c8783836114ab565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260046020820201600036905014610cf157fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d2f5760009150610e2c565b826006541015610d425760009150610e2c565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d925760009150610e2c565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e1f5760009150610e2c565b610e298484611668565b91505b5092915050565b6000600360046020820201600036905014610e4a57fe5b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ed257600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a360019150509392505050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110a15760009050611111565b8160065410156110b45760009050611111565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111045760009050611111565b61110e33836117e7565b90505b919050565b600060026004602082020160003690501461112d57fe5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561117957600080fd5b6111cb83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115611412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156114a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115638160065461142390919063ffffffff16565b6006819055506115bb81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36117df83836117e7565b905092915050565b60008160066000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509291505056fea165627a7a72305820565f0dc3cb5f1f51c8f2fa804216893e029f42ca5103cc4cf2e552cca0da3b4f0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461044c578063a0712d68146104cf578063a9059cbb14610515578063dd62ed3e1461057b576100ea565b806370a082311461031e5780637c8d56b8146103765780639281cd65146103dc576100ea565b806323b872dd116100c857806323b872dd146101f65780632ff2e9dc1461027c578063313ce5671461029a5780635b2ae25b146102b8576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b604051808215151515815260200191505060405180910390f35b6101e061082d565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610837565b604051808215151515815260200191505060405180910390f35b610284610c6f565b6040518082815260200191505060405180910390f35b6102a2610c75565b6040518082815260200191505060405180910390f35b610304600480360360408110156102ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c7b565b604051808215151515815260200191505060405180910390f35b6103606004803603602081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c91565b6040518082815260200191505060405180910390f35b6103c26004803603604081101561038c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cda565b604051808215151515815260200191505060405180910390f35b610432600480360360608110156103f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610e33565b604051808215151515815260200191505060405180910390f35b610454610fc4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104fb600480360360208110156104e557600080fd5b8101908080359060200190929190505050611062565b604051808215151515815260200191505060405180910390f35b6105616004803603604081101561052b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611116565b604051808215151515815260200191505060405180910390f35b6105dd6004803603604081101561059157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611313565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106895780601f1061065e57610100808354040283529160200191610689565b820191906000526020600020905b81548152906001019060200180831161066c57829003601f168201915b505050505081565b60006002600460208202016000369050146106a857fe5b600083148061073357506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b61073c57600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b6000600654905090565b600060036004602082020160003690501461084e57fe5b3073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561088757600080fd5b82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108d357600080fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e73756666696369656e7420616c6c6f77616e63650000000000000000000081525060200191505060405180910390fd5b610a1783600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ae983600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bbb83600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150509392505050565b60035481565b60025481565b6000610c8783836114ab565b6001905092915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260046020820201600036905014610cf157fe5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d2f5760009150610e2c565b826006541015610d425760009150610e2c565b82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d925760009150610e2c565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e1f5760009150610e2c565b610e298484611668565b91505b5092915050565b6000600360046020820201600036905014610e4a57fe5b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ed257600080fd5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a360019150509392505050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561105a5780601f1061102f5761010080835404028352916020019161105a565b820191906000526020600020905b81548152906001019060200180831161103d57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156110a15760009050611111565b8160065410156110b45760009050611111565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156111045760009050611111565b61110e33836117e7565b90505b919050565b600060026004602082020160003690501461112d57fe5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561117957600080fd5b6111cb83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461139a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061126083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115611412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156114a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115638160065461142390919063ffffffff16565b6006819055506115bb81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142390919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36117df83836117e7565b905092915050565b60008160066000828254039250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509291505056fea165627a7a72305820565f0dc3cb5f1f51c8f2fa804216893e029f42ca5103cc4cf2e552cca0da3b4f0029",
  "sourceMap": "138:4387:14:-;;;205:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;243:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;304:2;278:28;;367:8;;353:2;:23;344:5;:33;312:65;;667:72;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:72:14;699:33;705:10;717:14;;699:5;;;:33;;:::i;:::-;138:4387;;878:298;971:1;952:21;;:7;:21;;;;944:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:23;1052:5;1035:12;;:16;;;;;;:23;;;;:::i;:::-;1020:12;:38;;;;1089:29;1112:5;1089:9;:18;1099:7;1089:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;:::i;:::-;1068:9;:18;1078:7;1068:18;;;;;;;;;;;;;;;:50;;;;1154:7;1133:36;;1150:1;1133:36;;;1163:5;1133:36;;;;;;;;;;;;;;;;;;878:298;;:::o;1541:176:19:-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:1;1702:8;;;1541:176;;;;:::o;138:4387:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "138:4387:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:4387:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;205:32:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2637:304:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1196:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1960:671;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1960:671:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;312:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;278:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;745:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;745:127:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1291:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1291:104:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3617:406;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3617:406:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2947:328;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2947:328:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;243:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;243:28:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3293:302;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3293:302:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1539:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1539:415:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1401:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1401:132:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;205:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2637:304::-;2723:7;2711:1;641;636:2;625:8;:13;:17;606:8;;:15;;:36;599:44;;;;2761:1;2751:6;:11;2750:57;;;;2805:1;2768:11;:23;2780:10;2768:23;;;;;;;;;;;;;;;:33;2792:8;2768:33;;;;;;;;;;;;;;;;:38;2750:57;2742:66;;;;;;2854:6;2818:11;:23;2830:10;2818:23;;;;;;;;;;;;;;;:33;2842:8;2818:33;;;;;;;;;;;;;;;:42;;;;2896:8;2875:38;;2884:10;2875:38;;;2906:6;2875:38;;;;;;;;;;;;;;;;;;2930:4;2923:11;;2637:304;;;;;:::o;1196:89::-;1240:7;1266:12;;1259:19;;1196:89;:::o;1960:671::-;2061:7;2049:1;641;636:2;625:8;:13;:17;606:8;;:15;;:36;599:44;;;;2105:4;2088:22;;:5;:22;;;;2080:31;;;;;;2189:6;2169:9;:16;2179:5;2169:16;;;;;;;;;;;;;;;;:26;;2161:35;;;;;;2293:6;2259:11;:18;2271:5;2259:18;;;;;;;;;;;;;;;:30;2278:10;2259:30;;;;;;;;;;;;;;;;:40;;2251:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:28;2377:6;2356:9;:16;2366:5;2356:16;;;;;;;;;;;;;;;;:20;;:28;;;;:::i;:::-;2337:9;:16;2347:5;2337:16;;;;;;;;;;;;;;;:47;;;;2427:42;2462:6;2427:11;:18;2439:5;2427:18;;;;;;;;;;;;;;;:30;2446:10;2427:30;;;;;;;;;;;;;;;;:34;;:42;;;;:::i;:::-;2394:11;:18;2406:5;2394:18;;;;;;;;;;;;;;;:30;2413:10;2394:30;;;;;;;;;;;;;;;:75;;;;2496:26;2515:6;2496:9;:14;2506:3;2496:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;2479:9;:14;2489:3;2479:14;;;;;;;;;;;;;;;:43;;;;2590:3;2574:28;;2583:5;2574:28;;;2595:6;2574:28;;;;;;;;;;;;;;;;;;2620:4;2613:11;;1960:671;;;;;;:::o;312:65::-;;;;:::o;278:28::-;;;;:::o;745:127::-;812:4;828:16;834:2;838:5;828;:16::i;:::-;861:4;854:11;;745:127;;;;:::o;1291:104::-;1346:7;1372:9;:16;1382:5;1372:16;;;;;;;;;;;;;;;;1365:23;;1291:104;;;:::o;3617:406::-;3706:7;3694:1;641;636:2;625:8;:13;:17;606:8;;:15;;:36;599:44;;;;3744:1;3729:17;;:3;:17;;;3725:47;;;3767:5;3760:12;;;;3725:47;3802:6;3787:12;;:21;3783:51;;;3829:5;3822:12;;;;3783:51;3866:6;3849:9;:14;3859:3;3849:14;;;;;;;;;;;;;;;;:23;3845:53;;;3893:5;3886:12;;;;3845:53;3944:6;3913:11;:16;3925:3;3913:16;;;;;;;;;;;;;;;:28;3930:10;3913:28;;;;;;;;;;;;;;;;:37;3909:67;;;3971:5;3964:12;;;;3909:67;3994:22;4004:3;4009:6;3994:9;:22::i;:::-;3987:29;;653:1;3617:406;;;;;:::o;2947:328::-;3062:7;3050:1;641;636:2;625:8;:13;:17;606:8;;:15;;:36;599:44;;;;3126:9;3089:11;:23;3101:10;3089:23;;;;;;;;;;;;;;;:33;3113:8;3089:33;;;;;;;;;;;;;;;;:46;3081:55;;;;;;3182:9;3146:11;:23;3158:10;3146:23;;;;;;;;;;;;;;;:33;3170:8;3146:33;;;;;;;;;;;;;;;:45;;;;3227:8;3206:41;;3215:10;3206:41;;;3237:9;3206:41;;;;;;;;;;;;;;;;;;3264:4;3257:11;;2947:328;;;;;;:::o;243:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3293:302::-;3339:7;3384:1;3362:24;;:10;:24;;;3358:54;;;3407:5;3400:12;;;;3358:54;3442:6;3427:12;;:21;3423:51;;;3469:5;3462:12;;;;3423:51;3513:6;3489:9;:21;3499:10;3489:21;;;;;;;;;;;;;;;;:30;3485:60;;;3540:5;3533:12;;;;3485:60;3563:25;3569:10;3581:6;3563:5;:25::i;:::-;3556:32;;3293:302;;;;:::o;1539:415::-;1621:7;1609:1;641;636:2;625:8;:13;:17;606:8;;:15;;:36;599:44;;;;1712:6;1687:9;:21;1697:10;1687:21;;;;;;;;;;;;;;;;:31;;1679:40;;;;;;1754:33;1780:6;1754:9;:21;1764:10;1754:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;1730:9;:21;1740:10;1730:21;;;;;;;;;;;;;;;:57;;;;1814:26;1833:6;1814:9;:14;1824:3;1814:14;;;;;;;;;;;;;;;;:18;;:26;;;;:::i;:::-;1797:9;:14;1807:3;1797:14;;;;;;;;;;;;;;;:43;;;;1913:3;1892:33;;1901:10;1892:33;;;1918:6;1892:33;;;;;;;;;;;;;;;;;;1943:4;1936:11;;1539:415;;;;;:::o;1401:132::-;1473:7;1499:11;:18;1511:5;1499:18;;;;;;;;;;;;;;;:27;1518:7;1499:27;;;;;;;;;;;;;;;;1492:34;;1401:132;;;;:::o;1279:179:19:-;1337:7;1369:1;1364;:6;;1356:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:9;1431:1;1427;:5;1415:17;;1450:1;1443:8;;;1279:179;;;;:::o;1541:176::-;1599:7;1618:9;1634:1;1630;:5;1618:17;;1658:1;1653;:6;;1645:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:1;1702:8;;;1541:176;;;;:::o;878:298:14:-;971:1;952:21;;:7;:21;;;;944:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:23;1052:5;1035:12;;:16;;:23;;;;:::i;:::-;1020:12;:38;;;;1089:29;1112:5;1089:9;:18;1099:7;1089:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;1068:9;:18;1078:7;1068:18;;;;;;;;;;;;;;;:50;;;;1154:7;1133:36;;1150:1;1133:36;;;1163:5;1133:36;;;;;;;;;;;;;;;;;;878:298;;:::o;4263:260::-;4334:7;4390:6;4353:11;:21;4365:8;4353:21;;;;;;;;;;;;;;;:33;4375:10;4353:33;;;;;;;;;;;;;;;;:43;;;;;;;;;;;4430:10;4411:65;;4420:8;4411:65;;;4442:11;:21;4454:8;4442:21;;;;;;;;;;;;;;;:33;4464:10;4442:33;;;;;;;;;;;;;;;;4411:65;;;;;;;;;;;;;;;;;;4493:23;4499:8;4509:6;4493:5;:23::i;:::-;4486:30;;4263:260;;;;:::o;4029:228::-;4096:7;4131:6;4115:12;;:22;;;;;;;;;;;4170:6;4147:9;:19;4157:8;4147:19;;;;;;;;;;;;;;;;:29;;;;;;;;;;;4218:1;4191:38;;4200:8;4191:38;;;4222:6;4191:38;;;;;;;;;;;;;;;;;;4246:4;4239:11;;4029:228;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../openzeppelin-solidity/token/ERC20/IERC20.sol\";\nimport \"../openzeppelin-solidity/math/SafeMath.sol\";\n\n\ncontract MockNMR is IERC20 {\n\n    using SafeMath for uint256;\n\n    string public name = \"Numeraire\";\n    string public symbol = \"NMR\";\n\n    uint256 public decimals = 18;\n    uint256 public INITIAL_SUPPLY = 10000 * (10 ** uint256(decimals));\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n\n    modifier onlyPayloadSize(uint256 numWords) {\n        assert(msg.data.length == numWords * 32 + 4);\n        _;\n    }\n\n    constructor () public {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    function mintMockTokens(address to, uint256 value) public returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n    function _mint(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(value);\n        _balances[account] = _balances[account].add(value);\n        emit Transfer(address(0), account, value);\n    }\n\n    // ERC20\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address owner) public view returns (uint256) {\n        return _balances[owner];\n    }\n\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function transfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        // Check for sufficient funds.\n        require(_balances[msg.sender] >= _value);\n\n        _balances[msg.sender] = _balances[msg.sender].sub(_value);\n        _balances[_to] = _balances[_to].add(_value);\n\n        // Notify anyone listening.\n        emit Transfer(msg.sender, _to, _value);\n\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3) returns (bool ok) {\n        require(_from != address(this));\n\n        // Check for sufficient funds.\n        require(_balances[_from] >= _value);\n        // Check for authorization to spend.\n        require(_allowances[_from][msg.sender] >= _value, \"insufficient allowance\");\n\n        _balances[_from] = _balances[_from].sub(_value);\n        _allowances[_from][msg.sender] = _allowances[_from][msg.sender].sub(_value);\n        _balances[_to] = _balances[_to].add(_value);\n\n        // Notify anyone listening.\n        emit Transfer(_from, _to, _value);\n\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        require((_value == 0) || (_allowances[msg.sender][_spender] == 0));\n        _allowances[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function changeApproval(address _spender, uint256 _oldValue, uint256 _newValue) public onlyPayloadSize(3) returns (bool ok) {\n        require(_allowances[msg.sender][_spender] == _oldValue);\n        _allowances[msg.sender][_spender] = _newValue;\n        emit Approval(msg.sender, _spender, _newValue);\n        return true;\n    }\n\n    // burn\n    function mint(uint256 _value) public returns (bool ok) {\n        if (msg.sender == address(0))\n            return false;\n\n        if (_totalSupply < _value)\n            return false;\n\n        if (_balances[msg.sender] < _value)\n            return false;\n\n        return _burn(msg.sender, _value);\n    }\n\n    // burnFrom\n    function numeraiTransfer(address _to, uint256 _value) public onlyPayloadSize(2) returns (bool ok) {\n        if (_to == address(0))\n            return false;\n\n        if (_totalSupply < _value)\n            return false;\n\n        if (_balances[_to] < _value)\n            return false;\n\n        if (_allowances[_to][msg.sender] < _value)\n            return false;\n\n        return _burnFrom(_to, _value);\n    }\n\n    function _burn(address _account, uint256 _value) internal returns (bool ok) {\n        _totalSupply -= _value;\n        _balances[_account] -= _value;\n        emit Transfer(_account, address(0), _value);\n        return true;\n    }\n\n    function _burnFrom(address _account, uint256 _value) internal returns (bool ok) {\n        _allowances[_account][msg.sender] -= _value;\n        emit Approval(_account, msg.sender, _allowances[_account][msg.sender]);\n        return _burn(_account, _value);\n    }\n}\n"
}
